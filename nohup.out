-+=> 0 <=+-
>sampler selecting 1 from 3 = [1]
>sampler selecting 3 from 5 = [2, 0, 1]
>sampler selecting 3 from 3 = [1, 2, 2]
>sampler selecting 5 from 5 = [3, 2, 1, 0, 2]
>sampler selecting 3 from 5 = [2, 1, 0]
>sampler selecting 4 from 5 = [4, 3, 3, 2]
>sampler selecting 2 from 3 = [0, 1]
>sampler selecting 1 from 5 = [3]
>sampler selecting 5 from 5 = [3, 2, 0, 1, 2]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 3 from 5 = [4, 2, 3]
>sampler selecting 2 from 5 = [1, 2]
>sampler selecting 2 from 3 = [2, 1]
>sampler selecting 3 from 5 = [3, 2, 3]
>sampler selecting 1 from 5 = [0]
>sampler selecting 3 from 3 = [2, 2, 1]
>sampler selecting 1 from 5 = [1]
>sampler selecting 2 from 5 = [4, 3]
>sampler selecting 4 from 5 = [3, 4, 1, 1]
>sampler selecting 1 from 3 = [2]
>sampler selecting 5 from 5 = [3, 1, 4, 4, 2]
>sampler selecting 2 from 3 = [2, 1]
>sampler selecting 4 from 5 = [4, 1, 2, 2]
>sampler selecting 5 from 5 = [3, 1, 0, 1, 1]
>sampler selecting 3 from 3 = [2, 0, 1]
>sampler selecting 1 from 5 = [0]
>sampler selecting 1 from 5 = [1]
>sampler selecting 1 from 5 = [3]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 4 from 5 = [3, 2, 1, 4]
>sampler selecting 4 from 5 = [4, 2, 1, 0]
>sampler selecting 1 from 3 = [0]
>sampler selecting 5 from 5 = [3, 0, 3, 4, 3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 1 from 5 = [4]
>sampler selecting 2 from 3 = [0, 1]
>sampler selecting 4 from 5 = [3, 3, 1, 0]
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 2 from 5 = [0, 3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [1, 2, 4, 1]
>sampler selecting 2 from 3 = [0, 1]
>sampler selecting 1 from 5 = [1]
>sampler selecting 5 from 5 = [1, 2, 3, 2, 3]
>sampler selecting 2 from 3 = [1, 2]
>sampler selecting 4 from 5 = [3, 2, 3, 3]
>sampler selecting 4 from 5 = [1, 4, 1, 2]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 3 from 5 = [3, 0, 1]
>sampler selecting 2 from 5 = [2, 3]
>sampler selecting 2 from 3 = [1, 0]
>sampler selecting 1 from 5 = [3]
>sampler selecting 5 from 5 = [2, 2, 4, 2, 1]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 2 from 5 = [1, 3]
generation =  0
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.455355577359
| | |-finished  1  forest. fitness = 0.687117303535
| | |-MSE =  0.463130902542
| | |-finished  2  forest. fitness = 0.683465845922
| | |-MSE =  0.454814755017
| | |-finished  3  forest. fitness = 0.687372737011
| | |-MSE =  0.453016761106
| | |-finished  4  forest. fitness = 0.688223306687
| | |-MSE =  0.576020554765
| | |-finished  5  forest. fitness = 0.634509490994
| | |-MSE =  0.533299244227
| | |-finished  6  forest. fitness = 0.652188412513
| | |-MSE =  0.577673911623
| | |-finished  7  forest. fitness = 0.633844543307
| | |-MSE =  0.566384885355
| | |-finished  8  forest. fitness = 0.638412697511
| | |-MSE =  0.550090839163
| | |-finished  9  forest. fitness = 0.645123482273
| | |-MSE =  0.595949554423
| | |-finished  10  forest. fitness = 0.626586220867
| | |-MSE =  0.449950931097
| | |-finished  11  forest. fitness = 0.689678511564
| | |-MSE =  0.455222975446
| | |-finished  12  forest. fitness = 0.687179914606
| | |-MSE =  0.49542939665
| | |-finished  13  forest. fitness = 0.668704254604
| | |-MSE =  0.474617604565
| | |-finished  14  forest. fitness = 0.67814191076
| | |-MSE =  0.549436008995
| | |-finished  15  forest. fitness = 0.645396127491
| | |-MSE =  0.456812988573
| | |-finished  16  forest. fitness = 0.686429904074
| | |-MSE =  0.500074694448
| | |-finished  17  forest. fitness = 0.666633470787
| | |-MSE =  0.589347824883
| | |-finished  18  forest. fitness = 0.629188893925
| | |-MSE =  0.449939176195
| | |-finished  19  forest. fitness = 0.689684102904
| | |-MSE =  0.467351797569
| | |-finished  20  forest. fitness = 0.681499829595
avg =  0.664969048047 max =  0.689684102904
|-spawn
selected for crossover -> 0.687117303535 0.687179914606
>sampler distinct selecting 3 from 4 = [1, 1, 1]
selected for crossover -> 0.687372737011 0.67814191076
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.689684102904 0.683465845922
>sampler distinct selecting 2 from 5 = [3, 2]
selected for crossover -> 0.666633470787 0.686429904074
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.689684102904 0.686429904074
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.687179914606 0.687117303535
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.681499829595 0.645123482273
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.633844543307 0.629188893925
>sampler distinct selecting 3 from 4 = [1, 1, 0]
selected for crossover -> 0.67814191076 0.687372737011
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.626586220867 0.645123482273
>sampler distinct selecting 2 from 4 = [2, 1]
selected for crossover -> 0.687372737011 0.645396127491
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.689684102904 0.629188893925
>sampler distinct selecting 2 from 5 = [0, 2]
selected for crossover -> 0.681499829595 0.686429904074
>sampler distinct selecting 4 from 4 = [0, 1, 1, 0]
selected for crossover -> 0.683465845922 0.687117303535
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.688223306687 0.666633470787
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.638412697511 0.666633470787
>sampler distinct selecting 3 from 5 = [0, 0, 1]
selected for crossover -> 0.687179914606 0.689684102904
>sampler distinct selecting 2 from 5 = [1, 1]
selected for crossover -> 0.629188893925 0.681499829595
>sampler distinct selecting 2 from 5 = [3, 1]
selected for crossover -> 0.626586220867 0.689684102904
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.645123482273 0.687179914606
>sampler distinct selecting 1 from 4 = [1]
|- mutate
>sampler selecting 4 from 5 = [2, 2, 3, 2]
generation =  1
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.52021071495
| | |-finished  1  forest. fitness = 0.657803546683
| | |-MSE =  0.425328786481
| | |-finished  2  forest. fitness = 0.701592509381
| | |-MSE =  0.462401859486
| | |-finished  3  forest. fitness = 0.683806570344
| | |-MSE =  0.430813426469
| | |-finished  4  forest. fitness = 0.698903142437
| | |-MSE =  0.464096811636
| | |-finished  5  forest. fitness = 0.683014942764
| | |-MSE =  0.456700513853
| | |-finished  6  forest. fitness = 0.686482904681
| | |-MSE =  0.521588006946
| | |-finished  7  forest. fitness = 0.657208124299
| | |-MSE =  0.559958093356
| | |-finished  8  forest. fitness = 0.641042861509
| | |-MSE =  0.446168302717
| | |-finished  9  forest. fitness = 0.691482449257
| | |-MSE =  0.458443284031
| | |-finished  10  forest. fitness = 0.685662590345
| | |-MSE =  0.470257449197
| | |-finished  11  forest. fitness = 0.680152989904
| | |-MSE =  0.450937212024
| | |-finished  12  forest. fitness = 0.689209699574
| | |-MSE =  0.442562402129
| | |-finished  13  forest. fitness = 0.693210913111
| | |-MSE =  0.561573927198
| | |-finished  14  forest. fitness = 0.640379544371
| | |-MSE =  0.439014665406
| | |-finished  15  forest. fitness = 0.694919950463
| | |-MSE =  0.448015461589
| | |-finished  16  forest. fitness = 0.69060036065
| | |-MSE =  0.639905762065
| | |-finished  17  forest. fitness = 0.609791137474
| | |-MSE =  0.552033169372
| | |-finished  18  forest. fitness = 0.644316126571
| | |-MSE =  0.439049020704
| | |-finished  19  forest. fitness = 0.694903360214
| | |-MSE =  0.433527022567
| | |-finished  20  forest. fitness = 0.697580153187
avg =  0.676103193861 max =  0.701592509381
|-spawn
selected for crossover -> 0.685662590345 0.683014942764
>sampler distinct selecting 3 from 3 = [2, 0, 0]
selected for crossover -> 0.644316126571 0.683806570344
>sampler distinct selecting 2 from 5 = [1, 1]
selected for crossover -> 0.686482904681 0.644316126571
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.640379544371 0.680152989904
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.685662590345 0.701592509381
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.689209699574 0.691482449257
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.686482904681 0.698903142437
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.697580153187 0.657803546683
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.644316126571 0.697580153187
>sampler distinct selecting 4 from 5 = [2, 0, 2, 0]
selected for crossover -> 0.609791137474 0.683014942764
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.701592509381 0.640379544371
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.701592509381 0.683014942764
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.697580153187 0.693210913111
>sampler distinct selecting 2 from 4 = [0, 2]
selected for crossover -> 0.694919950463 0.694903360214
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.641042861509 0.686482904681
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.680152989904 0.641042861509
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.686482904681 0.657208124299
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.691482449257 0.680152989904
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.701592509381 0.644316126571
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.697580153187 0.686482904681
>sampler distinct selecting 2 from 3 = [1, 0]
|- mutate
generation =  2
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.436784477624
| | |-finished  1  forest. fitness = 0.69599861049
| | |-MSE =  0.45564522214
| | |-finished  2  forest. fitness = 0.686980580701
| | |-MSE =  0.465104678272
| | |-finished  3  forest. fitness = 0.682545086935
| | |-MSE =  0.461548477386
| | |-finished  4  forest. fitness = 0.684205837488
| | |-MSE =  0.457389301172
| | |-finished  5  forest. fitness = 0.686158461021
| | |-MSE =  0.442728406103
| | |-finished  6  forest. fitness = 0.693131150513
| | |-MSE =  0.453618145255
| | |-finished  7  forest. fitness = 0.687938578137
| | |-MSE =  0.522974216513
| | |-finished  8  forest. fitness = 0.656609934139
| | |-MSE =  0.548615353248
| | |-finished  9  forest. fitness = 0.645738141432
| | |-MSE =  0.550334736175
| | |-finished  10  forest. fitness = 0.645021992132
| | |-MSE =  0.445245488269
| | |-finished  11  forest. fitness = 0.691923972859
| | |-MSE =  0.536250994141
| | |-finished  12  forest. fitness = 0.650935298863
| | |-MSE =  0.456676194895
| | |-finished  13  forest. fitness = 0.686494365395
| | |-MSE =  0.44978317656
| | |-finished  14  forest. fitness = 0.689758314325
| | |-MSE =  0.456514113216
| | |-finished  15  forest. fitness = 0.686570758859
| | |-MSE =  0.580574835035
| | |-finished  16  forest. fitness = 0.632681210553
| | |-MSE =  0.557101207021
| | |-finished  17  forest. fitness = 0.642219012798
| | |-MSE =  0.515325711286
| | |-finished  18  forest. fitness = 0.659924128887
| | |-MSE =  0.565346697299
| | |-finished  19  forest. fitness = 0.638836113256
| | |-MSE =  0.437095698537
| | |-finished  20  forest. fitness = 0.695847883351
avg =  0.671975971607 max =  0.69599861049
|-spawn
selected for crossover -> 0.686980580701 0.684205837488
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.659924128887 0.686158461021
>sampler distinct selecting 3 from 5 = [0, 1, 0]
selected for crossover -> 0.686980580701 0.693131150513
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.656609934139 0.686570758859
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.656609934139 0.642219012798
>sampler distinct selecting 3 from 5 = [0, 2, 1]
selected for crossover -> 0.645021992132 0.693131150513
>sampler distinct selecting 4 from 4 = [2, 0, 1, 0]
selected for crossover -> 0.691923972859 0.695847883351
>sampler distinct selecting 3 from 4 = [0, 1, 0]
selected for crossover -> 0.691923972859 0.69599861049
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.695847883351 0.686158461021
>sampler distinct selecting 3 from 5 = [0, 1, 1]
selected for crossover -> 0.686494365395 0.691923972859
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.684205837488 0.687938578137
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.695847883351 0.645738141432
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.693131150513 0.686980580701
>sampler distinct selecting 3 from 4 = [1, 1, 0]
selected for crossover -> 0.695847883351 0.638836113256
>sampler distinct selecting 4 from 6 = [1, 1, 2, 2]
selected for crossover -> 0.686980580701 0.691923972859
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.687938578137 0.686980580701
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.691923972859 0.686980580701
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.691923972859 0.69599861049
>sampler distinct selecting 2 from 5 = [0, 2]
selected for crossover -> 0.686158461021 0.656609934139
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.684205837488 0.686158461021
>sampler distinct selecting 1 from 5 = [2]
|- mutate
>sampler selecting 1 from 3 = [1]
>sampler selecting 3 from 5 = [1, 1, 0]
generation =  3
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.457082318831
| | |-finished  1  forest. fitness = 0.686303022881
| | |-MSE =  0.446731374568
| | |-finished  2  forest. fitness = 0.691213322375
| | |-MSE =  0.430209901071
| | |-finished  3  forest. fitness = 0.699198068236
| | |-MSE =  0.555797447951
| | |-finished  4  forest. fitness = 0.642757192665
| | |-MSE =  0.578043049905
| | |-finished  5  forest. fitness = 0.633696273406
| | |-MSE =  0.454900075654
| | |-finished  6  forest. fitness = 0.687332426971
| | |-MSE =  0.46238884441
| | |-finished  7  forest. fitness = 0.683812656136
| | |-MSE =  0.49667225766
| | |-finished  8  forest. fitness = 0.668148951704
| | |-MSE =  0.532253754625
| | |-finished  9  forest. fitness = 0.652633414656
| | |-MSE =  0.454632387845
| | |-finished  10  forest. fitness = 0.687458912888
| | |-MSE =  0.436961598591
| | |-finished  11  forest. fitness = 0.695912821178
| | |-MSE =  0.544735510536
| | |-finished  12  forest. fitness = 0.647360012882
| | |-MSE =  0.433990174987
| | |-finished  13  forest. fitness = 0.697354847643
| | |-MSE =  0.536171877572
| | |-finished  14  forest. fitness = 0.650968823606
| | |-MSE =  0.450501085622
| | |-finished  15  forest. fitness = 0.689416926269
| | |-MSE =  0.440803936233
| | |-finished  16  forest. fitness = 0.694056960043
| | |-MSE =  0.446274804487
| | |-finished  17  forest. fitness = 0.691431529401
| | |-MSE =  0.44623982019
| | |-finished  18  forest. fitness = 0.691448255012
| | |-MSE =  0.450048606114
| | |-finished  19  forest. fitness = 0.689632054942
| | |-MSE =  0.459338851056
| | |-finished  20  forest. fitness = 0.685241812946
avg =  0.678268914292 max =  0.699198068236
|-spawn
selected for crossover -> 0.642757192665 0.694056960043
>sampler distinct selecting 2 from 4 = [2, 1]
selected for crossover -> 0.686303022881 0.689416926269
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.695912821178 0.647360012882
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.691448255012 0.699198068236
>sampler distinct selecting 3 from 4 = [1, 1, 0]
selected for crossover -> 0.689416926269 0.691448255012
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.695912821178 0.642757192665
>sampler distinct selecting 2 from 4 = [0, 2]
selected for crossover -> 0.650968823606 0.642757192665
>sampler distinct selecting 2 from 6 = [0, 0]
selected for crossover -> 0.689632054942 0.687332426971
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.686303022881 0.695912821178
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.694056960043 0.652633414656
>sampler distinct selecting 2 from 4 = [1, 2]
selected for crossover -> 0.691431529401 0.694056960043
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.699198068236 0.652633414656
>sampler distinct selecting 4 from 5 = [2, 1, 1, 0]
selected for crossover -> 0.691448255012 0.668148951704
>sampler distinct selecting 4 from 5 = [3, 2, 1, 1]
selected for crossover -> 0.687332426971 0.695912821178
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.695912821178 0.650968823606
>sampler distinct selecting 3 from 4 = [0, 0, 1]
selected for crossover -> 0.687458912888 0.683812656136
>sampler distinct selecting 3 from 5 = [4, 1, 0]
selected for crossover -> 0.697354847643 0.695912821178
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.686303022881 0.642757192665
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.691213322375 0.686303022881
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.689416926269 0.699198068236
>sampler distinct selecting 2 from 3 = [0, 0]
|- mutate
>sampler selecting 3 from 5 = [3, 2, 3]
>sampler selecting 2 from 3 = [1, 2]
>sampler selecting 1 from 5 = [1]
>sampler selecting 4 from 5 = [3, 0, 1, 0]
>sampler selecting 1 from 5 = [3]
generation =  4
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.461912877624
| | |-finished  1  forest. fitness = 0.684035290547
| | |-MSE =  0.464275028868
| | |-finished  2  forest. fitness = 0.682931812867
| | |-MSE =  0.442687035988
| | |-finished  3  forest. fitness = 0.69315102656
| | |-MSE =  0.429228122602
| | |-finished  4  forest. fitness = 0.699678367775
| | |-MSE =  0.456326128591
| | |-finished  5  forest. fitness = 0.686659382379
| | |-MSE =  0.432168911628
| | |-finished  6  forest. fitness = 0.698241661218
| | |-MSE =  0.433822217004
| | |-finished  7  forest. fitness = 0.697436535814
| | |-MSE =  0.441549864087
| | |-finished  8  forest. fitness = 0.693697821291
| | |-MSE =  0.524489751572
| | |-finished  9  forest. fitness = 0.655957181063
| | |-MSE =  0.491296358425
| | |-finished  10  forest. fitness = 0.670557528254
| | |-MSE =  0.439868184425
| | |-finished  11  forest. fitness = 0.694508018732
| | |-MSE =  0.467966358465
| | |-finished  12  forest. fitness = 0.681214521187
| | |-MSE =  0.457636666548
| | |-finished  13  forest. fitness = 0.686042017843
| | |-MSE =  0.438292532027
| | |-finished  14  forest. fitness = 0.695268853681
| | |-MSE =  0.507185403425
| | |-finished  15  forest. fitness = 0.663488378887
| | |-MSE =  0.466741030541
| | |-finished  16  forest. fitness = 0.681783613588
| | |-MSE =  0.522646284585
| | |-finished  17  forest. fitness = 0.656751348047
| | |-MSE =  0.450494617578
| | |-finished  18  forest. fitness = 0.689420000517
| | |-MSE =  0.483776871825
| | |-finished  19  forest. fitness = 0.673955780676
| | |-MSE =  0.452644328809
| | |-finished  20  forest. fitness = 0.688399754963
avg =  0.683658944794 max =  0.699678367775
|-spawn
selected for crossover -> 0.681783613588 0.686659382379
>sampler distinct selecting 2 from 3 = [2, 0]
selected for crossover -> 0.681783613588 0.655957181063
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.695268853681 0.698241661218
>sampler distinct selecting 4 from 5 = [1, 0, 1, 1]
selected for crossover -> 0.686042017843 0.656751348047
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.673955780676 0.655957181063
>sampler distinct selecting 3 from 5 = [0, 2, 0]
selected for crossover -> 0.681783613588 0.656751348047
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.670557528254 0.682931812867
>sampler distinct selecting 2 from 5 = [1, 0]
selected for crossover -> 0.69315102656 0.663488378887
>sampler distinct selecting 3 from 4 = [3, 1, 1]
selected for crossover -> 0.694508018732 0.670557528254
>sampler distinct selecting 4 from 6 = [5, 2, 2, 0]
selected for crossover -> 0.681214521187 0.655957181063
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.656751348047 0.695268853681
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.693697821291 0.686659382379
>sampler distinct selecting 5 from 6 = [0, 2, 2, 0, 0]
selected for crossover -> 0.699678367775 0.697436535814
>sampler distinct selecting 2 from 5 = [3, 3]
selected for crossover -> 0.655957181063 0.670557528254
>sampler distinct selecting 4 from 6 = [4, 1, 1, 1]
selected for crossover -> 0.670557528254 0.682931812867
>sampler distinct selecting 5 from 5 = [2, 3, 0, 0, 0]
selected for crossover -> 0.670557528254 0.673955780676
>sampler distinct selecting 5 from 7 = [4, 3, 0, 0, 2]
selected for crossover -> 0.684035290547 0.686659382379
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.688399754963 0.663488378887
>sampler distinct selecting 3 from 5 = [1, 0, 0]
selected for crossover -> 0.682931812867 0.697436535814
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.698241661218 0.655957181063
>sampler distinct selecting 3 from 5 = [4, 1, 1]
|- mutate
>sampler selecting 1 from 5 = [1]
>sampler selecting 2 from 5 = [3, 2]
generation =  5
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.455597832769
| | |-finished  1  forest. fitness = 0.687002946479
| | |-MSE =  0.45501000546
| | |-finished  2  forest. fitness = 0.687280497211
| | |-MSE =  0.469841342876
| | |-finished  3  forest. fitness = 0.680345538549
| | |-MSE =  0.460811839706
| | |-finished  4  forest. fitness = 0.6845508592
| | |-MSE =  0.457110525452
| | |-finished  5  forest. fitness = 0.686289737486
| | |-MSE =  0.439857106884
| | |-finished  6  forest. fitness = 0.694513361929
| | |-MSE =  0.451127822967
| | |-finished  7  forest. fitness = 0.689119169361
| | |-MSE =  0.546283796227
| | |-finished  8  forest. fitness = 0.646711814765
| | |-MSE =  0.436412114431
| | |-finished  9  forest. fitness = 0.696179035218
| | |-MSE =  0.469692272507
| | |-finished  10  forest. fitness = 0.680414545757
| | |-MSE =  0.450876039029
| | |-finished  11  forest. fitness = 0.689238758584
| | |-MSE =  0.559714061769
| | |-finished  12  forest. fitness = 0.641143158552
| | |-MSE =  0.544713405924
| | |-finished  13  forest. fitness = 0.647369276505
| | |-MSE =  0.454266848524
| | |-finished  14  forest. fitness = 0.687631710105
| | |-MSE =  0.516865105019
| | |-finished  15  forest. fitness = 0.6592544035
| | |-MSE =  0.514138917981
| | |-finished  16  forest. fitness = 0.660441382309
| | |-MSE =  0.446089453529
| | |-finished  17  forest. fitness = 0.691520152892
| | |-MSE =  0.432967974694
| | |-finished  18  forest. fitness = 0.697852302117
| | |-MSE =  0.442208030936
| | |-finished  19  forest. fitness = 0.693381244973
| | |-MSE =  0.450566156216
| | |-finished  20  forest. fitness = 0.689385999883
avg =  0.679481294769 max =  0.697852302117
|-spawn
selected for crossover -> 0.687631710105 0.693381244973
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.689238758584 0.680414545757
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.6845508592 0.647369276505
>sampler distinct selecting 6 from 8 = [2, 1, 2, 1, 0, 1]
selected for crossover -> 0.686289737486 0.647369276505
>sampler distinct selecting 4 from 8 = [2, 4, 3, 1]
selected for crossover -> 0.694513361929 0.660441382309
>sampler distinct selecting 1 from 7 = [0]
selected for crossover -> 0.647369276505 0.686289737486
>sampler distinct selecting 1 from 8 = [1]
selected for crossover -> 0.687002946479 0.697852302117
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.693381244973 0.680345538549
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.689119169361 0.697852302117
>sampler distinct selecting 4 from 6 = [1, 2, 0, 2]
selected for crossover -> 0.686289737486 0.6592544035
>sampler distinct selecting 2 from 7 = [6, 0]
selected for crossover -> 0.6845508592 0.660441382309
>sampler distinct selecting 4 from 8 = [4, 5, 3, 2]
selected for crossover -> 0.680345538549 0.693381244973
>sampler distinct selecting 3 from 4 = [2, 1, 0]
selected for crossover -> 0.660441382309 0.646711814765
>sampler distinct selecting 4 from 6 = [3, 0, 1, 0]
selected for crossover -> 0.641143158552 0.694513361929
>sampler distinct selecting 5 from 8 = [7, 1, 3, 2, 3]
selected for crossover -> 0.689385999883 0.689238758584
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.660441382309 0.694513361929
>sampler distinct selecting 5 from 7 = [2, 4, 0, 2, 0]
selected for crossover -> 0.696179035218 0.641143158552
>sampler distinct selecting 2 from 9 = [5, 7]
selected for crossover -> 0.646711814765 0.647369276505
>sampler distinct selecting 2 from 6 = [0, 2]
selected for crossover -> 0.693381244973 0.687002946479
>sampler distinct selecting 3 from 5 = [0, 3, 1]
selected for crossover -> 0.6592544035 0.660441382309
>sampler distinct selecting 4 from 5 = [1, 2, 0, 0]
|- mutate
>sampler selecting 3 from 5 = [3, 3, 4]
generation =  6
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.446619603552
| | |-finished  1  forest. fitness = 0.691266727994
| | |-MSE =  0.430479728693
| | |-finished  2  forest. fitness = 0.699066180346
| | |-MSE =  0.581190865741
| | |-finished  3  forest. fitness = 0.632434718456
| | |-MSE =  0.439660813055
| | |-finished  4  forest. fitness = 0.694608056934
| | |-MSE =  0.592191436219
| | |-finished  5  forest. fitness = 0.628065179382
| | |-MSE =  0.559515288773
| | |-finished  6  forest. fitness = 0.641224877498
| | |-MSE =  0.425571800258
| | |-finished  7  forest. fitness = 0.701472910603
| | |-MSE =  0.438510408262
| | |-finished  8  forest. fitness = 0.695163548527
| | |-MSE =  0.62542590264
| | |-finished  9  forest. fitness = 0.615223369073
| | |-MSE =  0.621306080183
| | |-finished  10  forest. fitness = 0.616786683417
| | |-MSE =  0.631012259688
| | |-finished  11  forest. fitness = 0.613116176203
| | |-MSE =  0.525887359282
| | |-finished  12  forest. fitness = 0.655356369471
| | |-MSE =  0.572277247626
| | |-finished  13  forest. fitness = 0.636020143082
| | |-MSE =  0.45093519086
| | |-finished  15  forest. fitness = 0.689210659649
| | |-MSE =  0.544690028327
| | |-finished  15  forest. fitness = 0.6473790739
| | |-MSE =  0.630702312787
| | |-finished  16  forest. fitness = 0.613232710936
| | |-MSE =  0.557038593127
| | |-finished  17  forest. fitness = 0.642244838641
| | |-MSE =  0.43483489047
| | |-finished  18  forest. fitness = 0.696944301147
| | |-MSE =  0.463919725768
| | |-finished  19  forest. fitness = 0.683097564981
| | |-MSE =  0.600149125219
| | |-finished  20  forest. fitness = 0.62494175339
avg =  0.655842792181 max =  0.701472910603
|-spawn
selected for crossover -> 0.696944301147 0.689210659649
>sampler distinct selecting 2 from 3 = [2, 0]
selected for crossover -> 0.632434718456 0.6473790739
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.642244838641 0.699066180346
>sampler distinct selecting 3 from 5 = [1, 0, 1]
selected for crossover -> 0.628065179382 0.694608056934
>sampler distinct selecting 3 from 6 = [1, 0, 3]
selected for crossover -> 0.699066180346 0.683097564981
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.628065179382 0.613116176203
>sampler distinct selecting 2 from 9 = [4, 5]
selected for crossover -> 0.691266727994 0.636020143082
>sampler distinct selecting 5 from 7 = [6, 2, 2, 3, 0]
selected for crossover -> 0.655356369471 0.694608056934
>sampler distinct selecting 3 from 4 = [1, 2, 0]
selected for crossover -> 0.6473790739 0.641224877498
>sampler distinct selecting 5 from 6 = [5, 2, 1, 1, 0]
selected for crossover -> 0.691266727994 0.655356369471
>sampler distinct selecting 3 from 5 = [0, 0, 1]
selected for crossover -> 0.695163548527 0.691266727994
>sampler distinct selecting 3 from 4 = [1, 0, 0]
selected for crossover -> 0.696944301147 0.636020143082
>sampler distinct selecting 3 from 5 = [4, 1, 1]
selected for crossover -> 0.632434718456 0.694608056934
>sampler distinct selecting 5 from 6 = [0, 2, 0, 0, 0]
selected for crossover -> 0.641224877498 0.615223369073
>sampler distinct selecting 4 from 10 = [4, 1, 2, 0]
selected for crossover -> 0.616786683417 0.642244838641
>sampler distinct selecting 3 from 9 = [3, 0, 4]
selected for crossover -> 0.696944301147 0.628065179382
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.632434718456 0.615223369073
>sampler distinct selecting 4 from 10 = [3, 2, 7, 1]
selected for crossover -> 0.699066180346 0.683097564981
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.696944301147 0.628065179382
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.694608056934 0.636020143082
>sampler distinct selecting 2 from 6 = [0, 4]
|- mutate
>sampler selecting 3 from 5 = [2, 1, 0]
>sampler selecting 1 from 5 = [1]
generation =  7
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.450364625682
| | |-finished  1  forest. fitness = 0.689481791194
| | |-MSE =  0.543038382608
| | |-finished  2  forest. fitness = 0.648072018993
| | |-MSE =  0.571001588663
| | |-finished  3  forest. fitness = 0.636536593735
| | |-MSE =  0.579638711758
| | |-finished  4  forest. fitness = 0.633056149205
| | |-MSE =  0.460105652696
| | |-finished  5  forest. fitness = 0.684881945463
| | |-MSE =  0.665393639241
| | |-finished  6  forest. fitness = 0.60045864019
| | |-MSE =  0.570503570235
| | |-finished  7  forest. fitness = 0.63673844425
| | |-MSE =  0.52742214455
| | |-finished  8  forest. fitness = 0.654697853876
| | |-MSE =  0.651644988203
| | |-finished  9  forest. fitness = 0.605456988119
| | |-MSE =  0.574840091491
| | |-finished  10  forest. fitness = 0.634985104458
| | |-MSE =  0.579819859815
| | |-finished  11  forest. fitness = 0.632983560618
| | |-MSE =  0.437577558218
| | |-finished  12  forest. fitness = 0.695614643039
| | |-MSE =  0.565728157698
| | |-finished  13  forest. fitness = 0.638680472778
| | |-MSE =  0.562419037352
| | |-finished  14  forest. fitness = 0.640033164019
| | |-MSE =  0.61285773346
| | |-finished  15  forest. fitness = 0.620017487751
| | |-MSE =  0.495608469816
| | |-finished  16  forest. fitness = 0.668624188871
| | |-MSE =  0.591790314935
| | |-finished  17  forest. fitness = 0.628223447911
| | |-MSE =  0.532404503583
| | |-finished  18  forest. fitness = 0.652569212412
| | |-MSE =  0.613973511672
| | |-finished  19  forest. fitness = 0.61958885494
| | |-MSE =  0.459769247724
| | |-finished  20  forest. fitness = 0.685039777046
avg =  0.645287016943 max =  0.695614643039
|-spawn
selected for crossover -> 0.684881945463 0.636536593735
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.61958885494 0.668624188871
>sampler distinct selecting 2 from 5 = [3, 1]
selected for crossover -> 0.61958885494 0.636536593735
>sampler distinct selecting 3 from 5 = [2, 0, 0]
selected for crossover -> 0.689481791194 0.605456988119
>sampler distinct selecting 2 from 5 = [3, 0]
selected for crossover -> 0.689481791194 0.648072018993
>sampler distinct selecting 4 from 7 = [3, 0, 3, 1]
selected for crossover -> 0.695614643039 0.638680472778
>sampler distinct selecting 4 from 6 = [3, 3, 0, 0]
selected for crossover -> 0.668624188871 0.640033164019
>sampler distinct selecting 4 from 6 = [2, 1, 2, 1]
selected for crossover -> 0.634985104458 0.628223447911
>sampler distinct selecting 3 from 6 = [3, 2, 2]
selected for crossover -> 0.63673844425 0.636536593735
>sampler distinct selecting 3 from 7 = [5, 1, 1]
selected for crossover -> 0.634985104458 0.654697853876
>sampler distinct selecting 4 from 4 = [2, 0, 0, 0]
selected for crossover -> 0.668624188871 0.636536593735
>sampler distinct selecting 3 from 4 = [0, 2, 1]
selected for crossover -> 0.695614643039 0.620017487751
>sampler distinct selecting 5 from 7 = [4, 1, 3, 1, 2]
selected for crossover -> 0.60045864019 0.689481791194
>sampler distinct selecting 4 from 7 = [3, 5, 2, 2]
selected for crossover -> 0.60045864019 0.636536593735
>sampler distinct selecting 3 from 7 = [5, 4, 0]
selected for crossover -> 0.620017487751 0.668624188871
>sampler distinct selecting 3 from 6 = [3, 3, 0]
selected for crossover -> 0.695614643039 0.620017487751
>sampler distinct selecting 5 from 7 = [1, 4, 4, 2, 0]
selected for crossover -> 0.633056149205 0.652569212412
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.685039777046 0.668624188871
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.684881945463 0.685039777046
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.689481791194 0.638680472778
>sampler distinct selecting 3 from 5 = [1, 1, 1]
|- mutate
>sampler selecting 3 from 3 = [1, 0, 1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 1 from 5 = [3]
>sampler selecting 1 from 5 = [3]
generation =  8
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.456469948165
| | |-finished  1  forest. fitness = 0.686591577986
| | |-MSE =  0.638888905743
| | |-finished  2  forest. fitness = 0.610169485251
| | |-MSE =  0.604932204727
| | |-finished  3  forest. fitness = 0.623079278399
| | |-MSE =  0.446978782616
| | |-finished  4  forest. fitness = 0.691095136994
| | |-MSE =  0.659891110866
| | |-finished  5  forest. fitness = 0.602449156727
| | |-MSE =  0.479850535299
| | |-finished  6  forest. fitness = 0.675743918826
| | |-MSE =  0.541293215211
| | |-finished  7  forest. fitness = 0.648805814579
| | |-MSE =  0.576760410661
| | |-finished  8  forest. fitness = 0.63421176308
| | |-MSE =  0.582857254214
| | |-finished  9  forest. fitness = 0.631768908622
| | |-MSE =  0.647112907699
| | |-finished  10  forest. fitness = 0.607122921158
| | |-MSE =  0.585732818371
| | |-finished  11  forest. fitness = 0.630623260372
| | |-MSE =  0.430451834799
| | |-finished  12  forest. fitness = 0.699079812177
| | |-MSE =  0.449167966719
| | |-finished  13  forest. fitness = 0.690051134834
| | |-MSE =  0.654896237579
| | |-finished  14  forest. fitness = 0.604267492603
| | |-MSE =  0.447772103241
| | |-finished  15  forest. fitness = 0.690716444779
| | |-MSE =  0.568755482747
| | |-finished  16  forest. fitness = 0.637447971336
| | |-MSE =  0.569325495726
| | |-finished  17  forest. fitness = 0.637216436439
| | |-MSE =  0.612236614043
| | |-finished  18  forest. fitness = 0.620256351512
| | |-MSE =  0.43959583078
| | |-finished  19  forest. fitness = 0.69463941102
| | |-MSE =  0.652893086123
| | |-finished  20  forest. fitness = 0.604999808152
avg =  0.646016804242 max =  0.699079812177
|-spawn
selected for crossover -> 0.637447971336 0.690716444779
>sampler distinct selecting 5 from 6 = [5, 0, 1, 1, 0]
selected for crossover -> 0.637447971336 0.602449156727
>sampler distinct selecting 3 from 7 = [2, 5, 3]
selected for crossover -> 0.63421176308 0.604267492603
>sampler distinct selecting 1 from 6 = [3]
selected for crossover -> 0.648805814579 0.675743918826
>sampler distinct selecting 5 from 5 = [3, 0, 0, 0, 0]
selected for crossover -> 0.607122921158 0.691095136994
>sampler distinct selecting 1 from 7 = [2]
selected for crossover -> 0.690716444779 0.690051134834
>sampler distinct selecting 3 from 5 = [3, 1, 0]
selected for crossover -> 0.631768908622 0.637216436439
>sampler distinct selecting 4 from 6 = [1, 1, 0, 0]
selected for crossover -> 0.602449156727 0.675743918826
>sampler distinct selecting 3 from 7 = [0, 4, 3]
selected for crossover -> 0.623079278399 0.63421176308
>sampler distinct selecting 2 from 7 = [3, 5]
selected for crossover -> 0.637216436439 0.610169485251
>sampler distinct selecting 2 from 7 = [5, 0]
selected for crossover -> 0.63421176308 0.69463941102
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.630623260372 0.620256351512
>sampler distinct selecting 3 from 7 = [5, 1, 4]
selected for crossover -> 0.604999808152 0.686591577986
>sampler distinct selecting 4 from 9 = [2, 5, 1, 4]
selected for crossover -> 0.69463941102 0.691095136994
>sampler distinct selecting 4 from 5 = [1, 0, 0, 0]
selected for crossover -> 0.604999808152 0.691095136994
>sampler distinct selecting 1 from 10 = [5]
selected for crossover -> 0.691095136994 0.607122921158
>sampler distinct selecting 2 from 7 = [1, 5]
selected for crossover -> 0.63421176308 0.637216436439
>sampler distinct selecting 2 from 6 = [3, 0]
selected for crossover -> 0.69463941102 0.631768908622
>sampler distinct selecting 2 from 6 = [2, 3]
selected for crossover -> 0.637447971336 0.69463941102
>sampler distinct selecting 3 from 7 = [1, 4, 0]
selected for crossover -> 0.63421176308 0.630623260372
>sampler distinct selecting 3 from 6 = [1, 2, 0]
|- mutate
>sampler selecting 5 from 5 = [1, 2, 0, 1, 2]
>sampler selecting 1 from 5 = [3]
generation =  9
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.456626358016
| | |-finished  1  forest. fitness = 0.686517853049
| | |-MSE =  0.447920945961
| | |-finished  2  forest. fitness = 0.690645440823
| | |-MSE =  0.627306926413
| | |-finished  3  forest. fitness = 0.614512224934
| | |-MSE =  0.511096025436
| | |-finished  4  forest. fitness = 0.661771312456
| | |-MSE =  0.439506521709
| | |-finished  5  forest. fitness = 0.694682507456
| | |-MSE =  0.534552743863
| | |-finished  6  forest. fitness = 0.651655672312
| | |-MSE =  0.434640732032
| | |-finished  7  forest. fitness = 0.697038622752
| | |-MSE =  0.471934403283
| | |-finished  8  forest. fitness = 0.679378101205
| | |-MSE =  0.624429029329
| | |-finished  10  forest. fitness = 0.615600916965
| | |-MSE =  0.510690504809
| | |-finished  10  forest. fitness = 0.661948954347
| | |-MSE =  0.443723451433
| | |-finished  12  forest. fitness = 0.69265342958
| | |-MSE =  0.584782611065
| | |-finished  12  forest. fitness = 0.631001370799
| | |-MSE =  0.571920282416
| | |-finished  13  forest. fitness = 0.63616457602
| | |-MSE =  0.545470374819
| | |-finished  15  forest. fitness = 0.647052196078
| | |-MSE =  0.456997253879
| | |-finished  15  forest. fitness = 0.68634309182
| | |-MSE =  0.557133375881
| | |-finished  16  forest. fitness = 0.642205745178
| | |-MSE =  0.453044684344
| | |-finished  17  forest. fitness = 0.688210081063
| | |-MSE =  0.431722026037
| | |-finished  18  forest. fitness = 0.698459604458
| | |-MSE =  0.582400559552
| | |-finished  19  forest. fitness = 0.631951242663
| | |-MSE =  0.575529499967
| | |-finished  20  forest. fitness = 0.6347072524
avg =  0.662125009818 max =  0.698459604458
|-spawn
selected for crossover -> 0.694682507456 0.63616457602
>sampler distinct selecting 3 from 5 = [2, 0, 0]
selected for crossover -> 0.631001370799 0.661948954347
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.661948954347 0.688210081063
>sampler distinct selecting 4 from 5 = [0, 0, 2, 0]
selected for crossover -> 0.690645440823 0.631951242663
>sampler distinct selecting 4 from 5 = [3, 1, 1, 1]
selected for crossover -> 0.686517853049 0.697038622752
>sampler distinct selecting 3 from 5 = [0, 2, 1]
selected for crossover -> 0.688210081063 0.690645440823
>sampler distinct selecting 1 from 5 = [4]
selected for crossover -> 0.661771312456 0.63616457602
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.631001370799 0.651655672312
>sampler distinct selecting 5 from 6 = [1, 1, 0, 0, 0]
selected for crossover -> 0.631001370799 0.661948954347
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.698459604458 0.615600916965
>sampler distinct selecting 4 from 4 = [3, 1, 1, 0]
selected for crossover -> 0.690645440823 0.6347072524
>sampler distinct selecting 2 from 5 = [1, 1]
selected for crossover -> 0.694682507456 0.679378101205
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.694682507456 0.661771312456
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.688210081063 0.690645440823
>sampler distinct selecting 2 from 5 = [2, 3]
selected for crossover -> 0.686517853049 0.697038622752
>sampler distinct selecting 4 from 5 = [4, 0, 2, 1]
selected for crossover -> 0.690645440823 0.614512224934
>sampler distinct selecting 3 from 7 = [1, 4, 0]
selected for crossover -> 0.661771312456 0.686517853049
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.661948954347 0.631951242663
>sampler distinct selecting 4 from 5 = [2, 0, 1, 1]
selected for crossover -> 0.697038622752 0.661948954347
>sampler distinct selecting 4 from 5 = [0, 1, 1, 0]
selected for crossover -> 0.690645440823 0.688210081063
>sampler distinct selecting 4 from 5 = [2, 1, 1, 0]
|- mutate
generation =  10
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.427114492814
| | |-finished  1  forest. fitness = 0.700714627337
| | |-MSE =  0.456158148194
| | |-finished  2  forest. fitness = 0.686738594459
| | |-MSE =  0.457361786382
| | |-finished  3  forest. fitness = 0.686171415598
| | |-MSE =  0.57408996094
| | |-finished  4  forest. fitness = 0.635287705795
| | |-MSE =  0.434737178899
| | |-finished  5  forest. fitness = 0.696991765954
| | |-MSE =  0.627211736041
| | |-finished  6  forest. fitness = 0.614548173327
| | |-MSE =  0.669000101333
| | |-finished  7  forest. fitness = 0.599161137978
| | |-MSE =  0.63599254829
| | |-finished  8  forest. fitness = 0.611249727907
| | |-MSE =  0.585867215041
| | |-finished  9  forest. fitness = 0.630569817268
| | |-MSE =  0.455572015454
| | |-finished  10  forest. fitness = 0.687015131771
| | |-MSE =  0.649508605931
| | |-finished  11  forest. fitness = 0.60624115352
| | |-MSE =  0.444676397182
| | |-finished  12  forest. fitness = 0.692196537543
| | |-MSE =  0.565960612771
| | |-finished  13  forest. fitness = 0.638585665466
| | |-MSE =  0.446017212658
| | |-finished  14  forest. fitness = 0.691554700211
| | |-MSE =  0.448554531797
| | |-finished  15  forest. fitness = 0.690343358188
| | |-MSE =  0.549659680158
| | |-finished  16  forest. fitness = 0.645302973811
| | |-MSE =  0.436642222
| | |-finished  17  forest. fitness = 0.696067527939
| | |-MSE =  0.477521138314
| | |-finished  18  forest. fitness = 0.676809267948
| | |-MSE =  0.603335082073
| | |-finished  19  forest. fitness = 0.623699943437
| | |-MSE =  0.64810198825
| | |-finished  20  forest. fitness = 0.606758566599
avg =  0.655800389603 max =  0.700714627337
|-spawn
selected for crossover -> 0.691554700211 0.623699943437
>sampler distinct selecting 3 from 7 = [1, 3, 2]
selected for crossover -> 0.635287705795 0.676809267948
>sampler distinct selecting 4 from 5 = [1, 3, 1, 0]
selected for crossover -> 0.686738594459 0.686171415598
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.686171415598 0.638585665466
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.686738594459 0.696067527939
>sampler distinct selecting 3 from 4 = [0, 1, 0]
selected for crossover -> 0.696067527939 0.686171415598
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.686171415598 0.611249727907
>sampler distinct selecting 2 from 3 = [2, 1]
selected for crossover -> 0.623699943437 0.614548173327
>sampler distinct selecting 4 from 8 = [3, 4, 1, 0]
selected for crossover -> 0.645302973811 0.690343358188
>sampler distinct selecting 2 from 8 = [5, 0]
selected for crossover -> 0.60624115352 0.700714627337
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.645302973811 0.614548173327
>sampler distinct selecting 4 from 8 = [1, 0, 1, 1]
selected for crossover -> 0.696991765954 0.599161137978
>sampler distinct selecting 5 from 6 = [4, 0, 3, 0, 0]
selected for crossover -> 0.645302973811 0.686171415598
>sampler distinct selecting 2 from 5 = [0, 2]
selected for crossover -> 0.645302973811 0.696067527939
>sampler distinct selecting 1 from 7 = [3]
selected for crossover -> 0.691554700211 0.696067527939
>sampler distinct selecting 2 from 6 = [3, 0]
selected for crossover -> 0.686738594459 0.686171415598
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.686171415598 0.599161137978
>sampler distinct selecting 4 from 6 = [0, 4, 1, 2]
selected for crossover -> 0.687015131771 0.645302973811
>sampler distinct selecting 2 from 8 = [4, 3]
selected for crossover -> 0.60624115352 0.614548173327
>sampler distinct selecting 4 from 8 = [2, 6, 0, 2]
selected for crossover -> 0.686171415598 0.696067527939
>sampler distinct selecting 1 from 4 = [1]
|- mutate
>sampler selecting 2 from 3 = [1, 2]
>sampler selecting 4 from 5 = [2, 1, 2, 2]
>sampler selecting 3 from 5 = [2, 0, 1]
>sampler selecting 4 from 5 = [2, 3, 1, 0]
generation =  11
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.437481953055
| | |-finished  1  forest. fitness = 0.695660907516
| | |-MSE =  0.453931809044
| | |-finished  2  forest. fitness = 0.687790165797
| | |-MSE =  0.448953388178
| | |-finished  3  forest. fitness = 0.690153325952
| | |-MSE =  0.547318800463
| | |-finished  4  forest. fitness = 0.646279228108
| | |-MSE =  0.446294597814
| | |-finished  5  forest. fitness = 0.691422066785
| | |-MSE =  0.432040872389
| | |-finished  6  forest. fitness = 0.698304091231
| | |-MSE =  0.515451383874
| | |-finished  7  forest. fitness = 0.659869403031
| | |-MSE =  0.524987379501
| | |-finished  8  forest. fitness = 0.655743131676
| | |-MSE =  0.457808762581
| | |-finished  9  forest. fitness = 0.685961029779
| | |-MSE =  0.639807675093
| | |-finished  10  forest. fitness = 0.609827612829
| | |-MSE =  0.473627067008
| | |-finished  11  forest. fitness = 0.67859774185
| | |-MSE =  0.534397299096
| | |-finished  12  forest. fitness = 0.651721689415
| | |-MSE =  0.560985983967
| | |-finished  13  forest. fitness = 0.640620742448
| | |-MSE =  0.562143813502
| | |-finished  14  forest. fitness = 0.640145927255
| | |-MSE =  0.529806130657
| | |-finished  16  forest. fitness = 0.653677600031
| | |-MSE =  0.460755402768
| | |-finished  16  forest. fitness = 0.684577307128
| | |-MSE =  0.43687911635
| | |-finished  17  forest. fitness = 0.69595276918
| | |-MSE =  0.551974655845
| | |-finished  18  forest. fitness = 0.644340418984
| | |-MSE =  0.536576937321
| | |-finished  19  forest. fitness = 0.65079722057
| | |-MSE =  0.5566561317
| | |-finished  20  forest. fitness = 0.642402634491
avg =  0.665192250703 max =  0.698304091231
|-spawn
selected for crossover -> 0.659869403031 0.651721689415
>sampler distinct selecting 3 from 5 = [1, 0, 2]
selected for crossover -> 0.691422066785 0.69595276918
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.644340418984 0.687790165797
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.67859774185 0.684577307128
>sampler distinct selecting 4 from 4 = [2, 1, 1, 0]
selected for crossover -> 0.67859774185 0.659869403031
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.685961029779 0.67859774185
>sampler distinct selecting 4 from 4 = [1, 0, 1, 0]
selected for crossover -> 0.687790165797 0.655743131676
>sampler distinct selecting 2 from 5 = [3, 1]
selected for crossover -> 0.65079722057 0.67859774185
>sampler distinct selecting 2 from 8 = [1, 3]
selected for crossover -> 0.698304091231 0.69595276918
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.609827612829 0.646279228108
>sampler distinct selecting 3 from 8 = [7, 4, 0]
selected for crossover -> 0.687790165797 0.655743131676
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.653677600031 0.646279228108
>sampler distinct selecting 3 from 8 = [0, 5, 1]
selected for crossover -> 0.644340418984 0.67859774185
>sampler distinct selecting 2 from 5 = [2, 0]
selected for crossover -> 0.691422066785 0.69595276918
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.642402634491 0.646279228108
>sampler distinct selecting 3 from 8 = [7, 3, 0]
selected for crossover -> 0.655743131676 0.651721689415
>sampler distinct selecting 5 from 6 = [0, 0, 0, 0, 0]
selected for crossover -> 0.651721689415 0.698304091231
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.642402634491 0.684577307128
>sampler distinct selecting 2 from 3 = [0, 1]
selected for crossover -> 0.644340418984 0.685961029779
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.685961029779 0.659869403031
>sampler distinct selecting 4 from 4 = [0, 0, 0, 0]
|- mutate
>sampler selecting 3 from 5 = [0, 4, 3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [4, 3, 1, 0]
generation =  12
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.526721748378
| | |-finished  1  forest. fitness = 0.654998201907
| | |-MSE =  0.410302966122
| | |-finished  2  forest. fitness = 0.709067501112
| | |-MSE =  0.503576004819
| | |-finished  3  forest. fitness = 0.665081111161
| | |-MSE =  0.504986709853
| | |-finished  4  forest. fitness = 0.664457694844
| | |-MSE =  0.542832196185
| | |-finished  5  forest. fitness = 0.648158628315
| | |-MSE =  0.535137514022
| | |-finished  6  forest. fitness = 0.651407441265
| | |-MSE =  0.432850302429
| | |-finished  7  forest. fitness = 0.697909612961
| | |-MSE =  0.449567656925
| | |-finished  8  forest. fitness = 0.689860866599
| | |-MSE =  0.617224736604
| | |-finished  9  forest. fitness = 0.61834325024
| | |-MSE =  0.479120891807
| | |-finished  10  forest. fitness = 0.676077260175
| | |-MSE =  0.456093640808
| | |-finished  11  forest. fitness = 0.686769018128
| | |-MSE =  0.427472683255
| | |-finished  12  forest. fitness = 0.700538799608
| | |-MSE =  0.522330861486
| | |-finished  13  forest. fitness = 0.656887425263
| | |-MSE =  0.546522350019
| | |-finished  14  forest. fitness = 0.64661205833
| | |-MSE =  0.610086553065
| | |-finished  15  forest. fitness = 0.621084623119
| | |-MSE =  0.493944264246
| | |-finished  16  forest. fitness = 0.669369014583
| | |-MSE =  0.51294503958
| | |-finished  17  forest. fitness = 0.660962542485
| | |-MSE =  0.579106794322
| | |-finished  18  forest. fitness = 0.633269392289
| | |-MSE =  0.686539743691
| | |-finished  19  forest. fitness = 0.592929993936
| | |-MSE =  0.478507006053
| | |-finished  20  forest. fitness = 0.676357971863
avg =  0.661007120409 max =  0.709067501112
|-spawn
selected for crossover -> 0.665081111161 0.689860866599
>sampler distinct selecting 4 from 5 = [4, 0, 1, 0]
selected for crossover -> 0.697909612961 0.654998201907
>sampler distinct selecting 2 from 7 = [4, 5]
selected for crossover -> 0.709067501112 0.648158628315
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.660962542485 0.697909612961
>sampler distinct selecting 2 from 4 = [2, 2]
selected for crossover -> 0.592929993936 0.697909612961
>sampler distinct selecting 3 from 6 = [0, 1, 2]
selected for crossover -> 0.592929993936 0.697909612961
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.654998201907 0.665081111161
>sampler distinct selecting 3 from 6 = [4, 0, 0]
selected for crossover -> 0.592929993936 0.676077260175
>sampler distinct selecting 4 from 6 = [3, 0, 1, 1]
selected for crossover -> 0.664457694844 0.709067501112
>sampler distinct selecting 2 from 7 = [0, 0]
selected for crossover -> 0.654998201907 0.686769018128
>sampler distinct selecting 5 from 6 = [3, 0, 1, 0, 1]
selected for crossover -> 0.648158628315 0.592929993936
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.664457694844 0.654998201907
>sampler distinct selecting 3 from 8 = [4, 2, 0]
selected for crossover -> 0.621084623119 0.676077260175
>sampler distinct selecting 2 from 7 = [2, 4]
selected for crossover -> 0.633269392289 0.700538799608
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.664457694844 0.61834325024
>sampler distinct selecting 4 from 6 = [1, 1, 0, 1]
selected for crossover -> 0.592929993936 0.709067501112
>sampler distinct selecting 2 from 6 = [2, 3]
selected for crossover -> 0.61834325024 0.656887425263
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.676077260175 0.648158628315
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.709067501112 0.665081111161
>sampler distinct selecting 4 from 5 = [2, 3, 0, 0]
selected for crossover -> 0.633269392289 0.689860866599
>sampler distinct selecting 4 from 5 = [1, 2, 2, 1]
|- mutate
generation =  13
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.464823932197
| | |-finished  1  forest. fitness = 0.682675902557
| | |-MSE =  0.498247864786
| | |-finished  2  forest. fitness = 0.667446304115
| | |-MSE =  0.451998595483
| | |-finished  3  forest. fitness = 0.688705900344
| | |-MSE =  0.594058422722
| | |-finished  4  forest. fitness = 0.627329579485
| | |-MSE =  0.542133791061
| | |-finished  5  forest. fitness = 0.648452167896
| | |-MSE =  0.552448451578
| | |-finished  6  forest. fitness = 0.644143771076
| | |-MSE =  0.662769369421
| | |-finished  7  forest. fitness = 0.601406315506
| | |-MSE =  0.425778453565
| | |-finished  8  forest. fitness = 0.701371238638
| | |-MSE =  0.639059925175
| | |-finished  9  forest. fitness = 0.610105820197
| | |-MSE =  0.447481299244
| | |-finished  11  forest. fitness = 0.6908552121
| | |-MSE =  0.43988124194
| | |-finished  12  forest. fitness = 0.694501720609
| | |-MSE =  0.444602256658
| | |-finished  12  forest. fitness = 0.692232062764
| | |-MSE =  0.454164579937
| | |-finished  13  forest. fitness = 0.687680069916
| | |-MSE =  0.666056785287
| | |-finished  14  forest. fitness = 0.600219637668
| | |-MSE =  0.454747060148
| | |-finished  15  forest. fitness = 0.687404723058
| | |-MSE =  0.58393995401
| | |-finished  16  forest. fitness = 0.631337063926
| | |-MSE =  0.532821254827
| | |-finished  17  forest. fitness = 0.652391788574
| | |-MSE =  0.486369554165
| | |-finished  18  forest. fitness = 0.672780196014
| | |-MSE =  0.439625940735
| | |-finished  19  forest. fitness = 0.694624882551
| | |-MSE =  0.555574745561
| | |-finished  20  forest. fitness = 0.642849212392
avg =  0.660925678469 max =  0.701371238638
|-spawn
selected for crossover -> 0.644143771076 0.687680069916
>sampler distinct selecting 3 from 5 = [2, 1, 1]
selected for crossover -> 0.631337063926 0.600219637668
>sampler distinct selecting 2 from 5 = [0, 2]
selected for crossover -> 0.6908552121 0.610105820197
>sampler distinct selecting 2 from 4 = [3, 1]
selected for crossover -> 0.667446304115 0.652391788574
>sampler distinct selecting 6 from 9 = [0, 1, 0, 0, 1, 3]
selected for crossover -> 0.642849212392 0.694501720609
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.694624882551 0.701371238638
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.692232062764 0.642849212392
>sampler distinct selecting 4 from 5 = [3, 0, 0, 0]
selected for crossover -> 0.6908552121 0.682675902557
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.610105820197 0.694624882551
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.687680069916 0.652391788574
>sampler distinct selecting 6 from 6 = [0, 1, 1, 1, 1, 0]
selected for crossover -> 0.687680069916 0.642849212392
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.644143771076 0.627329579485
>sampler distinct selecting 4 from 7 = [0, 5, 2, 1]
selected for crossover -> 0.610105820197 0.682675902557
>sampler distinct selecting 3 from 4 = [2, 2, 0]
selected for crossover -> 0.667446304115 0.672780196014
>sampler distinct selecting 5 from 8 = [1, 5, 4, 3, 0]
selected for crossover -> 0.610105820197 0.644143771076
>sampler distinct selecting 2 from 6 = [4, 0]
selected for crossover -> 0.688705900344 0.692232062764
>sampler distinct selecting 5 from 7 = [1, 2, 0, 1, 2]
selected for crossover -> 0.682675902557 0.601406315506
>sampler distinct selecting 5 from 6 = [4, 3, 2, 2, 0]
selected for crossover -> 0.601406315506 0.648452167896
>sampler distinct selecting 5 from 7 = [0, 4, 3, 0, 0]
selected for crossover -> 0.6908552121 0.682675902557
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.694501720609 0.600219637668
>sampler distinct selecting 1 from 4 = [0]
|- mutate
generation =  14
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.449591196617
| | |-finished  1  forest. fitness = 0.689849664053
| | |-MSE =  0.440999893898
| | |-finished  2  forest. fitness = 0.69396257712
| | |-MSE =  0.557405828193
| | |-finished  3  forest. fitness = 0.642093397814
| | |-MSE =  0.47203977378
| | |-finished  4  forest. fitness = 0.679329470448
| | |-MSE =  0.440449842356
| | |-finished  5  forest. fitness = 0.694227574328
| | |-MSE =  0.458544059193
| | |-finished  6  forest. fitness = 0.68561521587
| | |-MSE =  0.538722305005
| | |-finished  7  forest. fitness = 0.649889844807
| | |-MSE =  0.560273703677
| | |-finished  8  forest. fitness = 0.640913192117
| | |-MSE =  0.450109165296
| | |-finished  9  forest. fitness = 0.68960325466
| | |-MSE =  0.442992459947
| | |-finished  10  forest. fitness = 0.69300431413
| | |-MSE =  0.450162367305
| | |-finished  11  forest. fitness = 0.689577955232
| | |-MSE =  0.672691868024
| | |-finished  12  forest. fitness = 0.597838740725
| | |-MSE =  0.590324313319
| | |-finished  13  forest. fitness = 0.628802560349
| | |-MSE =  0.540398790227
| | |-finished  14  forest. fitness = 0.649182540485
| | |-MSE =  0.57900639582
| | |-finished  15  forest. fitness = 0.633309657673
| | |-MSE =  0.43825281607
| | |-finished  16  forest. fitness = 0.695288052856
| | |-MSE =  0.588281895208
| | |-finished  17  forest. fitness = 0.62961115594
| | |-MSE =  0.581692064223
| | |-finished  18  forest. fitness = 0.632234315781
| | |-MSE =  0.682112267742
| | |-finished  19  forest. fitness = 0.594490640831
| | |-MSE =  0.531227660363
| | |-finished  20  forest. fitness = 0.653070752237
avg =  0.658094743873 max =  0.695288052856
|-spawn
selected for crossover -> 0.594490640831 0.69396257712
>sampler distinct selecting 3 from 7 = [0, 2, 2]
selected for crossover -> 0.653070752237 0.68960325466
>sampler distinct selecting 4 from 6 = [5, 1, 2, 1]
selected for crossover -> 0.649889844807 0.689577955232
>sampler distinct selecting 3 from 11 = [2, 3, 3]
selected for crossover -> 0.649182540485 0.679329470448
>sampler distinct selecting 5 from 7 = [0, 4, 0, 0, 0]
selected for crossover -> 0.689577955232 0.69300431413
>sampler distinct selecting 3 from 6 = [0, 3, 3]
selected for crossover -> 0.68960325466 0.597838740725
>sampler distinct selecting 2 from 6 = [2, 2]
selected for crossover -> 0.689577955232 0.594490640831
>sampler distinct selecting 5 from 10 = [1, 0, 3, 1, 4]
selected for crossover -> 0.694227574328 0.68960325466
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.649889844807 0.633309657673
>sampler distinct selecting 7 from 9 = [0, 4, 4, 1, 1, 2, 0]
selected for crossover -> 0.69300431413 0.694227574328
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.68960325466 0.653070752237
>sampler distinct selecting 1 from 6 = [5]
selected for crossover -> 0.689577955232 0.68960325466
>sampler distinct selecting 6 from 6 = [1, 3, 0, 2, 0, 0]
selected for crossover -> 0.649182540485 0.689849664053
>sampler distinct selecting 3 from 8 = [2, 3, 0]
selected for crossover -> 0.628802560349 0.694227574328
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.68960325466 0.679329470448
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.68561521587 0.679329470448
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.695288052856 0.632234315781
>sampler distinct selecting 2 from 8 = [6, 1]
selected for crossover -> 0.69300431413 0.597838740725
>sampler distinct selecting 6 from 6 = [5, 1, 1, 2, 0, 0]
selected for crossover -> 0.689577955232 0.640913192117
>sampler distinct selecting 5 from 7 = [1, 2, 1, 2, 2]
selected for crossover -> 0.642093397814 0.68960325466
>sampler distinct selecting 1 from 3 = [0]
|- mutate
>sampler selecting 4 from 5 = [1, 3, 3, 4]
-+=> 1 <=+-
>sampler selecting 2 from 3 = [1, 2]
>sampler selecting 5 from 5 = [2, 3, 2, 3, 4]
>sampler selecting 3 from 5 = [3, 1, 2]
>sampler selecting 3 from 3 = [1, 1, 2]
>sampler selecting 2 from 5 = [4, 4]
>sampler selecting 1 from 5 = [4]
>sampler selecting 4 from 5 = [1, 3, 3, 1]
>sampler selecting 3 from 3 = [1, 0, 1]
>sampler selecting 3 from 5 = [0, 3, 3]
>sampler selecting 4 from 5 = [0, 1, 3, 1]
>sampler selecting 5 from 5 = [3, 0, 2, 0, 4]
>sampler selecting 2 from 3 = [1, 2]
>sampler selecting 1 from 5 = [2]
>sampler selecting 2 from 5 = [1, 1]
>sampler selecting 1 from 3 = [2]
>sampler selecting 1 from 5 = [3]
>sampler selecting 3 from 3 = [2, 1, 0]
>sampler selecting 1 from 5 = [0]
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 5 from 5 = [4, 1, 3, 2, 2]
>sampler selecting 3 from 3 = [2, 0, 1]
>sampler selecting 5 from 5 = [3, 3, 3, 2, 2]
>sampler selecting 2 from 5 = [2, 1]
>sampler selecting 5 from 5 = [1, 2, 4, 3, 2]
>sampler selecting 3 from 3 = [0, 1, 1]
>sampler selecting 5 from 5 = [1, 2, 1, 2, 2]
>sampler selecting 3 from 5 = [2, 4, 2]
>sampler selecting 5 from 5 = [4, 0, 4, 3, 4]
>sampler selecting 2 from 3 = [2, 1]
>sampler selecting 5 from 5 = [0, 1, 2, 4, 4]
>sampler selecting 1 from 5 = [2]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [2, 0, 3, 2]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [3, 0, 3, 3]
>sampler selecting 2 from 3 = [1, 0]
>sampler selecting 3 from 5 = [1, 3, 1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 3 from 3 = [0, 2, 1]
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 4 from 5 = [1, 1, 4, 3]
>sampler selecting 3 from 5 = [0, 2, 2]
>sampler selecting 1 from 3 = [0]
>sampler selecting 5 from 5 = [1, 2, 2, 3, 3]
>sampler selecting 2 from 3 = [1, 2]
>sampler selecting 2 from 5 = [1, 1]
>sampler selecting 2 from 5 = [3, 1]
>sampler selecting 1 from 3 = [2]
>sampler selecting 4 from 5 = [2, 2, 1, 2]
>sampler selecting 3 from 3 = [1, 0, 1]
>sampler selecting 5 from 5 = [0, 4, 3, 2, 1]
>sampler selecting 3 from 5 = [1, 1, 2]
>sampler selecting 1 from 5 = [2]
>sampler selecting 2 from 3 = [0, 2]
>sampler selecting 5 from 5 = [2, 4, 3, 2, 4]
>sampler selecting 2 from 5 = [0, 0]
>sampler selecting 2 from 3 = [0, 1]
>sampler selecting 4 from 5 = [0, 2, 1, 1]
>sampler selecting 5 from 5 = [4, 3, 0, 2, 1]
>sampler selecting 1 from 3 = [0]
>sampler selecting 1 from 5 = [4]
generation =  0
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.459054233626
| | |-finished  1  forest. fitness = 0.685375482935
| | |-MSE =  0.477906977393
| | |-finished  2  forest. fitness = 0.67663257248
| | |-MSE =  0.457995919163
| | |-finished  3  forest. fitness = 0.685872975951
| | |-MSE =  0.447852629663
| | |-finished  4  forest. fitness = 0.690678028628
| | |-MSE =  0.501508527377
| | |-finished  5  forest. fitness = 0.665996883645
| | |-MSE =  0.624511183679
| | |-finished  6  forest. fitness = 0.615569784959
| | |-MSE =  0.442009232941
| | |-finished  7  forest. fitness = 0.693476835762
| | |-MSE =  0.437773133382
| | |-finished  8  forest. fitness = 0.695520021053
| | |-MSE =  0.58867796185
| | |-finished  9  forest. fitness = 0.629454190222
| | |-MSE =  0.46744050042
| | |-finished  10  forest. fitness = 0.681458634755
| | |-MSE =  0.583100610243
| | |-finished  11  forest. fitness = 0.631671792386
| | |-MSE =  0.532989660088
| | |-finished  12  forest. fitness = 0.652320120634
| | |-MSE =  0.45385805954
| | |-finished  13  forest. fitness = 0.687825055161
| | |-MSE =  0.569137379507
| | |-finished  14  forest. fitness = 0.637292829207
| | |-MSE =  0.457812144339
| | |-finished  15  forest. fitness = 0.685959438521
| | |-MSE =  0.565122233689
| | |-finished  16  forest. fitness = 0.638927732592
| | |-MSE =  0.456525517868
| | |-finished  17  forest. fitness = 0.686565382983
| | |-MSE =  0.578840605153
| | |-finished  18  forest. fitness = 0.633376160162
| | |-MSE =  0.42246093939
| | |-finished  19  forest. fitness = 0.703007001675
| | |-MSE =  0.646770606043
| | |-finished  20  forest. fitness = 0.607249119173
avg =  0.664211502144 max =  0.703007001675
|-spawn
selected for crossover -> 0.703007001675 0.652320120634
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.695520021053 0.607249119173
>sampler distinct selecting 2 from 3 = [2, 0]
selected for crossover -> 0.681458634755 0.607249119173
>sampler distinct selecting 4 from 5 = [1, 3, 0, 0]
selected for crossover -> 0.638927732592 0.652320120634
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.607249119173 0.695520021053
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.629454190222 0.615569784959
>sampler distinct selecting 2 from 6 = [2, 0]
selected for crossover -> 0.685872975951 0.695520021053
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.67663257248 0.681458634755
>sampler distinct selecting 4 from 4 = [2, 1, 0, 0]
selected for crossover -> 0.67663257248 0.681458634755
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.685375482935 0.685959438521
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.685375482935 0.652320120634
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.629454190222 0.685959438521
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.693476835762 0.685959438521
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.631671792386 0.665996883645
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.695520021053 0.629454190222
>sampler distinct selecting 3 from 4 = [0, 1, 0]
selected for crossover -> 0.686565382983 0.693476835762
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.690678028628 0.686565382983
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.615569784959 0.652320120634
>sampler distinct selecting 3 from 5 = [1, 0, 0]
selected for crossover -> 0.633376160162 0.681458634755
>sampler distinct selecting 2 from 6 = [0, 3]
selected for crossover -> 0.652320120634 0.67663257248
>sampler distinct selecting 3 from 3 = [0, 0, 0]
|- mutate
>sampler selecting 5 from 5 = [1, 2, 2, 1, 0]
>sampler selecting 5 from 5 = [3, 1, 1, 1, 1]
>sampler selecting 4 from 5 = [0, 2, 0, 3]
generation =  1
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.587246097804
| | |-finished  1  forest. fitness = 0.630022024551
| | |-MSE =  0.663998803819
| | |-finished  2  forest. fitness = 0.600961970468
| | |-MSE =  0.605062713232
| | |-finished  3  forest. fitness = 0.62302861549
| | |-MSE =  0.449795453817
| | |-finished  4  forest. fitness = 0.689752473266
| | |-MSE =  0.690585151138
| | |-finished  5  forest. fitness = 0.591511169566
| | |-MSE =  0.615256228089
| | |-finished  6  forest. fitness = 0.619096823532
| | |-MSE =  0.459106185618
| | |-finished  7  forest. fitness = 0.685351079899
| | |-MSE =  0.639667415295
| | |-finished  8  forest. fitness = 0.609879778467
| | |-MSE =  0.456896169935
| | |-finished  9  forest. fitness = 0.686390712418
| | |-MSE =  0.589438707949
| | |-finished  10  forest. fitness = 0.629152917315
| | |-MSE =  0.421653661739
| | |-finished  11  forest. fitness = 0.703406200056
| | |-MSE =  0.659530064603
| | |-finished  12  forest. fitness = 0.602580225167
| | |-MSE =  0.575889972988
| | |-finished  13  forest. fitness = 0.634562067873
| | |-MSE =  0.454502149304
| | |-finished  14  forest. fitness = 0.687520469103
| | |-MSE =  0.458251801668
| | |-finished  15  forest. fitness = 0.68575262438
| | |-MSE =  0.457505636659
| | |-finished  16  forest. fitness = 0.686103693082
| | |-MSE =  0.54970642408
| | |-finished  17  forest. fitness = 0.645283509484
| | |-MSE =  0.630913880248
| | |-finished  18  forest. fitness = 0.613153160391
| | |-MSE =  0.459577409541
| | |-finished  19  forest. fitness = 0.685129814605
| | |-MSE =  0.449272826366
| | |-finished  20  forest. fitness = 0.690001207369
avg =  0.649932026824 max =  0.703406200056
|-spawn
selected for crossover -> 0.62302861549 0.629152917315
>sampler distinct selecting 4 from 6 = [1, 1, 1, 1]
selected for crossover -> 0.630022024551 0.602580225167
>sampler distinct selecting 3 from 5 = [3, 0, 0]
selected for crossover -> 0.685129814605 0.689752473266
>sampler distinct selecting 4 from 6 = [2, 0, 0, 0]
selected for crossover -> 0.62302861549 0.591511169566
>sampler distinct selecting 4 from 7 = [1, 4, 1, 1]
selected for crossover -> 0.687520469103 0.686103693082
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.687520469103 0.609879778467
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.703406200056 0.689752473266
>sampler distinct selecting 2 from 5 = [0, 2]
selected for crossover -> 0.619096823532 0.685351079899
>sampler distinct selecting 2 from 5 = [4, 1]
selected for crossover -> 0.686390712418 0.602580225167
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.62302861549 0.613153160391
>sampler distinct selecting 1 from 6 = [5]
selected for crossover -> 0.68575262438 0.686103693082
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.687520469103 0.591511169566
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.629152917315 0.690001207369
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.68575262438 0.630022024551
>sampler distinct selecting 4 from 4 = [3, 1, 0, 0]
selected for crossover -> 0.686103693082 0.619096823532
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.602580225167 0.630022024551
>sampler distinct selecting 3 from 5 = [1, 2, 1]
selected for crossover -> 0.703406200056 0.686390712418
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.591511169566 0.686103693082
>sampler distinct selecting 4 from 4 = [0, 0, 1, 0]
selected for crossover -> 0.619096823532 0.689752473266
>sampler distinct selecting 2 from 6 = [0, 1]
selected for crossover -> 0.602580225167 0.630022024551
>sampler distinct selecting 3 from 5 = [2, 2, 1]
|- mutate
>sampler selecting 3 from 3 = [2, 1, 1]
>sampler selecting 5 from 5 = [1, 4, 1, 1, 3]
>sampler selecting 3 from 5 = [4, 4, 3]
>sampler selecting 4 from 5 = [0, 1, 2, 4]
generation =  2
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.45900899184
| | |-finished  1  forest. fitness = 0.68539673545
| | |-MSE =  0.449206874413
| | |-finished  2  forest. fitness = 0.690032608633
| | |-MSE =  0.459160984466
| | |-finished  3  forest. fitness = 0.685325341512
| | |-MSE =  0.564110792607
| | |-finished  4  forest. fitness = 0.63934089882
| | |-MSE =  0.553655200788
| | |-finished  5  forest. fitness = 0.643643454154
| | |-MSE =  0.450924377438
| | |-finished  6  forest. fitness = 0.689215796185
| | |-MSE =  0.612694179468
| | |-finished  7  forest. fitness = 0.620080367829
| | |-MSE =  0.492512745218
| | |-finished  8  forest. fitness = 0.670011028853
| | |-MSE =  0.458972283639
| | |-finished  9  forest. fitness = 0.685413980248
| | |-MSE =  0.575236141632
| | |-finished  10  forest. fitness = 0.634825454782
| | |-MSE =  0.576530331993
| | |-finished  11  forest. fitness = 0.634304319877
| | |-MSE =  0.467516719471
| | |-finished  12  forest. fitness = 0.681423241543
| | |-MSE =  0.459510052773
| | |-finished  13  forest. fitness = 0.685161433523
| | |-MSE =  0.620181885789
| | |-finished  14  forest. fitness = 0.617214652732
| | |-MSE =  0.459222874933
| | |-finished  15  forest. fitness = 0.685296274598
| | |-MSE =  0.57168771185
| | |-finished  16  forest. fitness = 0.636258712504
| | |-MSE =  0.438494208967
| | |-finished  17  forest. fitness = 0.695171376962
| | |-MSE =  0.621755265831
| | |-finished  18  forest. fitness = 0.616615848932
| | |-MSE =  0.441853900556
| | |-finished  19  forest. fitness = 0.693551544726
| | |-MSE =  0.679797779075
| | |-finished  20  forest. fitness = 0.595309752434
avg =  0.659179641215 max =  0.695171376962
|-spawn
selected for crossover -> 0.681423241543 0.63934089882
>sampler distinct selecting 2 from 7 = [0, 2]
selected for crossover -> 0.690032608633 0.68539673545
>sampler distinct selecting 4 from 6 = [5, 3, 2, 0]
selected for crossover -> 0.681423241543 0.595309752434
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.689215796185 0.634825454782
>sampler distinct selecting 4 from 5 = [2, 1, 0, 0]
selected for crossover -> 0.690032608633 0.685296274598
>sampler distinct selecting 3 from 6 = [2, 1, 1]
selected for crossover -> 0.690032608633 0.643643454154
>sampler distinct selecting 5 from 8 = [7, 0, 2, 2, 0]
selected for crossover -> 0.643643454154 0.616615848932
>sampler distinct selecting 1 from 7 = [4]
selected for crossover -> 0.670011028853 0.620080367829
>sampler distinct selecting 4 from 5 = [2, 2, 0, 0]
selected for crossover -> 0.670011028853 0.685296274598
>sampler distinct selecting 3 from 4 = [1, 1, 0]
selected for crossover -> 0.616615848932 0.670011028853
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.685161433523 0.63934089882
>sampler distinct selecting 3 from 6 = [2, 0, 0]
selected for crossover -> 0.690032608633 0.636258712504
>sampler distinct selecting 3 from 7 = [3, 4, 2]
selected for crossover -> 0.636258712504 0.617214652732
>sampler distinct selecting 3 from 7 = [1, 0, 2]
selected for crossover -> 0.670011028853 0.634304319877
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.634304319877 0.695171376962
>sampler distinct selecting 4 from 4 = [1, 0, 0, 0]
selected for crossover -> 0.616615848932 0.685161433523
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.693551544726 0.643643454154
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.689215796185 0.685296274598
>sampler distinct selecting 3 from 3 = [1, 1, 0]
selected for crossover -> 0.670011028853 0.68539673545
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.634825454782 0.595309752434
>sampler distinct selecting 4 from 8 = [5, 5, 3, 3]
|- mutate
generation =  3
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.458537246373
| | |-finished  1  forest. fitness = 0.685618418376
| | |-MSE =  0.499214015827
| | |-finished  2  forest. fitness = 0.667016176105
| | |-MSE =  0.440273806015
| | |-finished  3  forest. fitness = 0.694312425751
| | |-MSE =  0.453295870748
| | |-finished  4  forest. fitness = 0.688091131426
| | |-MSE =  0.456008891945
| | |-finished  5  forest. fitness = 0.686808992399
| | |-MSE =  0.52239538857
| | |-finished  6  forest. fitness = 0.656859582936
| | |-MSE =  0.4560829729
| | |-finished  7  forest. fitness = 0.686774049701
| | |-MSE =  0.611820287346
| | |-finished  8  forest. fitness = 0.620416561232
| | |-MSE =  0.448421362798
| | |-finished  9  forest. fitness = 0.6904068289
| | |-MSE =  0.416592077309
| | |-finished  10  forest. fitness = 0.705919520529
| | |-MSE =  0.43780043472
| | |-finished  11  forest. fitness = 0.695506814334
| | |-MSE =  0.549374536536
| | |-finished  12  forest. fitness = 0.645421734009
| | |-MSE =  0.599825858597
| | |-finished  13  forest. fitness = 0.62506803139
| | |-MSE =  0.628477258368
| | |-finished  14  forest. fitness = 0.61407059562
| | |-MSE =  0.606380934523
| | |-finished  15  forest. fitness = 0.622517348475
| | |-MSE =  0.60320279382
| | |-finished  16  forest. fitness = 0.623751408028
| | |-MSE =  0.497683496037
| | |-finished  17  forest. fitness = 0.667697816425
| | |-MSE =  0.428902208658
| | |-finished  18  forest. fitness = 0.699837955278
| | |-MSE =  0.664514284039
| | |-finished  19  forest. fitness = 0.600775859714
| | |-MSE =  0.590887719381
| | |-finished  20  forest. fitness = 0.628579872619
avg =  0.660272556162 max =  0.705919520529
|-spawn
selected for crossover -> 0.600775859714 0.622517348475
>sampler distinct selecting 5 from 8 = [6, 4, 1, 1, 0]
selected for crossover -> 0.705919520529 0.685618418376
>sampler distinct selecting 3 from 4 = [0, 1, 1]
selected for crossover -> 0.61407059562 0.688091131426
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.685618418376 0.667697816425
>sampler distinct selecting 2 from 5 = [1, 2]
selected for crossover -> 0.600775859714 0.620416561232
>sampler distinct selecting 3 from 7 = [4, 3, 0]
selected for crossover -> 0.628579872619 0.667697816425
>sampler distinct selecting 2 from 6 = [2, 1]
selected for crossover -> 0.686808992399 0.686774049701
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.622517348475 0.686774049701
>sampler distinct selecting 6 from 9 = [2, 3, 3, 3, 3, 1]
selected for crossover -> 0.688091131426 0.667697816425
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.685618418376 0.62506803139
>sampler distinct selecting 4 from 6 = [0, 3, 2, 1]
selected for crossover -> 0.694312425751 0.645421734009
>sampler distinct selecting 4 from 7 = [4, 0, 3, 0]
selected for crossover -> 0.705919520529 0.623751408028
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.695506814334 0.667016176105
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.62506803139 0.686774049701
>sampler distinct selecting 3 from 8 = [3, 2, 3]
selected for crossover -> 0.628579872619 0.623751408028
>sampler distinct selecting 2 from 7 = [6, 1]
selected for crossover -> 0.667016176105 0.628579872619
>sampler distinct selecting 1 from 7 = [3]
selected for crossover -> 0.62506803139 0.61407059562
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.686774049701 0.686808992399
>sampler distinct selecting 6 from 6 = [4, 3, 2, 0, 0, 0]
selected for crossover -> 0.685618418376 0.6904068289
>sampler distinct selecting 2 from 7 = [2, 5]
selected for crossover -> 0.694312425751 0.667697816425
>sampler distinct selecting 4 from 5 = [0, 0, 1, 1]
|- mutate
generation =  4
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.456829583313
| | |-finished  1  forest. fitness = 0.686422084954
| | |-MSE =  0.432339517246
| | |-finished  2  forest. fitness = 0.698158493821
| | |-MSE =  0.457359448298
| | |-finished  3  forest. fitness = 0.686172516442
| | |-MSE =  0.502591801826
| | |-finished  4  forest. fitness = 0.665516741663
| | |-MSE =  0.476053123626
| | |-finished  5  forest. fitness = 0.677482391382
| | |-MSE =  0.454442721949
| | |-finished  6  forest. fitness = 0.687548560634
| | |-MSE =  0.486100346321
| | |-finished  7  forest. fitness = 0.672902070493
| | |-MSE =  0.479039182778
| | |-finished  8  forest. fitness = 0.676114609839
| | |-MSE =  0.469977288856
| | |-finished  9  forest. fitness = 0.680282619045
| | |-MSE =  0.421394292426
| | |-finished  10  forest. fitness = 0.703534554295
| | |-MSE =  0.458405363313
| | |-finished  11  forest. fitness = 0.685680418597
| | |-MSE =  0.44317167898
| | |-finished  12  forest. fitness = 0.692918253985
| | |-MSE =  0.438845572062
| | |-finished  13  forest. fitness = 0.695001617558
| | |-MSE =  0.435409105241
| | |-finished  14  forest. fitness = 0.696665498602
| | |-MSE =  0.671806550868
| | |-finished  15  forest. fitness = 0.59815533052
| | |-MSE =  0.596456776275
| | |-finished  16  forest. fitness = 0.626387143618
| | |-MSE =  0.621159263736
| | |-finished  17  forest. fitness = 0.616842541241
| | |-MSE =  0.596453292558
| | |-finished  18  forest. fitness = 0.626388510495
| | |-MSE =  0.488126613023
| | |-finished  19  forest. fitness = 0.671985831883
| | |-MSE =  0.567359279235
| | |-finished  20  forest. fitness = 0.638015809935
avg =  0.66910877995 max =  0.703534554295
|-spawn
selected for crossover -> 0.685680418597 0.703534554295
>sampler distinct selecting 2 from 4 = [2, 2]
selected for crossover -> 0.696665498602 0.685680418597
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.665516741663 0.686422084954
>sampler distinct selecting 4 from 9 = [0, 3, 4, 2]
selected for crossover -> 0.680282619045 0.685680418597
>sampler distinct selecting 2 from 4 = [0, 2]
selected for crossover -> 0.698158493821 0.671985831883
>sampler distinct selecting 3 from 8 = [0, 5, 3]
selected for crossover -> 0.696665498602 0.672902070493
>sampler distinct selecting 4 from 6 = [2, 2, 1, 0]
selected for crossover -> 0.626387143618 0.685680418597
>sampler distinct selecting 5 from 5 = [2, 0, 0, 0, 0]
selected for crossover -> 0.671985831883 0.638015809935
>sampler distinct selecting 2 from 7 = [0, 0]
selected for crossover -> 0.626387143618 0.695001617558
>sampler distinct selecting 2 from 7 = [1, 2]
selected for crossover -> 0.638015809935 0.680282619045
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.672902070493 0.686172516442
>sampler distinct selecting 5 from 5 = [1, 2, 1, 0, 0]
selected for crossover -> 0.703534554295 0.696665498602
>sampler distinct selecting 3 from 5 = [2, 0, 0]
selected for crossover -> 0.698158493821 0.686422084954
>sampler distinct selecting 4 from 5 = [0, 1, 0, 0]
selected for crossover -> 0.695001617558 0.698158493821
>sampler distinct selecting 4 from 5 = [0, 0, 0, 0]
selected for crossover -> 0.638015809935 0.672902070493
>sampler distinct selecting 4 from 5 = [2, 1, 2, 0]
selected for crossover -> 0.626388510495 0.686422084954
>sampler distinct selecting 3 from 7 = [4, 0, 0]
selected for crossover -> 0.616842541241 0.692918253985
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.685680418597 0.672902070493
>sampler distinct selecting 4 from 5 = [4, 0, 0, 1]
selected for crossover -> 0.616842541241 0.686422084954
>sampler distinct selecting 2 from 5 = [0, 1]
selected for crossover -> 0.685680418597 0.703534554295
>sampler distinct selecting 4 from 4 = [3, 0, 0, 0]
|- mutate
>sampler selecting 3 from 5 = [4, 2, 1]
generation =  5
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.459742215907
| | |-finished  1  forest. fitness = 0.685052462759
| | |-MSE =  0.546341015388
| | |-finished  2  forest. fitness = 0.646687884528
| | |-MSE =  0.434677663648
| | |-finished  3  forest. fitness = 0.697020679514
| | |-MSE =  0.443108724432
| | |-finished  4  forest. fitness = 0.692948482031
| | |-MSE =  0.445879082836
| | |-finished  5  forest. fitness = 0.69162076682
| | |-MSE =  0.427291078265
| | |-finished  6  forest. fitness = 0.700627934433
| | |-MSE =  0.467048187149
| | |-finished  7  forest. fitness = 0.681640868214
| | |-MSE =  0.487765276926
| | |-finished  8  forest. fitness = 0.672149038232
| | |-MSE =  0.581124688836
| | |-finished  9  forest. fitness = 0.632461188584
| | |-MSE =  0.551924240018
| | |-finished  10  forest. fitness = 0.644361351034
| | |-MSE =  0.63516560413
| | |-finished  11  forest. fitness = 0.611558852189
| | |-MSE =  0.450947223631
| | |-finished  12  forest. fitness = 0.689204943994
| | |-MSE =  0.42345803649
| | |-finished  13  forest. fitness = 0.702514562681
| | |-MSE =  0.450119886561
| | |-finished  14  forest. fitness = 0.689598156171
| | |-MSE =  0.476559517186
| | |-finished  15  forest. fitness = 0.677250045366
| | |-MSE =  0.536186487244
| | |-finished  16  forest. fitness = 0.650962632664
| | |-MSE =  0.474886483331
| | |-finished  18  forest. fitness = 0.67801828229
| | |-MSE =  0.441833643075
| | |-finished  18  forest. fitness = 0.69356128899
| | |-MSE =  0.521798930865
| | |-finished  19  forest. fitness = 0.657117034135
| | |-MSE =  0.591024673117
| | |-finished  20  forest. fitness = 0.628525765123
avg =  0.671144110987 max =  0.702514562681
|-spawn
selected for crossover -> 0.677250045366 0.689598156171
>sampler distinct selecting 2 from 6 = [0, 0]
selected for crossover -> 0.644361351034 0.700627934433
>sampler distinct selecting 5 from 6 = [3, 1, 2, 1, 0]
selected for crossover -> 0.689204943994 0.672149038232
>sampler distinct selecting 5 from 9 = [6, 2, 5, 0, 4]
selected for crossover -> 0.697020679514 0.689598156171
>sampler distinct selecting 5 from 7 = [0, 0, 0, 0, 1]
selected for crossover -> 0.69356128899 0.677250045366
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.689598156171 0.702514562681
>sampler distinct selecting 2 from 5 = [3, 3]
selected for crossover -> 0.700627934433 0.646687884528
>sampler distinct selecting 4 from 9 = [6, 4, 0, 4]
selected for crossover -> 0.67801828229 0.700627934433
>sampler distinct selecting 5 from 6 = [0, 4, 3, 0, 1]
selected for crossover -> 0.700627934433 0.67801828229
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.685052462759 0.702514562681
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.681640868214 0.702514562681
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.692948482031 0.689598156171
>sampler distinct selecting 4 from 8 = [4, 1, 3, 0]
selected for crossover -> 0.69162076682 0.681640868214
>sampler distinct selecting 2 from 5 = [0, 1]
selected for crossover -> 0.677250045366 0.644361351034
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.700627934433 0.628525765123
>sampler distinct selecting 2 from 8 = [4, 4]
selected for crossover -> 0.611558852189 0.685052462759
>sampler distinct selecting 3 from 5 = [4, 3, 2]
selected for crossover -> 0.611558852189 0.692948482031
>sampler distinct selecting 5 from 7 = [4, 5, 0, 1, 2]
selected for crossover -> 0.628525765123 0.697020679514
>sampler distinct selecting 4 from 7 = [2, 4, 0, 2]
selected for crossover -> 0.681640868214 0.69356128899
>sampler distinct selecting 3 from 5 = [3, 1, 1]
selected for crossover -> 0.67801828229 0.689598156171
>sampler distinct selecting 5 from 6 = [0, 3, 3, 1, 1]
|- mutate
>sampler selecting 2 from 3 = [2, 0]
>sampler selecting 1 from 5 = [0]
>sampler selecting 5 from 5 = [3, 1, 2, 3, 3]
>sampler selecting 3 from 5 = [2, 1, 3]
generation =  6
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.56261206989
| | |-finished  1  forest. fitness = 0.639954099465
| | |-MSE =  0.448889836921
| | |-finished  2  forest. fitness = 0.690183597481
| | |-MSE =  0.455448780051
| | |-finished  3  forest. fitness = 0.687073302549
| | |-MSE =  0.442111054901
| | |-finished  4  forest. fitness = 0.693427872008
| | |-MSE =  0.456804904144
| | |-finished  5  forest. fitness = 0.686433713365
| | |-MSE =  0.459495173614
| | |-finished  6  forest. fitness = 0.685168418559
| | |-MSE =  0.551184864639
| | |-finished  7  forest. fitness = 0.644668487165
| | |-MSE =  0.579273388344
| | |-finished  8  forest. fitness = 0.633202590116
| | |-MSE =  0.461738823848
| | |-finished  9  forest. fitness = 0.684116740751
| | |-MSE =  0.467562060677
| | |-finished  10  forest. fitness = 0.681402188565
| | |-MSE =  0.63727999463
| | |-finished  11  forest. fitness = 0.610769082429
| | |-MSE =  0.462427315234
| | |-finished  13  forest. fitness = 0.683794667662
| | |-MSE =  0.587148823094
| | |-finished  13  forest. fitness = 0.63006063795
| | |-MSE =  0.553673738382
| | |-finished  14  forest. fitness = 0.643635774549
| | |-MSE =  0.446210537286
| | |-finished  15  forest. fitness = 0.691462255472
| | |-MSE =  0.531809716363
| | |-finished  16  forest. fitness = 0.652822598863
| | |-MSE =  0.533452359063
| | |-finished  17  forest. fitness = 0.652123291663
| | |-MSE =  0.688002294352
| | |-finished  18  forest. fitness = 0.592416256391
| | |-MSE =  0.431689290085
| | |-finished  19  forest. fitness = 0.698475574921
| | |-MSE =  0.446519233445
| | |-finished  20  forest. fitness = 0.691314693147
avg =  0.663625292154 max =  0.698475574921
|-spawn
selected for crossover -> 0.643635774549 0.698475574921
>sampler distinct selecting 2 from 6 = [4, 2]
selected for crossover -> 0.687073302549 0.698475574921
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.610769082429 0.652123291663
>sampler distinct selecting 2 from 9 = [5, 5]
selected for crossover -> 0.644668487165 0.683794667662
>sampler distinct selecting 5 from 6 = [0, 0, 2, 0, 0]
selected for crossover -> 0.691314693147 0.693427872008
>sampler distinct selecting 6 from 10 = [0, 3, 0, 0, 2, 0]
selected for crossover -> 0.698475574921 0.691462255472
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.698475574921 0.610769082429
>sampler distinct selecting 4 from 6 = [0, 1, 3, 0]
selected for crossover -> 0.652123291663 0.683794667662
>sampler distinct selecting 2 from 5 = [2, 1]
selected for crossover -> 0.685168418559 0.687073302549
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.643635774549 0.633202590116
>sampler distinct selecting 5 from 8 = [0, 5, 1, 0, 0]
selected for crossover -> 0.690183597481 0.639954099465
>sampler distinct selecting 2 from 6 = [0, 3]
selected for crossover -> 0.690183597481 0.693427872008
>sampler distinct selecting 4 from 7 = [0, 0, 2, 0]
selected for crossover -> 0.693427872008 0.698475574921
>sampler distinct selecting 5 from 6 = [3, 1, 0, 1, 1]
selected for crossover -> 0.683794667662 0.684116740751
>sampler distinct selecting 2 from 7 = [3, 5]
selected for crossover -> 0.652822598863 0.690183597481
>sampler distinct selecting 5 from 7 = [0, 2, 0, 0, 0]
selected for crossover -> 0.698475574921 0.63006063795
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.644668487165 0.681402188565
>sampler distinct selecting 2 from 8 = [0, 0]
selected for crossover -> 0.684116740751 0.643635774549
>sampler distinct selecting 4 from 11 = [6, 4, 7, 4]
selected for crossover -> 0.690183597481 0.639954099465
>sampler distinct selecting 4 from 6 = [0, 1, 3, 2]
selected for crossover -> 0.690183597481 0.684116740751
>sampler distinct selecting 3 from 8 = [6, 2, 2]
|- mutate
>sampler selecting 1 from 3 = [0]
>sampler selecting 4 from 5 = [1, 1, 2, 0]
>sampler selecting 3 from 5 = [3, 2, 3]
>sampler selecting 5 from 5 = [1, 1, 1, 3, 4]
generation =  7
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.461703962029
| | |-finished  1  forest. fitness = 0.684133057019
| | |-MSE =  0.46372920941
| | |-finished  2  forest. fitness = 0.68318647573
| | |-MSE =  0.459714685288
| | |-finished  3  forest. fitness = 0.685065383036
| | |-MSE =  0.546495910169
| | |-finished  4  forest. fitness = 0.64662311321
| | |-MSE =  0.4372590555
| | |-finished  5  forest. fitness = 0.695768794201
| | |-MSE =  0.4455146076
| | |-finished  6  forest. fitness = 0.691795153603
| | |-MSE =  0.539591823682
| | |-finished  7  forest. fitness = 0.649522805082
| | |-MSE =  0.48218211519
| | |-finished  8  forest. fitness = 0.674680924666
| | |-MSE =  0.439657774543
| | |-finished  9  forest. fitness = 0.694609522959
| | |-MSE =  0.447407655072
| | |-finished  10  forest. fitness = 0.690890362847
| | |-MSE =  0.44089234375
| | |-finished  11  forest. fitness = 0.694014375423
| | |-MSE =  0.457606271323
| | |-finished  12  forest. fitness = 0.686056323764
| | |-MSE =  0.429042818519
| | |-finished  13  forest. fitness = 0.699769095118
| | |-MSE =  0.447091678609
| | |-finished  14  forest. fitness = 0.691041220665
| | |-MSE =  0.434027833985
| | |-finished  15  forest. fitness = 0.697336534411
| | |-MSE =  0.562716695983
| | |-finished  16  forest. fitness = 0.639911253633
| | |-MSE =  0.540145583686
| | |-finished  17  forest. fitness = 0.64928926888
| | |-MSE =  0.582220973656
| | |-finished  18  forest. fitness = 0.632022970653
| | |-MSE =  0.568997829647
| | |-finished  19  forest. fitness = 0.637349511328
| | |-MSE =  0.434031784241
| | |-finished  20  forest. fitness = 0.697334613493
avg =  0.676020037986 max =  0.699769095118
|-spawn
selected for crossover -> 0.674680924666 0.690890362847
>sampler distinct selecting 4 from 9 = [8, 2, 1, 4]
selected for crossover -> 0.685065383036 0.684133057019
>sampler distinct selecting 3 from 6 = [4, 3, 0]
selected for crossover -> 0.68318647573 0.695768794201
>sampler distinct selecting 5 from 7 = [4, 2, 3, 1, 0]
selected for crossover -> 0.691795153603 0.64928926888
>sampler distinct selecting 6 from 7 = [3, 5, 1, 0, 1, 0]
selected for crossover -> 0.68318647573 0.64662311321
>sampler distinct selecting 1 from 7 = [0]
selected for crossover -> 0.697334613493 0.684133057019
>sampler distinct selecting 5 from 7 = [3, 0, 2, 0, 0]
selected for crossover -> 0.64662311321 0.68318647573
>sampler distinct selecting 1 from 7 = [0]
selected for crossover -> 0.697336534411 0.64928926888
>sampler distinct selecting 1 from 7 = [6]
selected for crossover -> 0.649522805082 0.64928926888
>sampler distinct selecting 4 from 9 = [0, 1, 4, 5]
selected for crossover -> 0.694609522959 0.697336534411
>sampler distinct selecting 2 from 6 = [0, 2]
selected for crossover -> 0.697334613493 0.694609522959
>sampler distinct selecting 3 from 9 = [0, 6, 0]
selected for crossover -> 0.649522805082 0.674680924666
>sampler distinct selecting 4 from 10 = [1, 5, 0, 3]
selected for crossover -> 0.697334613493 0.64662311321
>sampler distinct selecting 5 from 7 = [1, 4, 1, 3, 1]
selected for crossover -> 0.64928926888 0.68318647573
>sampler distinct selecting 5 from 10 = [1, 1, 4, 5, 0]
selected for crossover -> 0.64662311321 0.697336534411
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.637349511328 0.686056323764
>sampler distinct selecting 3 from 5 = [1, 0, 1]
selected for crossover -> 0.695768794201 0.697336534411
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.686056323764 0.685065383036
>sampler distinct selecting 4 from 7 = [1, 0, 3, 2]
selected for crossover -> 0.686056323764 0.674680924666
>sampler distinct selecting 5 from 9 = [6, 2, 1, 4, 0]
selected for crossover -> 0.690890362847 0.64662311321
>sampler distinct selecting 2 from 5 = [1, 1]
|- mutate
>sampler selecting 3 from 3 = [0, 2, 2]
>sampler selecting 1 from 5 = [1]
>sampler selecting 5 from 5 = [1, 0, 0, 3, 3]
>sampler selecting 3 from 5 = [3, 0, 3]
generation =  8
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.458514519778
| | |-finished  1  forest. fitness = 0.685629101692
| | |-MSE =  0.421601797175
| | |-finished  2  forest. fitness = 0.703431862556
| | |-MSE =  0.486968895277
| | |-finished  3  forest. fitness = 0.672509023677
| | |-MSE =  0.469633342327
| | |-finished  4  forest. fitness = 0.6804418294
| | |-MSE =  0.526481798133
| | |-finished  5  forest. fitness = 0.655101162178
| | |-MSE =  0.430855227007
| | |-finished  6  forest. fitness = 0.698882724908
| | |-MSE =  0.450420837218
| | |-finished  7  forest. fitness = 0.689455070101
| | |-MSE =  0.418368805674
| | |-finished  8  forest. fitness = 0.705035246122
| | |-MSE =  0.444652258712
| | |-finished  9  forest. fitness = 0.692208103348
| | |-MSE =  0.476877747053
| | |-finished  10  forest. fitness = 0.67710411508
| | |-MSE =  0.543707170546
| | |-finished  11  forest. fitness = 0.647791251528
| | |-MSE =  0.473993843025
| | |-finished  12  forest. fitness = 0.678428885393
| | |-MSE =  0.51175761481
| | |-finished  13  forest. fitness = 0.661481701963
| | |-MSE =  0.481133043907
| | |-finished  14  forest. fitness = 0.675158794218
| | |-MSE =  0.52820601856
| | |-finished  15  forest. fitness = 0.654362034866
| | |-MSE =  0.431978212822
| | |-finished  16  forest. fitness = 0.698334647166
| | |-MSE =  0.434600893164
| | |-finished  17  forest. fitness = 0.697057979515
| | |-MSE =  0.574244020054
| | |-finished  18  forest. fitness = 0.635225535089
| | |-MSE =  0.517740559443
| | |-finished  19  forest. fitness = 0.658874136148
| | |-MSE =  0.457646539234
| | |-finished  20  forest. fitness = 0.686037371258
avg =  0.67762752881 max =  0.705035246122
|-spawn
selected for crossover -> 0.654362034866 0.658874136148
>sampler distinct selecting 4 from 9 = [4, 6, 3, 2]
selected for crossover -> 0.678428885393 0.647791251528
>sampler distinct selecting 5 from 7 = [3, 4, 3, 0, 0]
selected for crossover -> 0.672509023677 0.685629101692
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.655101162178 0.6804418294
>sampler distinct selecting 1 from 7 = [2]
selected for crossover -> 0.6804418294 0.635225535089
>sampler distinct selecting 2 from 7 = [1, 1]
selected for crossover -> 0.675158794218 0.705035246122
>sampler distinct selecting 3 from 8 = [7, 3, 3]
selected for crossover -> 0.698882724908 0.697057979515
>sampler distinct selecting 6 from 10 = [5, 4, 6, 4, 4, 0]
selected for crossover -> 0.655101162178 0.647791251528
>sampler distinct selecting 2 from 7 = [0, 0]
selected for crossover -> 0.675158794218 0.67710411508
>sampler distinct selecting 3 from 11 = [9, 8, 2]
selected for crossover -> 0.658874136148 0.678428885393
>sampler distinct selecting 5 from 12 = [0, 3, 2, 0, 2]
selected for crossover -> 0.689455070101 0.67710411508
>sampler distinct selecting 5 from 10 = [2, 6, 0, 0, 3]
selected for crossover -> 0.678428885393 0.658874136148
>sampler distinct selecting 4 from 12 = [10, 9, 2, 6]
selected for crossover -> 0.705035246122 0.6804418294
>sampler distinct selecting 4 from 5 = [1, 0, 2, 1]
selected for crossover -> 0.692208103348 0.705035246122
>sampler distinct selecting 3 from 4 = [2, 0, 0]
selected for crossover -> 0.692208103348 0.635225535089
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.654362034866 0.67710411508
>sampler distinct selecting 2 from 6 = [0, 2]
selected for crossover -> 0.6804418294 0.705035246122
>sampler distinct selecting 3 from 5 = [0, 2, 1]
selected for crossover -> 0.703431862556 0.685629101692
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.698882724908 0.698334647166
>sampler distinct selecting 2 from 8 = [3, 4]
selected for crossover -> 0.6804418294 0.654362034866
>sampler distinct selecting 4 from 4 = [1, 0, 0, 0]
|- mutate
>sampler selecting 3 from 5 = [3, 3, 2]
>sampler selecting 4 from 5 = [4, 4, 2, 3]
>sampler selecting 3 from 5 = [2, 3, 3]
>sampler selecting 2 from 5 = [3, 1]
>sampler selecting 3 from 5 = [1, 2, 4]
generation =  9
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.484636040256
| | |-finished  1  forest. fitness = 0.673565758128
| | |-MSE =  0.459636075767
| | |-finished  2  forest. fitness = 0.685102277617
| | |-MSE =  0.463664217315
| | |-finished  3  forest. fitness = 0.683216811732
| | |-MSE =  0.453683206348
| | |-finished  4  forest. fitness = 0.687907788735
| | |-MSE =  0.493915024063
| | |-finished  5  forest. fitness = 0.669382116046
| | |-MSE =  0.464646063096
| | |-finished  6  forest. fitness = 0.682758807876
| | |-MSE =  0.438135084095
| | |-finished  7  forest. fitness = 0.695344972151
| | |-MSE =  0.434251804865
| | |-finished  8  forest. fitness = 0.697227639253
| | |-MSE =  0.505190423254
| | |-finished  9  forest. fitness = 0.664367766729
| | |-MSE =  0.43398187808
| | |-finished  10  forest. fitness = 0.697358882484
| | |-MSE =  0.489562354822
| | |-finished  11  forest. fitness = 0.671338126103
| | |-MSE =  0.487281252846
| | |-finished  12  forest. fitness = 0.672367783892
| | |-MSE =  0.485294811744
| | |-finished  13  forest. fitness = 0.673267012106
| | |-MSE =  0.456458446908
| | |-finished  14  forest. fitness = 0.686596999814
| | |-MSE =  0.45168327596
| | |-finished  15  forest. fitness = 0.688855493867
| | |-MSE =  0.462797492174
| | |-finished  16  forest. fitness = 0.683621625926
| | |-MSE =  0.457353155552
| | |-finished  17  forest. fitness = 0.686175479286
| | |-MSE =  0.511739531277
| | |-finished  18  forest. fitness = 0.661489614653
| | |-MSE =  0.476109137994
| | |-finished  19  forest. fitness = 0.677456682748
| | |-MSE =  0.588471615489
| | |-finished  20  forest. fitness = 0.629535957866
avg =  0.678346879851 max =  0.697358882484
|-spawn
selected for crossover -> 0.683621625926 0.686175479286
>sampler distinct selecting 2 from 4 = [2, 2]
selected for crossover -> 0.683621625926 0.673565758128
>sampler distinct selecting 4 from 8 = [5, 6, 4, 4]
selected for crossover -> 0.697227639253 0.683621625926
>sampler distinct selecting 3 from 9 = [2, 5, 4]
selected for crossover -> 0.682758807876 0.686596999814
>sampler distinct selecting 2 from 7 = [3, 3]
selected for crossover -> 0.697358882484 0.697227639253
>sampler distinct selecting 7 from 8 = [6, 5, 2, 3, 0, 1, 0]
selected for crossover -> 0.682758807876 0.661489614653
>sampler distinct selecting 4 from 6 = [0, 3, 1, 1]
selected for crossover -> 0.683216811732 0.688855493867
>sampler distinct selecting 4 from 5 = [0, 2, 0, 0]
selected for crossover -> 0.671338126103 0.683216811732
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.687907788735 0.697227639253
>sampler distinct selecting 6 from 10 = [6, 8, 6, 0, 4, 1]
selected for crossover -> 0.669382116046 0.686175479286
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.661489614653 0.673267012106
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.686596999814 0.695344972151
>sampler distinct selecting 3 from 8 = [4, 0, 2]
selected for crossover -> 0.682758807876 0.664367766729
>sampler distinct selecting 2 from 4 = [3, 1]
selected for crossover -> 0.683621625926 0.673565758128
>sampler distinct selecting 6 from 8 = [7, 0, 4, 3, 2, 0]
selected for crossover -> 0.697358882484 0.686596999814
>sampler distinct selecting 1 from 7 = [6]
selected for crossover -> 0.673267012106 0.669382116046
>sampler distinct selecting 3 from 5 = [0, 0, 1]
selected for crossover -> 0.669382116046 0.686175479286
>sampler distinct selecting 3 from 5 = [2, 1, 0]
selected for crossover -> 0.685102277617 0.677456682748
>sampler distinct selecting 1 from 7 = [0]
selected for crossover -> 0.677456682748 0.672367783892
>sampler distinct selecting 4 from 5 = [0, 1, 0, 1]
selected for crossover -> 0.697358882484 0.683621625926
>sampler distinct selecting 2 from 5 = [3, 1]
|- mutate
>sampler selecting 2 from 5 = [4, 2]
>sampler selecting 3 from 5 = [4, 2, 4]
generation =  10
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.45716263925
| | |-finished  1  forest. fitness = 0.686265193098
| | |-MSE =  0.450384387383
| | |-finished  2  forest. fitness = 0.689472396903
| | |-MSE =  0.455283099752
| | |-finished  3  forest. fitness = 0.687151524106
| | |-MSE =  0.531357437726
| | |-finished  4  forest. fitness = 0.6530154067
| | |-MSE =  0.629315802017
| | |-finished  5  forest. fitness = 0.613754558056
| | |-MSE =  0.644262903957
| | |-finished  6  forest. fitness = 0.60817524837
| | |-MSE =  0.572862885206
| | |-finished  7  forest. fitness = 0.635783328226
| | |-MSE =  0.633295395234
| | |-finished  8  forest. fitness = 0.612259119151
| | |-MSE =  0.468050484471
| | |-finished  10  forest. fitness = 0.681175484479
| | |-MSE =  0.656049310407
| | |-finished  10  forest. fitness = 0.603846753666
| | |-MSE =  0.613502247265
| | |-finished  11  forest. fitness = 0.619769821638
| | |-MSE =  0.621270326237
| | |-finished  12  forest. fitness = 0.616800285441
| | |-MSE =  0.505319875444
| | |-finished  13  forest. fitness = 0.664310633449
| | |-MSE =  0.631982756047
| | |-finished  14  forest. fitness = 0.612751572463
| | |-MSE =  0.649260526433
| | |-finished  15  forest. fitness = 0.606332343479
| | |-MSE =  0.669832224096
| | |-finished  16  forest. fitness = 0.598862559705
| | |-MSE =  0.443998024613
| | |-finished  17  forest. fitness = 0.69252172299
| | |-MSE =  0.523258641428
| | |-finished  18  forest. fitness = 0.656487331044
| | |-MSE =  0.620593289246
| | |-finished  19  forest. fitness = 0.617057966756
| | |-MSE =  0.637543956018
| | |-finished  20  forest. fitness = 0.610670630443
avg =  0.638323194008 max =  0.69252172299
|-spawn
selected for crossover -> 0.616800285441 0.687151524106
>sampler distinct selecting 1 from 7 = [0]
selected for crossover -> 0.664310633449 0.598862559705
>sampler distinct selecting 4 from 5 = [1, 0, 0, 0]
selected for crossover -> 0.606332343479 0.612751572463
>sampler distinct selecting 5 from 7 = [1, 3, 0, 1, 1]
selected for crossover -> 0.6530154067 0.619769821638
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.60817524837 0.6530154067
>sampler distinct selecting 2 from 9 = [0, 1]
selected for crossover -> 0.60817524837 0.689472396903
>sampler distinct selecting 2 from 8 = [6, 3]
selected for crossover -> 0.689472396903 0.664310633449
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.603846753666 0.619769821638
>sampler distinct selecting 4 from 5 = [3, 0, 1, 1]
selected for crossover -> 0.613754558056 0.619769821638
>sampler distinct selecting 3 from 6 = [1, 0, 1]
selected for crossover -> 0.616800285441 0.6530154067
>sampler distinct selecting 5 from 8 = [0, 4, 0, 3, 1]
selected for crossover -> 0.69252172299 0.610670630443
>sampler distinct selecting 2 from 5 = [4, 0]
selected for crossover -> 0.612751572463 0.603846753666
>sampler distinct selecting 1 from 7 = [0]
selected for crossover -> 0.617057966756 0.60817524837
>sampler distinct selecting 8 from 11 = [4, 4, 1, 6, 0, 4, 3, 0]
selected for crossover -> 0.656487331044 0.603846753666
>sampler distinct selecting 1 from 7 = [3]
selected for crossover -> 0.619769821638 0.603846753666
>sampler distinct selecting 4 from 5 = [1, 2, 2, 1]
selected for crossover -> 0.635783328226 0.612259119151
>sampler distinct selecting 3 from 7 = [0, 4, 1]
selected for crossover -> 0.606332343479 0.689472396903
>sampler distinct selecting 4 from 4 = [1, 0, 0, 0]
selected for crossover -> 0.689472396903 0.664310633449
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.681175484479 0.612751572463
>sampler distinct selecting 4 from 6 = [0, 0, 0, 1]
selected for crossover -> 0.598862559705 0.606332343479
>sampler distinct selecting 4 from 6 = [5, 2, 2, 0]
|- mutate
>sampler selecting 3 from 3 = [1, 1, 0]
>sampler selecting 5 from 5 = [0, 3, 2, 1, 0]
>sampler selecting 1 from 5 = [3]
>sampler selecting 3 from 5 = [3, 1, 3]
generation =  11
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.454701273876
| | |-finished  1  forest. fitness = 0.687426358909
| | |-MSE =  0.658956033006
| | |-finished  2  forest. fitness = 0.602788729842
| | |-MSE =  0.454358468005
| | |-finished  3  forest. fitness = 0.68758839172
| | |-MSE =  0.544545970147
| | |-finished  4  forest. fitness = 0.647439454265
| | |-MSE =  0.457768081972
| | |-finished  5  forest. fitness = 0.685980172269
| | |-MSE =  0.64283369903
| | |-finished  6  forest. fitness = 0.60870433848
| | |-MSE =  0.579271136879
| | |-finished  7  forest. fitness = 0.633203492832
| | |-MSE =  0.423157000528
| | |-finished  8  forest. fitness = 0.702663163396
| | |-MSE =  0.642432563563
| | |-finished  9  forest. fitness = 0.608853003883
| | |-MSE =  0.432455893686
| | |-finished  10  forest. fitness = 0.69810177361
| | |-MSE =  0.426727114284
| | |-finished  11  forest. fitness = 0.700904882222
| | |-MSE =  0.542931967347
| | |-finished  12  forest. fitness = 0.648116716202
| | |-MSE =  0.433002180606
| | |-finished  13  forest. fitness = 0.697835644309
| | |-MSE =  0.661809236962
| | |-finished  14  forest. fitness = 0.601753786029
| | |-MSE =  0.428928616885
| | |-finished  15  forest. fitness = 0.699825021476
| | |-MSE =  0.438938965003
| | |-finished  16  forest. fitness = 0.694956509151
| | |-MSE =  0.623114316046
| | |-finished  17  forest. fitness = 0.616099550176
| | |-MSE =  0.575907013871
| | |-finished  18  forest. fitness = 0.634555206112
| | |-MSE =  0.540788155017
| | |-finished  19  forest. fitness = 0.649018488845
| | |-MSE =  0.44119013364
| | |-finished  20  forest. fitness = 0.693870972787
avg =  0.659984282826 max =  0.702663163396
|-spawn
selected for crossover -> 0.60870433848 0.69810177361
>sampler distinct selecting 5 from 6 = [1, 1, 1, 0, 0]
selected for crossover -> 0.649018488845 0.693870972787
>sampler distinct selecting 3 from 10 = [8, 5, 7]
selected for crossover -> 0.648116716202 0.616099550176
>sampler distinct selecting 3 from 8 = [1, 5, 0]
selected for crossover -> 0.693870972787 0.602788729842
>sampler distinct selecting 4 from 6 = [3, 3, 0, 1]
selected for crossover -> 0.647439454265 0.649018488845
>sampler distinct selecting 4 from 11 = [5, 3, 8, 4]
selected for crossover -> 0.694956509151 0.649018488845
>sampler distinct selecting 4 from 9 = [1, 2, 4, 4]
selected for crossover -> 0.700904882222 0.647439454265
>sampler distinct selecting 3 from 5 = [2, 1, 0]
selected for crossover -> 0.69810177361 0.633203492832
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.601753786029 0.693870972787
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.60870433848 0.616099550176
>sampler distinct selecting 5 from 9 = [4, 4, 0, 1, 1]
selected for crossover -> 0.687426358909 0.702663163396
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.601753786029 0.697835644309
>sampler distinct selecting 4 from 5 = [1, 2, 1, 0]
selected for crossover -> 0.700904882222 0.601753786029
>sampler distinct selecting 3 from 6 = [4, 4, 1]
selected for crossover -> 0.687426358909 0.68758839172
>sampler distinct selecting 6 from 9 = [3, 1, 3, 5, 0, 2]
selected for crossover -> 0.647439454265 0.634555206112
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.633203492832 0.693870972787
>sampler distinct selecting 3 from 5 = [0, 0, 0]
selected for crossover -> 0.602788729842 0.700904882222
>sampler distinct selecting 3 from 6 = [2, 2, 2]
selected for crossover -> 0.602788729842 0.693870972787
>sampler distinct selecting 2 from 6 = [1, 0]
selected for crossover -> 0.633203492832 0.687426358909
>sampler distinct selecting 3 from 4 = [1, 0, 0]
selected for crossover -> 0.601753786029 0.649018488845
>sampler distinct selecting 3 from 12 = [10, 2, 3]
|- mutate
>sampler selecting 1 from 3 = [0]
>sampler selecting 3 from 5 = [1, 1, 2]
>sampler selecting 1 from 3 = [2]
>sampler selecting 2 from 5 = [1, 2]
generation =  12
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.575467482866
| | |-finished  1  forest. fitness = 0.634732237177
| | |-MSE =  0.451296240992
| | |-finished  2  forest. fitness = 0.68903919941
| | |-MSE =  0.587056658916
| | |-finished  3  forest. fitness = 0.630097227079
| | |-MSE =  0.623897853883
| | |-finished  4  forest. fitness = 0.615802279441
| | |-MSE =  0.620583997223
| | |-finished  5  forest. fitness = 0.617061504812
| | |-MSE =  0.46640112354
| | |-finished  6  forest. fitness = 0.681941648807
| | |-MSE =  0.520485701951
| | |-finished  7  forest. fitness = 0.657684579814
| | |-MSE =  0.454182132164
| | |-finished  8  forest. fitness = 0.6876717695
| | |-MSE =  0.596279418033
| | |-finished  9  forest. fitness = 0.626456739781
| | |-MSE =  0.472403184053
| | |-finished  11  forest. fitness = 0.679161802168
| | |-MSE =  0.567124682095
| | |-finished  11  forest. fitness = 0.638111320321
| | |-MSE =  0.456349636719
| | |-finished  12  forest. fitness = 0.686648298449
| | |-MSE =  0.613542950954
| | |-finished  13  forest. fitness = 0.61975418715
| | |-MSE =  0.56740328445
| | |-finished  14  forest. fitness = 0.637997897491
| | |-MSE =  0.624550633378
| | |-finished  15  forest. fitness = 0.615554836798
| | |-MSE =  0.576437392469
| | |-finished  16  forest. fitness = 0.634341715553
| | |-MSE =  0.619899625025
| | |-finished  17  forest. fitness = 0.617322199815
| | |-MSE =  0.558116349618
| | |-finished  18  forest. fitness = 0.64180059483
| | |-MSE =  0.635583712905
| | |-finished  19  forest. fitness = 0.611402517713
| | |-MSE =  0.4510530832
| | |-finished  20  forest. fitness = 0.689154664001
avg =  0.645586861006 max =  0.689154664001
|-spawn
selected for crossover -> 0.6876717695 0.64180059483
>sampler distinct selecting 2 from 6 = [2, 0]
selected for crossover -> 0.630097227079 0.638111320321
>sampler distinct selecting 3 from 5 = [1, 2, 1]
selected for crossover -> 0.679161802168 0.615802279441
>sampler distinct selecting 2 from 7 = [1, 1]
selected for crossover -> 0.626456739781 0.681941648807
>sampler distinct selecting 3 from 7 = [4, 2, 1]
selected for crossover -> 0.637997897491 0.657684579814
>sampler distinct selecting 1 from 7 = [0]
selected for crossover -> 0.679161802168 0.68903919941
>sampler distinct selecting 3 from 4 = [1, 0, 1]
selected for crossover -> 0.626456739781 0.681941648807
>sampler distinct selecting 1 from 7 = [0]
selected for crossover -> 0.6876717695 0.617061504812
>sampler distinct selecting 4 from 7 = [4, 3, 0, 2]
selected for crossover -> 0.64180059483 0.634341715553
>sampler distinct selecting 3 from 6 = [4, 4, 2]
selected for crossover -> 0.64180059483 0.615802279441
>sampler distinct selecting 4 from 8 = [7, 0, 1, 3]
selected for crossover -> 0.681941648807 0.626456739781
>sampler distinct selecting 2 from 7 = [0, 1]
selected for crossover -> 0.686648298449 0.638111320321
>sampler distinct selecting 2 from 3 = [2, 1]
selected for crossover -> 0.679161802168 0.686648298449
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.634732237177 0.64180059483
>sampler distinct selecting 3 from 6 = [0, 3, 2]
selected for crossover -> 0.626456739781 0.630097227079
>sampler distinct selecting 4 from 8 = [0, 1, 3, 0]
selected for crossover -> 0.630097227079 0.689154664001
>sampler distinct selecting 3 from 6 = [2, 0, 1]
selected for crossover -> 0.6876717695 0.617322199815
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.634732237177 0.657684579814
>sampler distinct selecting 3 from 6 = [4, 0, 0]
selected for crossover -> 0.689154664001 0.637997897491
>sampler distinct selecting 3 from 6 = [4, 2, 0]
selected for crossover -> 0.637997897491 0.617322199815
>sampler distinct selecting 2 from 7 = [1, 2]
|- mutate
generation =  13
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.449829815041
| | |-finished  1  forest. fitness = 0.68973612601
| | |-MSE =  0.57450882782
| | |-finished  2  forest. fitness = 0.635118700087
| | |-MSE =  0.526060226942
| | |-finished  3  forest. fitness = 0.655282132609
| | |-MSE =  0.607172177462
| | |-finished  4  forest. fitness = 0.62221087076
| | |-MSE =  0.54614421623
| | |-finished  5  forest. fitness = 0.646770197439
| | |-MSE =  0.534988128806
| | |-finished  6  forest. fitness = 0.65147083631
| | |-MSE =  0.429613486755
| | |-finished  7  forest. fitness = 0.699489763677
| | |-MSE =  0.675854628826
| | |-finished  8  forest. fitness = 0.596710468079
| | |-MSE =  0.479690191275
| | |-finished  9  forest. fitness = 0.675817144627
| | |-MSE =  0.432986206339
| | |-finished  10  forest. fitness = 0.697843423458
| | |-MSE =  0.422353192358
| | |-finished  11  forest. fitness = 0.703060256322
| | |-MSE =  0.551328767001
| | |-finished  12  forest. fitness = 0.644608687257
| | |-MSE =  0.445067940123
| | |-finished  13  forest. fitness = 0.692008986038
| | |-MSE =  0.438903681689
| | |-finished  14  forest. fitness = 0.694973550159
| | |-MSE =  0.664648074272
| | |-finished  15  forest. fitness = 0.600727574468
| | |-MSE =  0.439608644567
| | |-finished  16  forest. fitness = 0.694633228117
| | |-MSE =  0.455123944483
| | |-finished  17  forest. fitness = 0.687226681817
| | |-MSE =  0.630423724711
| | |-finished  18  forest. fitness = 0.613337493097
| | |-MSE =  0.600413469626
| | |-finished  19  forest. fitness = 0.624838530154
| | |-MSE =  0.611400011597
| | |-finished  20  forest. fitness = 0.620578374583
avg =  0.657322151253 max =  0.703060256322
|-spawn
selected for crossover -> 0.697843423458 0.694973550159
>sampler distinct selecting 3 from 6 = [4, 1, 0]
selected for crossover -> 0.620578374583 0.596710468079
>sampler distinct selecting 5 from 6 = [2, 4, 2, 0, 0]
selected for crossover -> 0.596710468079 0.68973612601
>sampler distinct selecting 3 from 6 = [3, 2, 3]
selected for crossover -> 0.620578374583 0.613337493097
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.699489763677 0.620578374583
>sampler distinct selecting 3 from 5 = [0, 0, 1]
selected for crossover -> 0.635118700087 0.646770197439
>sampler distinct selecting 4 from 7 = [3, 0, 0, 0]
selected for crossover -> 0.62221087076 0.68973612601
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.655282132609 0.600727574468
>sampler distinct selecting 3 from 5 = [2, 1, 1]
selected for crossover -> 0.687226681817 0.694973550159
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.596710468079 0.635118700087
>sampler distinct selecting 1 from 7 = [4]
selected for crossover -> 0.600727574468 0.694973550159
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.703060256322 0.624838530154
>sampler distinct selecting 3 from 5 = [3, 1, 1]
selected for crossover -> 0.687226681817 0.62221087076
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.692008986038 0.694633228117
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.655282132609 0.613337493097
>sampler distinct selecting 4 from 7 = [6, 3, 1, 3]
selected for crossover -> 0.692008986038 0.697843423458
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.613337493097 0.646770197439
>sampler distinct selecting 3 from 8 = [3, 3, 4]
selected for crossover -> 0.692008986038 0.697843423458
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.65147083631 0.600727574468
>sampler distinct selecting 4 from 5 = [1, 1, 1, 0]
selected for crossover -> 0.68973612601 0.624838530154
>sampler distinct selecting 2 from 5 = [0, 1]
|- mutate
generation =  14
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.567091630577
| | |-finished  1  forest. fitness = 0.638124778723
| | |-MSE =  0.459184546053
| | |-finished  2  forest. fitness = 0.685314275501
| | |-MSE =  0.5678278921
| | |-finished  3  forest. fitness = 0.637825111442
| | |-MSE =  0.605051123771
| | |-finished  5  forest. fitness = 0.623033114142
| | |-MSE =  0.448052295991
| | |-finished  5  forest. fitness = 0.690582793708
| | |-MSE =  0.504059827645
| | |-finished  6  forest. fitness = 0.664867169258
| | |-MSE =  0.556184617549
| | |-finished  7  forest. fitness = 0.642597278448
| | |-MSE =  0.566072330646
| | |-finished  8  forest. fitness = 0.638540111099
| | |-MSE =  0.658688050637
| | |-finished  9  forest. fitness = 0.602886118108
| | |-MSE =  0.556216095407
| | |-finished  10  forest. fitness = 0.64258428052
| | |-MSE =  0.597411117398
| | |-finished  11  forest. fitness = 0.626012921225
| | |-MSE =  0.541880653355
| | |-finished  12  forest. fitness = 0.6485586273
| | |-MSE =  0.434801669248
| | |-finished  13  forest. fitness = 0.69696043811
| | |-MSE =  0.450576088477
| | |-finished  14  forest. fitness = 0.689381279578
| | |-MSE =  0.568100130892
| | |-finished  15  forest. fitness = 0.637714378246
| | |-MSE =  0.585938681727
| | |-finished  16  forest. fitness = 0.630541402087
| | |-MSE =  0.462248405663
| | |-finished  17  forest. fitness = 0.683878331566
| | |-MSE =  0.598323585259
| | |-finished  18  forest. fitness = 0.625655536352
| | |-MSE =  0.679031784751
| | |-finished  19  forest. fitness = 0.595581339842
| | |-MSE =  0.5518757773
| | |-finished  20  forest. fitness = 0.644381473458
avg =  0.647251037936 max =  0.69696043811
|-spawn
selected for crossover -> 0.626012921225 0.642597278448
>sampler distinct selecting 3 from 3 = [1, 1, 0]
selected for crossover -> 0.637714378246 0.623033114142
>sampler distinct selecting 3 from 4 = [2, 1, 1]
selected for crossover -> 0.623033114142 0.626012921225
>sampler distinct selecting 4 from 5 = [3, 1, 0, 0]
selected for crossover -> 0.64258428052 0.602886118108
>sampler distinct selecting 6 from 8 = [0, 0, 3, 1, 2, 0]
selected for crossover -> 0.664867169258 0.689381279578
>sampler distinct selecting 2 from 5 = [2, 3]
selected for crossover -> 0.625655536352 0.626012921225
>sampler distinct selecting 3 from 5 = [2, 0, 1]
selected for crossover -> 0.625655536352 0.637825111442
>sampler distinct selecting 1 from 7 = [5]
selected for crossover -> 0.685314275501 0.664867169258
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.6485586273 0.625655536352
>sampler distinct selecting 4 from 4 = [1, 2, 0, 0]
selected for crossover -> 0.69696043811 0.683878331566
>sampler distinct selecting 4 from 4 = [0, 0, 0, 0]
selected for crossover -> 0.69696043811 0.685314275501
>sampler distinct selecting 2 from 4 = [3, 1]
selected for crossover -> 0.595581339842 0.644381473458
>sampler distinct selecting 3 from 5 = [0, 1, 0]
selected for crossover -> 0.683878331566 0.595581339842
>sampler distinct selecting 3 from 5 = [0, 1, 1]
selected for crossover -> 0.685314275501 0.638124778723
>sampler distinct selecting 5 from 5 = [3, 3, 1, 0, 0]
selected for crossover -> 0.683878331566 0.602886118108
>sampler distinct selecting 5 from 6 = [0, 2, 1, 0, 0]
selected for crossover -> 0.602886118108 0.685314275501
>sampler distinct selecting 3 from 6 = [4, 4, 0]
selected for crossover -> 0.664867169258 0.6485586273
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.685314275501 0.690582793708
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.637825111442 0.638124778723
>sampler distinct selecting 2 from 8 = [6, 0]
selected for crossover -> 0.69696043811 0.689381279578
>sampler distinct selecting 2 from 6 = [4, 1]
|- mutate
>sampler selecting 1 from 5 = [0]
>sampler selecting 3 from 5 = [1, 3, 1]
>sampler selecting 1 from 3 = [1]
>sampler selecting 5 from 5 = [0, 0, 3, 3, 4]
-+=> 2 <=+-
>sampler selecting 1 from 3 = [1]
>sampler selecting 3 from 5 = [2, 2, 3]
>sampler selecting 3 from 3 = [1, 1, 0]
>sampler selecting 3 from 5 = [4, 2, 4]
>sampler selecting 2 from 5 = [1, 2]
>sampler selecting 5 from 5 = [3, 1, 3, 2, 3]
>sampler selecting 2 from 3 = [1, 0]
>sampler selecting 1 from 5 = [2]
>sampler selecting 2 from 5 = [0, 4]
>sampler selecting 2 from 3 = [2, 1]
>sampler selecting 4 from 5 = [2, 2, 0, 3]
>sampler selecting 5 from 5 = [2, 3, 0, 2, 2]
>sampler selecting 1 from 3 = [1]
>sampler selecting 2 from 5 = [3, 1]
>sampler selecting 1 from 3 = [0]
>sampler selecting 1 from 5 = [4]
>sampler selecting 1 from 3 = [0]
>sampler selecting 3 from 5 = [1, 2, 2]
>sampler selecting 2 from 3 = [1, 2]
>sampler selecting 1 from 5 = [4]
>sampler selecting 2 from 5 = [1, 3]
>sampler selecting 2 from 3 = [0, 1]
>sampler selecting 4 from 5 = [2, 4, 2, 0]
>sampler selecting 2 from 5 = [3, 1]
>sampler selecting 3 from 3 = [1, 1, 0]
>sampler selecting 5 from 5 = [4, 2, 3, 1, 2]
>sampler selecting 4 from 5 = [1, 1, 3, 4]
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 3 from 3 = [1, 2, 0]
>sampler selecting 4 from 5 = [2, 1, 1, 3]
>sampler selecting 2 from 5 = [1, 0]
>sampler selecting 3 from 5 = [2, 3, 2]
>sampler selecting 3 from 3 = [1, 1, 1]
>sampler selecting 5 from 5 = [3, 3, 1, 1, 3]
>sampler selecting 4 from 5 = [3, 1, 1, 1]
>sampler selecting 4 from 5 = [1, 1, 1, 3]
>sampler selecting 3 from 3 = [2, 0, 0]
>sampler selecting 2 from 5 = [3, 4]
>sampler selecting 2 from 5 = [4, 1]
>sampler selecting 3 from 5 = [4, 4, 3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [0, 3, 1, 1]
>sampler selecting 2 from 3 = [0, 1]
>sampler selecting 5 from 5 = [1, 3, 1, 1, 2]
>sampler selecting 2 from 5 = [4, 0]
>sampler selecting 2 from 3 = [1, 0]
>sampler selecting 5 from 5 = [3, 3, 2, 3, 0]
>sampler selecting 1 from 5 = [3]
>sampler selecting 3 from 3 = [1, 2, 1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 5 from 5 = [0, 3, 2, 1, 4]
>sampler selecting 3 from 5 = [3, 2, 3]
>sampler selecting 3 from 3 = [1, 1, 2]
>sampler selecting 1 from 5 = [2]
>sampler selecting 5 from 5 = [0, 1, 2, 1, 1]
>sampler selecting 3 from 5 = [1, 1, 3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [3, 3, 3, 2]
>sampler selecting 3 from 3 = [0, 1, 0]
>sampler selecting 2 from 5 = [3, 2]
>sampler selecting 5 from 5 = [2, 0, 3, 3, 1]
>sampler selecting 4 from 5 = [4, 4, 0, 1]
generation =  0
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.570866528955
| | |-finished  1  forest. fitness = 0.636591321775
| | |-MSE =  0.574905711952
| | |-finished  2  forest. fitness = 0.634958646991
| | |-MSE =  0.454137639854
| | |-finished  3  forest. fitness = 0.687692810222
| | |-MSE =  0.459191955136
| | |-finished  4  forest. fitness = 0.685310795801
| | |-MSE =  0.455829728177
| | |-finished  5  forest. fitness = 0.68689351553
| | |-MSE =  0.454337089844
| | |-finished  6  forest. fitness = 0.687598498989
| | |-MSE =  0.473387768071
| | |-finished  7  forest. fitness = 0.678707955686
| | |-MSE =  0.550241945019
| | |-finished  8  forest. fitness = 0.645060600517
| | |-MSE =  0.452778171275
| | |-finished  9  forest. fitness = 0.688336333635
| | |-MSE =  0.514300103783
| | |-finished  10  forest. fitness = 0.660371083316
| | |-MSE =  0.556263129276
| | |-finished  11  forest. fitness = 0.642564860137
| | |-MSE =  0.49756928382
| | |-finished  12  forest. fitness = 0.667748738442
| | |-MSE =  0.55467153696
| | |-finished  13  forest. fitness = 0.643222684809
| | |-MSE =  0.531579013471
| | |-finished  14  forest. fitness = 0.652920934019
| | |-MSE =  0.454956233746
| | |-finished  15  forest. fitness = 0.68730589746
| | |-MSE =  0.455832535376
| | |-finished  16  forest. fitness = 0.686892191032
| | |-MSE =  0.441409738791
| | |-finished  17  forest. fitness = 0.693765258474
| | |-MSE =  0.602914595573
| | |-finished  18  forest. fitness = 0.623863556275
| | |-MSE =  0.673197535749
| | |-finished  19  forest. fitness = 0.597658064056
| | |-MSE =  0.595441305695
| | |-finished  20  forest. fitness = 0.626785828116
avg =  0.660712478764 max =  0.693765258474
|-spawn
selected for crossover -> 0.68689351553 0.687692810222
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.623863556275 0.685310795801
>sampler distinct selecting 2 from 5 = [3, 1]
selected for crossover -> 0.68730589746 0.693765258474
>sampler distinct selecting 3 from 4 = [1, 1, 0]
selected for crossover -> 0.626785828116 0.623863556275
>sampler distinct selecting 4 from 5 = [2, 0, 2, 1]
selected for crossover -> 0.626785828116 0.645060600517
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.645060600517 0.597658064056
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.678707955686 0.686892191032
>sampler distinct selecting 3 from 5 = [3, 0, 0]
selected for crossover -> 0.636591321775 0.623863556275
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.597658064056 0.68689351553
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.667748738442 0.636591321775
>sampler distinct selecting 3 from 6 = [2, 0, 2]
selected for crossover -> 0.634958646991 0.687598498989
>sampler distinct selecting 4 from 5 = [0, 0, 0, 0]
selected for crossover -> 0.642564860137 0.687692810222
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.634958646991 0.68730589746
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.685310795801 0.626785828116
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.688336333635 0.645060600517
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.645060600517 0.634958646991
>sampler distinct selecting 2 from 3 = [1, 1]
selected for crossover -> 0.68730589746 0.687598498989
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.68730589746 0.687692810222
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.645060600517 0.685310795801
>sampler distinct selecting 4 from 4 = [2, 0, 1, 0]
selected for crossover -> 0.688336333635 0.693765258474
>sampler distinct selecting 1 from 4 = [0]
|- mutate
generation =  1
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.450787453793
| | |-finished  1  forest. fitness = 0.689280843576
| | |-MSE =  0.61217922957
| | |-finished  2  forest. fitness = 0.620278429134
| | |-MSE =  0.561373789863
| | |-finished  3  forest. fitness = 0.640461628402
| | |-MSE =  0.479574693943
| | |-finished  4  forest. fitness = 0.675869899704
| | |-MSE =  0.459574912393
| | |-finished  5  forest. fitness = 0.685130986775
| | |-MSE =  0.436352403238
| | |-finished  6  forest. fitness = 0.696207976362
| | |-MSE =  0.552063745845
| | |-finished  7  forest. fitness = 0.644303433204
| | |-MSE =  0.466698524163
| | |-finished  8  forest. fitness = 0.681803372353
| | |-MSE =  0.459340411113
| | |-finished  9  forest. fitness = 0.685241080412
| | |-MSE =  0.566230504353
| | |-finished  10  forest. fitness = 0.638475624897
| | |-MSE =  0.461939173999
| | |-finished  11  forest. fitness = 0.684022986582
| | |-MSE =  0.562484819684
| | |-finished  13  forest. fitness = 0.640006217918
| | |-MSE =  0.602886014934
| | |-finished  13  forest. fitness = 0.623874680223
| | |-MSE =  0.450158111284
| | |-finished  14  forest. fitness = 0.689579979051
| | |-MSE =  0.7086156075
| | |-finished  15  forest. fitness = 0.585269147496
| | |-MSE =  0.453539237525
| | |-finished  16  forest. fitness = 0.687975923996
| | |-MSE =  0.555109638138
| | |-finished  17  forest. fitness = 0.643041477897
| | |-MSE =  0.432325523441
| | |-finished  18  forest. fitness = 0.698165314821
| | |-MSE =  0.57826556531
| | |-finished  19  forest. fitness = 0.633606930278
| | |-MSE =  0.564746800804
| | |-finished  20  forest. fitness = 0.639081031823
avg =  0.659083848245 max =  0.698165314821
|-spawn
selected for crossover -> 0.689280843576 0.640461628402
>sampler distinct selecting 3 from 4 = [1, 2, 0]
selected for crossover -> 0.685130986775 0.633606930278
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.644303433204 0.623874680223
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.620278429134 0.633606930278
>sampler distinct selecting 5 from 6 = [2, 1, 1, 1, 1]
selected for crossover -> 0.639081031823 0.685241080412
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.633606930278 0.698165314821
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.696207976362 0.638475624897
>sampler distinct selecting 2 from 5 = [4, 1]
selected for crossover -> 0.681803372353 0.644303433204
>sampler distinct selecting 3 from 4 = [3, 0, 0]
selected for crossover -> 0.689280843576 0.684022986582
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.620278429134 0.640006217918
>sampler distinct selecting 2 from 8 = [0, 1]
selected for crossover -> 0.689280843576 0.640006217918
>sampler distinct selecting 5 from 6 = [5, 1, 2, 0, 0]
selected for crossover -> 0.644303433204 0.696207976362
>sampler distinct selecting 3 from 4 = [2, 0, 0]
selected for crossover -> 0.644303433204 0.623874680223
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.689280843576 0.620278429134
>sampler distinct selecting 4 from 6 = [3, 0, 2, 0]
selected for crossover -> 0.685241080412 0.689280843576
>sampler distinct selecting 3 from 3 = [1, 1, 0]
selected for crossover -> 0.639081031823 0.685130986775
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.698165314821 0.684022986582
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.633606930278 0.687975923996
>sampler distinct selecting 4 from 5 = [4, 3, 0, 0]
selected for crossover -> 0.633606930278 0.685241080412
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.685130986775 0.687975923996
>sampler distinct selecting 4 from 4 = [2, 1, 1, 0]
|- mutate
>sampler selecting 4 from 5 = [0, 2, 2, 2]
>sampler selecting 2 from 5 = [0, 3]
>sampler selecting 3 from 5 = [3, 2, 1]
generation =  2
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.449263679179
| | |-finished  1  forest. fitness = 0.690005562388
| | |-MSE =  0.463731231416
| | |-finished  2  forest. fitness = 0.683185531973
| | |-MSE =  0.461264729756
| | |-finished  3  forest. fitness = 0.684338696224
| | |-MSE =  0.667708315695
| | |-finished  4  forest. fitness = 0.599625240571
| | |-MSE =  0.680960547225
| | |-finished  5  forest. fitness = 0.594897959771
| | |-MSE =  0.591594960867
| | |-finished  6  forest. fitness = 0.628300556729
| | |-MSE =  0.445589770932
| | |-finished  7  forest. fitness = 0.691759183766
| | |-MSE =  0.44354994789
| | |-finished  8  forest. fitness = 0.692736681167
| | |-MSE =  0.639867353691
| | |-finished  9  forest. fitness = 0.609805419779
| | |-MSE =  0.572894754488
| | |-finished  10  forest. fitness = 0.635770446272
| | |-MSE =  0.444311497214
| | |-finished  11  forest. fitness = 0.692371418443
| | |-MSE =  0.556631959667
| | |-finished  12  forest. fitness = 0.642412609988
| | |-MSE =  0.427417086786
| | |-finished  13  forest. fitness = 0.700566084894
| | |-MSE =  0.457661371465
| | |-finished  14  forest. fitness = 0.68603039058
| | |-MSE =  0.426804867274
| | |-finished  16  forest. fitness = 0.700866686775
| | |-MSE =  0.473924395892
| | |-finished  16  forest. fitness = 0.678460851036
| | |-MSE =  0.459145932214
| | |-finished  17  forest. fitness = 0.685332411189
| | |-MSE =  0.456338343373
| | |-finished  18  forest. fitness = 0.686653623143
| | |-MSE =  0.55845808643
| | |-finished  19  forest. fitness = 0.641659861569
| | |-MSE =  0.470310106672
| | |-finished  20  forest. fitness = 0.680128631003
avg =  0.665245392363 max =  0.700866686775
|-spawn
selected for crossover -> 0.700566084894 0.692371418443
>sampler distinct selecting 4 from 7 = [6, 0, 3, 0]
selected for crossover -> 0.678460851036 0.641659861569
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.642412609988 0.680128631003
>sampler distinct selecting 2 from 3 = [2, 0]
selected for crossover -> 0.684338696224 0.594897959771
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.690005562388 0.641659861569
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.700566084894 0.628300556729
>sampler distinct selecting 1 from 8 = [5]
selected for crossover -> 0.635770446272 0.678460851036
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.642412609988 0.700566084894
>sampler distinct selecting 4 from 5 = [0, 2, 0, 1]
selected for crossover -> 0.684338696224 0.599625240571
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.678460851036 0.690005562388
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.700566084894 0.680128631003
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.692371418443 0.690005562388
>sampler distinct selecting 3 from 7 = [2, 0, 0]
selected for crossover -> 0.628300556729 0.635770446272
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.678460851036 0.683185531973
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.594897959771 0.628300556729
>sampler distinct selecting 5 from 9 = [7, 0, 1, 1, 1]
selected for crossover -> 0.609805419779 0.691759183766
>sampler distinct selecting 4 from 9 = [8, 1, 4, 3]
selected for crossover -> 0.700866686775 0.68603039058
>sampler distinct selecting 3 from 4 = [2, 0, 0]
selected for crossover -> 0.641659861569 0.700866686775
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.642412609988 0.68603039058
>sampler distinct selecting 1 from 5 = [4]
selected for crossover -> 0.635770446272 0.609805419779
>sampler distinct selecting 6 from 6 = [3, 2, 2, 1, 0, 0]
|- mutate
>sampler selecting 2 from 5 = [2, 4]
generation =  3
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.445830937292
| | |-finished  1  forest. fitness = 0.691643797492
| | |-MSE =  0.464294595606
| | |-finished  2  forest. fitness = 0.682922687143
| | |-MSE =  0.456006962354
| | |-finished  3  forest. fitness = 0.686809902601
| | |-MSE =  0.577973747627
| | |-finished  4  forest. fitness = 0.633724104411
| | |-MSE =  0.642644472113
| | |-finished  5  forest. fitness = 0.608774459097
| | |-MSE =  0.466333284652
| | |-finished  6  forest. fitness = 0.681973198363
| | |-MSE =  0.459230910657
| | |-finished  7  forest. fitness = 0.685292500794
| | |-MSE =  0.451169642319
| | |-finished  8  forest. fitness = 0.689099310541
| | |-MSE =  0.427293689479
| | |-finished  9  forest. fitness = 0.700626652644
| | |-MSE =  0.448733973462
| | |-finished  10  forest. fitness = 0.690257851557
| | |-MSE =  0.658300314194
| | |-finished  11  forest. fitness = 0.603027082272
| | |-MSE =  0.56682378264
| | |-finished  12  forest. fitness = 0.638233865914
| | |-MSE =  0.441668126265
| | |-finished  13  forest. fitness = 0.693640916229
| | |-MSE =  0.552120363828
| | |-finished  14  forest. fitness = 0.644279930413
| | |-MSE =  0.446304471466
| | |-finished  15  forest. fitness = 0.691417346575
| | |-MSE =  0.426960759398
| | |-finished  16  forest. fitness = 0.700790118729
| | |-MSE =  0.580708439878
| | |-finished  17  forest. fitness = 0.63262773499
| | |-MSE =  0.635938956459
| | |-finished  18  forest. fitness = 0.611269751877
| | |-MSE =  0.587671364551
| | |-finished  19  forest. fitness = 0.629853269592
| | |-MSE =  0.445665660775
| | |-finished  20  forest. fitness = 0.691722870047
avg =  0.664399367564 max =  0.700790118729
|-spawn
selected for crossover -> 0.608774459097 0.685292500794
>sampler distinct selecting 4 from 10 = [0, 7, 3, 1]
selected for crossover -> 0.644279930413 0.700626652644
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.682922687143 0.689099310541
>sampler distinct selecting 5 from 5 = [1, 0, 2, 0, 0]
selected for crossover -> 0.686809902601 0.63262773499
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.691417346575 0.644279930413
>sampler distinct selecting 2 from 6 = [0, 0]
selected for crossover -> 0.63262773499 0.691417346575
>sampler distinct selecting 3 from 4 = [0, 1, 0]
selected for crossover -> 0.691417346575 0.681973198363
>sampler distinct selecting 3 from 3 = [1, 1, 0]
selected for crossover -> 0.603027082272 0.691643797492
>sampler distinct selecting 3 from 8 = [3, 4, 1]
selected for crossover -> 0.603027082272 0.63262773499
>sampler distinct selecting 5 from 7 = [6, 0, 0, 1, 1]
selected for crossover -> 0.681973198363 0.689099310541
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.63262773499 0.681973198363
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.686809902601 0.603027082272
>sampler distinct selecting 2 from 7 = [2, 0]
selected for crossover -> 0.700790118729 0.633724104411
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.608774459097 0.682922687143
>sampler distinct selecting 6 from 7 = [3, 3, 0, 3, 2, 0]
selected for crossover -> 0.690257851557 0.685292500794
>sampler distinct selecting 2 from 5 = [1, 2]
selected for crossover -> 0.611269751877 0.691643797492
>sampler distinct selecting 2 from 6 = [4, 0]
selected for crossover -> 0.638233865914 0.682922687143
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.686809902601 0.611269751877
>sampler distinct selecting 2 from 5 = [4, 1]
selected for crossover -> 0.691722870047 0.682922687143
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.686809902601 0.633724104411
>sampler distinct selecting 3 from 3 = [1, 1, 0]
|- mutate
generation =  4
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.45981372555
| | |-finished  1  forest. fitness = 0.685018905151
| | |-MSE =  0.553958764633
| | |-finished  2  forest. fitness = 0.643517719234
| | |-MSE =  0.563221369857
| | |-finished  3  forest. fitness = 0.639704663257
| | |-MSE =  0.595330461032
| | |-finished  4  forest. fitness = 0.626829377628
| | |-MSE =  0.470608206267
| | |-finished  5  forest. fitness = 0.679990765548
| | |-MSE =  0.44371932533
| | |-finished  6  forest. fitness = 0.692655409161
| | |-MSE =  0.473992512831
| | |-finished  7  forest. fitness = 0.678429497637
| | |-MSE =  0.626795627792
| | |-finished  8  forest. fitness = 0.6147053649
| | |-MSE =  0.423585383256
| | |-finished  9  forest. fitness = 0.702451719273
| | |-MSE =  0.450283851522
| | |-finished  10  forest. fitness = 0.689520192168
| | |-MSE =  0.455896109747
| | |-finished  11  forest. fitness = 0.686862196626
| | |-MSE =  0.444186352093
| | |-finished  12  forest. fitness = 0.692431415482
| | |-MSE =  0.671402169728
| | |-finished  13  forest. fitness = 0.598300048972
| | |-MSE =  0.46894475274
| | |-finished  14  forest. fitness = 0.680760796575
| | |-MSE =  0.436459897067
| | |-finished  15  forest. fitness = 0.696155877405
| | |-MSE =  0.449019126006
| | |-finished  16  forest. fitness = 0.690122015681
| | |-MSE =  0.604441661976
| | |-finished  17  forest. fitness = 0.623269778951
| | |-MSE =  0.450865159513
| | |-finished  18  forest. fitness = 0.689243926938
| | |-MSE =  0.458381607527
| | |-finished  19  forest. fitness = 0.685691587743
| | |-MSE =  0.651487486216
| | |-finished  20  forest. fitness = 0.605514730415
avg =  0.665058799437 max =  0.702451719273
|-spawn
selected for crossover -> 0.626829377628 0.643517719234
>sampler distinct selecting 2 from 4 = [3, 0]
selected for crossover -> 0.626829377628 0.623269778951
>sampler distinct selecting 3 from 6 = [0, 0, 2]
selected for crossover -> 0.702451719273 0.689243926938
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.6147053649 0.690122015681
>sampler distinct selecting 2 from 5 = [4, 3]
selected for crossover -> 0.639704663257 0.685018905151
>sampler distinct selecting 3 from 5 = [1, 2, 0]
selected for crossover -> 0.680760796575 0.692655409161
>sampler distinct selecting 4 from 5 = [0, 3, 0, 0]
selected for crossover -> 0.679990765548 0.696155877405
>sampler distinct selecting 2 from 7 = [1, 3]
selected for crossover -> 0.689243926938 0.643517719234
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.702451719273 0.686862196626
>sampler distinct selecting 3 from 3 = [1, 1, 0]
selected for crossover -> 0.626829377628 0.598300048972
>sampler distinct selecting 6 from 9 = [4, 6, 0, 2, 0, 0]
selected for crossover -> 0.686862196626 0.692431415482
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.696155877405 0.702451719273
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.702451719273 0.690122015681
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.680760796575 0.639704663257
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.696155877405 0.623269778951
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.686862196626 0.678429497637
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.605514730415 0.702451719273
>sampler distinct selecting 4 from 5 = [2, 0, 0, 1]
selected for crossover -> 0.605514730415 0.689520192168
>sampler distinct selecting 4 from 9 = [0, 3, 0, 4]
selected for crossover -> 0.605514730415 0.702451719273
>sampler distinct selecting 5 from 5 = [1, 2, 0, 0, 0]
selected for crossover -> 0.639704663257 0.690122015681
>sampler distinct selecting 2 from 5 = [3, 1]
|- mutate
generation =  5
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.457345685152
| | |-finished  1  forest. fitness = 0.686178996643
| | |-MSE =  0.474672934569
| | |-finished  2  forest. fitness = 0.678116466749
| | |-MSE =  0.462691422617
| | |-finished  3  forest. fitness = 0.683671199911
| | |-MSE =  0.57273219678
| | |-finished  4  forest. fitness = 0.635836159549
| | |-MSE =  0.571163567387
| | |-finished  5  forest. fitness = 0.636470970151
| | |-MSE =  0.429031073701
| | |-finished  6  forest. fitness = 0.69977484633
| | |-MSE =  0.442408906174
| | |-finished  7  forest. fitness = 0.693284682117
| | |-MSE =  0.571929781665
| | |-finished  8  forest. fitness = 0.636160731646
| | |-MSE =  0.426437397259
| | |-finished  9  forest. fitness = 0.701047239733
| | |-MSE =  0.530035010668
| | |-finished  11  forest. fitness = 0.653579815512
| | |-MSE =  0.422121642097
| | |-finished  11  forest. fitness = 0.703174728799
| | |-MSE =  0.429899506642
| | |-finished  12  forest. fitness = 0.699349846164
| | |-MSE =  0.428866936264
| | |-finished  13  forest. fitness = 0.699855231177
| | |-MSE =  0.583324327347
| | |-finished  14  forest. fitness = 0.631582539804
| | |-MSE =  0.428092912969
| | |-finished  16  forest. fitness = 0.700234551211
| | |-MSE =  0.434092969699
| | |-finished  16  forest. fitness = 0.697304861769
| | |-MSE =  0.600174585828
| | |-finished  17  forest. fitness = 0.624931809851
| | |-MSE =  0.553959023661
| | |-finished  18  forest. fitness = 0.643517611966
| | |-MSE =  0.544335033448
| | |-finished  19  forest. fitness = 0.647527886334
| | |-MSE =  0.441722481993
| | |-finished  20  forest. fitness = 0.693614764624
avg =  0.672260747002 max =  0.703174728799
|-spawn
selected for crossover -> 0.701047239733 0.636160731646
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.678116466749 0.624931809851
>sampler distinct selecting 6 from 7 = [6, 0, 0, 3, 0, 0]
selected for crossover -> 0.635836159549 0.700234551211
>sampler distinct selecting 4 from 4 = [1, 0, 1, 0]
selected for crossover -> 0.700234551211 0.636470970151
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.700234551211 0.699349846164
>sampler distinct selecting 5 from 5 = [1, 1, 2, 0, 0]
selected for crossover -> 0.653579815512 0.699349846164
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.699349846164 0.635836159549
>sampler distinct selecting 3 from 7 = [3, 0, 0]
selected for crossover -> 0.703174728799 0.647527886334
>sampler distinct selecting 6 from 9 = [3, 4, 0, 0, 4, 2]
selected for crossover -> 0.653579815512 0.686178996643
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.643517611966 0.699855231177
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.686178996643 0.697304861769
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.643517611966 0.631582539804
>sampler distinct selecting 4 from 6 = [2, 1, 0, 1]
selected for crossover -> 0.699349846164 0.624931809851
>sampler distinct selecting 6 from 9 = [2, 3, 2, 1, 2, 3]
selected for crossover -> 0.701047239733 0.686178996643
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.678116466749 0.653579815512
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.703174728799 0.678116466749
>sampler distinct selecting 4 from 5 = [1, 0, 0, 1]
selected for crossover -> 0.631582539804 0.678116466749
>sampler distinct selecting 4 from 6 = [0, 2, 3, 0]
selected for crossover -> 0.636160731646 0.699349846164
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.699349846164 0.693614764624
>sampler distinct selecting 4 from 6 = [5, 1, 0, 1]
selected for crossover -> 0.69977484633 0.678116466749
>sampler distinct selecting 2 from 5 = [0, 1]
|- mutate
>sampler selecting 5 from 5 = [0, 1, 2, 3, 2]
generation =  6
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.556646854885
| | |-finished  1  forest. fitness = 0.64240646288
| | |-MSE =  0.467358122664
| | |-finished  2  forest. fitness = 0.681496891968
| | |-MSE =  0.574276136558
| | |-finished  3  forest. fitness = 0.635212575976
| | |-MSE =  0.437141417067
| | |-finished  4  forest. fitness = 0.695825746948
| | |-MSE =  0.445469981971
| | |-finished  5  forest. fitness = 0.69181651122
| | |-MSE =  0.559226102097
| | |-finished  6  forest. fitness = 0.641343804247
| | |-MSE =  0.533344561136
| | |-finished  7  forest. fitness = 0.652169137548
| | |-MSE =  0.642579274435
| | |-finished  8  forest. fitness = 0.608798622729
| | |-MSE =  0.590380960442
| | |-finished  9  forest. fitness = 0.62878016329
| | |-MSE =  0.517493809623
| | |-finished  10  forest. fitness = 0.658981271395
| | |-MSE =  0.54114977427
| | |-finished  11  forest. fitness = 0.648866201517
| | |-MSE =  0.438218944284
| | |-finished  12  forest. fitness = 0.695304427726
| | |-MSE =  0.644142733408
| | |-finished  13  forest. fitness = 0.608219699957
| | |-MSE =  0.424700326619
| | |-finished  14  forest. fitness = 0.701901993926
| | |-MSE =  0.439105793728
| | |-finished  15  forest. fitness = 0.694875946132
| | |-MSE =  0.579347939499
| | |-finished  16  forest. fitness = 0.633172700575
| | |-MSE =  0.424439752831
| | |-finished  17  forest. fitness = 0.702030393362
| | |-MSE =  0.448772371899
| | |-finished  18  forest. fitness = 0.69023955688
| | |-MSE =  0.421102608138
| | |-finished  19  forest. fitness = 0.703678956237
| | |-MSE =  0.448974288188
| | |-finished  20  forest. fitness = 0.690143371178
avg =  0.665263221785 max =  0.703678956237
|-spawn
selected for crossover -> 0.608219699957 0.703678956237
>sampler distinct selecting 3 from 5 = [0, 3, 0]
selected for crossover -> 0.652169137548 0.608219699957
>sampler distinct selecting 1 from 5 = [4]
selected for crossover -> 0.608798622729 0.695825746948
>sampler distinct selecting 3 from 7 = [3, 4, 0]
selected for crossover -> 0.608219699957 0.635212575976
>sampler distinct selecting 5 from 10 = [1, 1, 1, 1, 1]
selected for crossover -> 0.702030393362 0.633172700575
>sampler distinct selecting 3 from 10 = [2, 7, 0]
selected for crossover -> 0.633172700575 0.701901993926
>sampler distinct selecting 3 from 7 = [1, 4, 0]
selected for crossover -> 0.608219699957 0.635212575976
>sampler distinct selecting 2 from 10 = [7, 6]
selected for crossover -> 0.62878016329 0.658981271395
>sampler distinct selecting 2 from 10 = [0, 6]
selected for crossover -> 0.608219699957 0.690143371178
>sampler distinct selecting 4 from 6 = [0, 0, 1, 0]
selected for crossover -> 0.652169137548 0.658981271395
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.633172700575 0.608798622729
>sampler distinct selecting 5 from 7 = [3, 2, 0, 1, 1]
selected for crossover -> 0.641343804247 0.695304427726
>sampler distinct selecting 2 from 6 = [1, 0]
selected for crossover -> 0.690143371178 0.69023955688
>sampler distinct selecting 4 from 7 = [3, 3, 4, 0]
selected for crossover -> 0.702030393362 0.694875946132
>sampler distinct selecting 6 from 8 = [0, 4, 0, 0, 0, 1]
selected for crossover -> 0.608219699957 0.633172700575
>sampler distinct selecting 4 from 8 = [0, 5, 0, 3]
selected for crossover -> 0.62878016329 0.703678956237
>sampler distinct selecting 3 from 7 = [3, 2, 4]
selected for crossover -> 0.641343804247 0.695304427726
>sampler distinct selecting 5 from 6 = [0, 3, 1, 0, 0]
selected for crossover -> 0.633172700575 0.648866201517
>sampler distinct selecting 2 from 6 = [1, 0]
selected for crossover -> 0.690143371178 0.702030393362
>sampler distinct selecting 3 from 8 = [3, 5, 5]
selected for crossover -> 0.633172700575 0.608219699957
>sampler distinct selecting 5 from 8 = [5, 0, 1, 1, 0]
|- mutate
>sampler selecting 2 from 5 = [1, 1]
>sampler selecting 3 from 5 = [0, 0, 3]
generation =  7
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.428659466904
| | |-finished  1  forest. fitness = 0.699956863875
| | |-MSE =  0.456814570424
| | |-finished  2  forest. fitness = 0.686429158729
| | |-MSE =  0.547962448819
| | |-finished  3  forest. fitness = 0.646010502879
| | |-MSE =  0.433486023222
| | |-finished  4  forest. fitness = 0.69760010478
| | |-MSE =  0.572408202476
| | |-finished  5  forest. fitness = 0.635967173426
| | |-MSE =  0.435537748441
| | |-finished  6  forest. fitness = 0.696603068144
| | |-MSE =  0.577736745307
| | |-finished  7  forest. fitness = 0.63381930032
| | |-MSE =  0.566727737736
| | |-finished  8  forest. fitness = 0.63827299148
| | |-MSE =  0.552210236898
| | |-finished  9  forest. fitness = 0.644242626565
| | |-MSE =  0.56899845044
| | |-finished  10  forest. fitness = 0.637349259153
| | |-MSE =  0.645079040487
| | |-finished  11  forest. fitness = 0.607873527891
| | |-MSE =  0.643623733002
| | |-finished  12  forest. fitness = 0.608411755027
| | |-MSE =  0.446561061406
| | |-finished  13  forest. fitness = 0.691294703473
| | |-MSE =  0.603308876525
| | |-finished  14  forest. fitness = 0.623710137605
| | |-MSE =  0.628952556282
| | |-finished  15  forest. fitness = 0.613891421296
| | |-MSE =  0.566443621185
| | |-finished  16  forest. fitness = 0.638388759401
| | |-MSE =  0.461243098152
| | |-finished  17  forest. fitness = 0.684348826875
| | |-MSE =  0.55522434929
| | |-finished  18  forest. fitness = 0.642994048066
| | |-MSE =  0.448147012488
| | |-finished  19  forest. fitness = 0.690537625929
| | |-MSE =  0.541213473472
| | |-finished  20  forest. fitness = 0.64883938352
avg =  0.653327061922 max =  0.699956863875
|-spawn
selected for crossover -> 0.686429158729 0.613891421296
>sampler distinct selecting 5 from 5 = [0, 1, 2, 1, 0]
selected for crossover -> 0.690537625929 0.635967173426
>sampler distinct selecting 1 from 8 = [1]
selected for crossover -> 0.691294703473 0.63381930032
>sampler distinct selecting 3 from 8 = [1, 3, 0]
selected for crossover -> 0.623710137605 0.613891421296
>sampler distinct selecting 2 from 7 = [4, 0]
selected for crossover -> 0.691294703473 0.635967173426
>sampler distinct selecting 5 from 8 = [4, 5, 3, 4, 0]
selected for crossover -> 0.613891421296 0.635967173426
>sampler distinct selecting 6 from 9 = [3, 4, 1, 4, 4, 0]
selected for crossover -> 0.684348826875 0.607873527891
>sampler distinct selecting 4 from 10 = [2, 4, 4, 0]
selected for crossover -> 0.637349259153 0.69760010478
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.64883938352 0.635967173426
>sampler distinct selecting 5 from 7 = [4, 4, 1, 2, 0]
selected for crossover -> 0.646010502879 0.690537625929
>sampler distinct selecting 3 from 5 = [0, 3, 1]
selected for crossover -> 0.690537625929 0.63381930032
>sampler distinct selecting 5 from 8 = [3, 5, 4, 0, 2]
selected for crossover -> 0.684348826875 0.623710137605
>sampler distinct selecting 3 from 9 = [6, 5, 6]
selected for crossover -> 0.64883938352 0.69760010478
>sampler distinct selecting 2 from 6 = [4, 0]
selected for crossover -> 0.699956863875 0.69760010478
>sampler distinct selecting 2 from 6 = [1, 2]
selected for crossover -> 0.64883938352 0.686429158729
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.642994048066 0.623710137605
>sampler distinct selecting 3 from 5 = [2, 0, 0]
selected for crossover -> 0.637349259153 0.64883938352
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.69760010478 0.63381930032
>sampler distinct selecting 3 from 9 = [0, 5, 0]
selected for crossover -> 0.686429158729 0.69760010478
>sampler distinct selecting 4 from 5 = [2, 2, 2, 0]
selected for crossover -> 0.635967173426 0.613891421296
>sampler distinct selecting 2 from 9 = [6, 4]
|- mutate
generation =  8
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.451723661537
| | |-finished  1  forest. fitness = 0.68883633056
| | |-MSE =  0.536065897522
| | |-finished  2  forest. fitness = 0.651013736854
| | |-MSE =  0.456847488774
| | |-finished  3  forest. fitness = 0.686413648447
| | |-MSE =  0.442479162612
| | |-finished  4  forest. fitness = 0.693250915451
| | |-MSE =  0.560989198787
| | |-finished  5  forest. fitness = 0.640619423105
| | |-MSE =  0.535881902709
| | |-finished  6  forest. fitness = 0.651091726673
| | |-MSE =  0.573208295557
| | |-finished  8  forest. fitness = 0.635643736957
| | |-MSE =  0.561064613607
| | |-finished  8  forest. fitness = 0.640588474867
| | |-MSE =  0.436873725099
| | |-finished  9  forest. fitness = 0.695955380443
| | |-MSE =  0.440615186357
| | |-finished  10  forest. fitness = 0.694147895614
| | |-MSE =  0.629902968369
| | |-finished  11  forest. fitness = 0.613533455308
| | |-MSE =  0.637459156261
| | |-finished  12  forest. fitness = 0.610702255489
| | |-MSE =  0.572732033526
| | |-finished  13  forest. fitness = 0.635836225551
| | |-MSE =  0.573711104212
| | |-finished  14  forest. fitness = 0.635440645569
| | |-MSE =  0.601746329308
| | |-finished  15  forest. fitness = 0.62431858385
| | |-MSE =  0.451010105944
| | |-finished  16  forest. fitness = 0.689175075972
| | |-MSE =  0.569304745907
| | |-finished  17  forest. fitness = 0.637224861907
| | |-MSE =  0.570096686174
| | |-finished  18  forest. fitness = 0.636903452384
| | |-MSE =  0.457378039813
| | |-finished  19  forest. fitness = 0.686163763061
| | |-MSE =  0.608023943642
| | |-finished  20  forest. fitness = 0.62188128725
avg =  0.653437043766 max =  0.695955380443
|-spawn
selected for crossover -> 0.651013736854 0.635836225551
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.637224861907 0.694147895614
>sampler distinct selecting 2 from 7 = [3, 0]
selected for crossover -> 0.651013736854 0.635643736957
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.635643736957 0.68883633056
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.62188128725 0.640619423105
>sampler distinct selecting 3 from 8 = [3, 0, 0]
selected for crossover -> 0.695955380443 0.62188128725
>sampler distinct selecting 3 from 4 = [0, 2, 0]
selected for crossover -> 0.62431858385 0.686163763061
>sampler distinct selecting 3 from 6 = [1, 0, 0]
selected for crossover -> 0.686163763061 0.62431858385
>sampler distinct selecting 3 from 6 = [5, 2, 0]
selected for crossover -> 0.689175075972 0.635836225551
>sampler distinct selecting 5 from 7 = [2, 1, 0, 0, 2]
selected for crossover -> 0.68883633056 0.640619423105
>sampler distinct selecting 2 from 8 = [6, 4]
selected for crossover -> 0.651091726673 0.635836225551
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.694147895614 0.62188128725
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.651091726673 0.635643736957
>sampler distinct selecting 4 from 5 = [2, 0, 0, 0]
selected for crossover -> 0.695955380443 0.651091726673
>sampler distinct selecting 2 from 3 = [0, 1]
selected for crossover -> 0.62188128725 0.62431858385
>sampler distinct selecting 3 from 7 = [1, 5, 4]
selected for crossover -> 0.695955380443 0.613533455308
>sampler distinct selecting 5 from 6 = [4, 3, 2, 2, 0]
selected for crossover -> 0.635836225551 0.610702255489
>sampler distinct selecting 7 from 9 = [3, 3, 5, 5, 3, 0, 0]
selected for crossover -> 0.62431858385 0.635836225551
>sampler distinct selecting 3 from 7 = [0, 4, 0]
selected for crossover -> 0.636903452384 0.637224861907
>sampler distinct selecting 5 from 10 = [0, 2, 3, 5, 3]
selected for crossover -> 0.637224861907 0.640588474867
>sampler distinct selecting 2 from 6 = [2, 3]
|- mutate
generation =  9
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.453187356235
| | |-finished  1  forest. fitness = 0.688142513565
| | |-MSE =  0.451654273187
| | |-finished  2  forest. fitness = 0.688869256593
| | |-MSE =  0.674853165046
| | |-finished  3  forest. fitness = 0.597067265877
| | |-MSE =  0.644974728812
| | |-finished  4  forest. fitness = 0.607912074566
| | |-MSE =  0.592789402238
| | |-finished  5  forest. fitness = 0.62782939075
| | |-MSE =  0.449546671524
| | |-finished  6  forest. fitness = 0.689870853864
| | |-MSE =  0.541481111575
| | |-finished  7  forest. fitness = 0.648726729437
| | |-MSE =  0.452233060184
| | |-finished  8  forest. fitness = 0.688594707983
| | |-MSE =  0.415861052318
| | |-finished  9  forest. fitness = 0.70628399472
| | |-MSE =  0.652678799839
| | |-finished  10  forest. fitness = 0.605078252409
| | |-MSE =  0.428986395724
| | |-finished  11  forest. fitness = 0.699796725142
| | |-MSE =  0.451117398946
| | |-finished  12  forest. fitness = 0.68912411961
| | |-MSE =  0.643091342282
| | |-finished  13  forest. fitness = 0.60860889122
| | |-MSE =  0.439201254268
| | |-finished  14  forest. fitness = 0.694829855821
| | |-MSE =  0.656289183876
| | |-finished  15  forest. fitness = 0.603759301054
| | |-MSE =  0.423930391592
| | |-finished  16  forest. fitness = 0.702281520153
| | |-MSE =  0.559259372044
| | |-finished  17  forest. fitness = 0.641330119882
| | |-MSE =  0.428412628584
| | |-finished  18  forest. fitness = 0.700077820645
| | |-MSE =  0.657234662581
| | |-finished  19  forest. fitness = 0.60341484678
| | |-MSE =  0.597069303973
| | |-finished  20  forest. fitness = 0.626146903902
avg =  0.655887257199 max =  0.70628399472
|-spawn
selected for crossover -> 0.70628399472 0.699796725142
>sampler distinct selecting 3 from 8 = [3, 2, 4]
selected for crossover -> 0.641330119882 0.607912074566
>sampler distinct selecting 4 from 7 = [3, 0, 3, 0]
selected for crossover -> 0.60341484678 0.60860889122
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.702281520153 0.688142513565
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.68912411961 0.626146903902
>sampler distinct selecting 2 from 4 = [1, 1]
selected for crossover -> 0.648726729437 0.688142513565
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.689870853864 0.688594707983
>sampler distinct selecting 3 from 4 = [0, 1, 0]
selected for crossover -> 0.699796725142 0.70628399472
>sampler distinct selecting 1 from 8 = [5]
selected for crossover -> 0.700077820645 0.62782939075
>sampler distinct selecting 3 from 6 = [2, 2, 1]
selected for crossover -> 0.648726729437 0.700077820645
>sampler distinct selecting 4 from 4 = [3, 0, 1, 0]
selected for crossover -> 0.702281520153 0.70628399472
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.60341484678 0.688594707983
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.62782939075 0.689870853864
>sampler distinct selecting 1 from 8 = [1]
selected for crossover -> 0.605078252409 0.60341484678
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.648726729437 0.688594707983
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.688142513565 0.702281520153
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.688594707983 0.688142513565
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.641330119882 0.700077820645
>sampler distinct selecting 2 from 4 = [0, 2]
selected for crossover -> 0.60860889122 0.702281520153
>sampler distinct selecting 3 from 4 = [1, 1, 0]
selected for crossover -> 0.648726729437 0.688142513565
>sampler distinct selecting 4 from 4 = [1, 0, 0, 0]
|- mutate
>sampler selecting 2 from 3 = [1, 0]
>sampler selecting 3 from 5 = [3, 4, 3]
>sampler selecting 4 from 5 = [2, 0, 0, 4]
generation =  10
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.439922771682
| | |-finished  1  forest. fitness = 0.694481690037
| | |-MSE =  0.495711735121
| | |-finished  2  forest. fitness = 0.668578026446
| | |-MSE =  0.664395781509
| | |-finished  3  forest. fitness = 0.600818634071
| | |-MSE =  0.438009749384
| | |-finished  4  forest. fitness = 0.695405577346
| | |-MSE =  0.423683270173
| | |-finished  5  forest. fitness = 0.702403421429
| | |-MSE =  0.53361543923
| | |-finished  6  forest. fitness = 0.652053946785
| | |-MSE =  0.44833396228
| | |-finished  7  forest. fitness = 0.690448491883
| | |-MSE =  0.429760169593
| | |-finished  8  forest. fitness = 0.699418001192
| | |-MSE =  0.58534469986
| | |-finished  9  forest. fitness = 0.630777647339
| | |-MSE =  0.588883494108
| | |-finished  10  forest. fitness = 0.62937276629
| | |-MSE =  0.431143487224
| | |-finished  11  forest. fitness = 0.698741956294
| | |-MSE =  0.582236131253
| | |-finished  12  forest. fitness = 0.632016915963
| | |-MSE =  0.445545619325
| | |-finished  13  forest. fitness = 0.691780312313
| | |-MSE =  0.660610091367
| | |-finished  14  forest. fitness = 0.60218831934
| | |-MSE =  0.432613043434
| | |-finished  15  forest. fitness = 0.698025195696
| | |-MSE =  0.480476197889
| | |-finished  16  forest. fitness = 0.675458343353
| | |-MSE =  0.431608943761
| | |-finished  17  forest. fitness = 0.698514775531
| | |-MSE =  0.574235456004
| | |-finished  18  forest. fitness = 0.6352289908
| | |-MSE =  0.531389892334
| | |-finished  19  forest. fitness = 0.653001567404
| | |-MSE =  0.60739070653
| | |-finished  20  forest. fitness = 0.622126279527
avg =  0.663542042952 max =  0.702403421429
|-spawn
selected for crossover -> 0.699418001192 0.652053946785
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.62937276629 0.653001567404
>sampler distinct selecting 4 from 5 = [2, 0, 0, 1]
selected for crossover -> 0.62937276629 0.630777647339
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.694481690037 0.60218831934
>sampler distinct selecting 3 from 6 = [4, 0, 1]
selected for crossover -> 0.691780312313 0.600818634071
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.652053946785 0.60218831934
>sampler distinct selecting 5 from 7 = [0, 0, 3, 2, 2]
selected for crossover -> 0.600818634071 0.690448491883
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.668578026446 0.695405577346
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.630777647339 0.6352289908
>sampler distinct selecting 3 from 5 = [0, 2, 1]
selected for crossover -> 0.652053946785 0.698741956294
>sampler distinct selecting 3 from 7 = [6, 0, 1]
selected for crossover -> 0.695405577346 0.690448491883
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.690448491883 0.699418001192
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.632016915963 0.698025195696
>sampler distinct selecting 5 from 5 = [3, 3, 0, 0, 0]
selected for crossover -> 0.698514775531 0.652053946785
>sampler distinct selecting 5 from 7 = [3, 4, 0, 2, 1]
selected for crossover -> 0.622126279527 0.690448491883
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.652053946785 0.675458343353
>sampler distinct selecting 4 from 5 = [1, 0, 0, 0]
selected for crossover -> 0.60218831934 0.600818634071
>sampler distinct selecting 4 from 6 = [5, 2, 3, 0]
selected for crossover -> 0.630777647339 0.622126279527
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.694481690037 0.690448491883
>sampler distinct selecting 4 from 5 = [3, 0, 2, 0]
selected for crossover -> 0.600818634071 0.699418001192
>sampler distinct selecting 2 from 4 = [0, 2]
|- mutate
>sampler selecting 4 from 5 = [2, 3, 1, 2]
generation =  11
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.556202128815
| | |-finished  1  forest. fitness = 0.642590047581
| | |-MSE =  0.600124765555
| | |-finished  2  forest. fitness = 0.624951267255
| | |-MSE =  0.455632339105
| | |-finished  3  forest. fitness = 0.686986660804
| | |-MSE =  0.576252520484
| | |-finished  4  forest. fitness = 0.634416114807
| | |-MSE =  0.568209978739
| | |-finished  5  forest. fitness = 0.637669708494
| | |-MSE =  0.554471312311
| | |-finished  6  forest. fitness = 0.643305535509
| | |-MSE =  0.466192043664
| | |-finished  7  forest. fitness = 0.682038894101
| | |-MSE =  0.47255313031
| | |-finished  8  forest. fitness = 0.679092644888
| | |-MSE =  0.581581030502
| | |-finished  9  forest. fitness = 0.632278701321
| | |-MSE =  0.586824395588
| | |-finished  10  forest. fitness = 0.630189454347
| | |-MSE =  0.454492538406
| | |-finished  11  forest. fitness = 0.687525012054
| | |-MSE =  0.459093134363
| | |-finished  12  forest. fitness = 0.685357210208
| | |-MSE =  0.561165594182
| | |-finished  13  forest. fitness = 0.640547039806
| | |-MSE =  0.556928453595
| | |-finished  14  forest. fitness = 0.642290272036
| | |-MSE =  0.446694315395
| | |-finished  15  forest. fitness = 0.691231028807
| | |-MSE =  0.580750527231
| | |-finished  16  forest. fitness = 0.632610891329
| | |-MSE =  0.440101896175
| | |-finished  17  forest. fitness = 0.694395308176
| | |-MSE =  0.550571605377
| | |-finished  18  forest. fitness = 0.644923456958
| | |-MSE =  0.45672666508
| | |-finished  19  forest. fitness = 0.686470580907
| | |-MSE =  0.428237592479
| | |-finished  20  forest. fitness = 0.70016361792
avg =  0.659951672365 max =  0.70016361792
|-spawn
selected for crossover -> 0.632610891329 0.682038894101
>sampler distinct selecting 2 from 4 = [2, 1]
selected for crossover -> 0.694395308176 0.642290272036
>sampler distinct selecting 5 from 5 = [2, 2, 0, 0, 0]
selected for crossover -> 0.632278701321 0.630189454347
>sampler distinct selecting 4 from 8 = [2, 3, 4, 0]
selected for crossover -> 0.624951267255 0.686470580907
>sampler distinct selecting 2 from 6 = [3, 1]
selected for crossover -> 0.624951267255 0.632278701321
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.632610891329 0.637669708494
>sampler distinct selecting 6 from 7 = [4, 0, 3, 1, 2, 0]
selected for crossover -> 0.682038894101 0.644923456958
>sampler distinct selecting 3 from 5 = [1, 3, 0]
selected for crossover -> 0.637669708494 0.694395308176
>sampler distinct selecting 1 from 6 = [3]
selected for crossover -> 0.630189454347 0.691231028807
>sampler distinct selecting 6 from 10 = [3, 3, 6, 0, 0, 2]
selected for crossover -> 0.643305535509 0.634416114807
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.630189454347 0.632610891329
>sampler distinct selecting 6 from 7 = [5, 0, 0, 0, 0, 0]
selected for crossover -> 0.637669708494 0.632610891329
>sampler distinct selecting 3 from 7 = [2, 0, 3]
selected for crossover -> 0.687525012054 0.632610891329
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.634416114807 0.624951267255
>sampler distinct selecting 3 from 6 = [3, 1, 2]
selected for crossover -> 0.691231028807 0.640547039806
>sampler distinct selecting 4 from 7 = [4, 1, 2, 3]
selected for crossover -> 0.630189454347 0.634416114807
>sampler distinct selecting 2 from 8 = [1, 4]
selected for crossover -> 0.694395308176 0.624951267255
>sampler distinct selecting 3 from 4 = [0, 0, 1]
selected for crossover -> 0.630189454347 0.642290272036
>sampler distinct selecting 3 from 9 = [6, 6, 5]
selected for crossover -> 0.632610891329 0.630189454347
>sampler distinct selecting 3 from 7 = [4, 3, 3]
selected for crossover -> 0.632610891329 0.643305535509
>sampler distinct selecting 1 from 5 = [2]
|- mutate
>sampler selecting 2 from 3 = [0, 2]
>sampler selecting 4 from 5 = [3, 0, 3, 2]
>sampler selecting 2 from 5 = [3, 3]
generation =  12
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.562173649831
| | |-finished  1  forest. fitness = 0.640133700954
| | |-MSE =  0.433642343637
| | |-finished  2  forest. fitness = 0.697524040384
| | |-MSE =  0.469327913781
| | |-finished  3  forest. fitness = 0.680583272543
| | |-MSE =  0.444968507802
| | |-finished  4  forest. fitness = 0.69205660511
| | |-MSE =  0.60819434102
| | |-finished  5  forest. fitness = 0.621815395374
| | |-MSE =  0.601716402191
| | |-finished  6  forest. fitness = 0.624330248871
| | |-MSE =  0.602216175278
| | |-finished  7  forest. fitness = 0.624135503954
| | |-MSE =  0.613040747243
| | |-finished  8  forest. fitness = 0.619947141267
| | |-MSE =  0.596820851647
| | |-finished  9  forest. fitness = 0.626244327264
| | |-MSE =  0.543181045894
| | |-finished  10  forest. fitness = 0.648012106331
| | |-MSE =  0.436541739503
| | |-finished  11  forest. fitness = 0.696116216119
| | |-MSE =  0.557074569595
| | |-finished  12  forest. fitness = 0.642229999466
| | |-MSE =  0.58970291859
| | |-finished  13  forest. fitness = 0.629048351302
| | |-MSE =  0.608991747225
| | |-finished  14  forest. fitness = 0.62150722757
| | |-MSE =  0.450706132915
| | |-finished  15  forest. fitness = 0.689319481948
| | |-MSE =  0.470372861631
| | |-finished  17  forest. fitness = 0.680099603369
| | |-MSE =  0.629896238314
| | |-finished  17  forest. fitness = 0.613535988668
| | |-MSE =  0.596731977763
| | |-finished  18  forest. fitness = 0.626279183937
| | |-MSE =  0.608925374509
| | |-finished  19  forest. fitness = 0.621532866498
| | |-MSE =  0.602910546303
| | |-finished  20  forest. fitness = 0.623865132278
avg =  0.64591581966 max =  0.697524040384
|-spawn
selected for crossover -> 0.624135503954 0.62150722757
>sampler distinct selecting 6 from 8 = [6, 2, 0, 1, 1, 1]
selected for crossover -> 0.621532866498 0.624135503954
>sampler distinct selecting 7 from 9 = [3, 0, 1, 2, 0, 0, 2]
selected for crossover -> 0.62150722757 0.69205660511
>sampler distinct selecting 5 from 6 = [2, 0, 2, 0, 0]
selected for crossover -> 0.642229999466 0.623865132278
>sampler distinct selecting 3 from 5 = [2, 0, 1]
selected for crossover -> 0.69205660511 0.624330248871
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.680099603369 0.624135503954
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.624330248871 0.629048351302
>sampler distinct selecting 1 from 7 = [0]
selected for crossover -> 0.623865132278 0.680583272543
>sampler distinct selecting 2 from 8 = [0, 0]
selected for crossover -> 0.613535988668 0.619947141267
>sampler distinct selecting 4 from 6 = [4, 2, 3, 0]
selected for crossover -> 0.648012106331 0.69205660511
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.629048351302 0.621532866498
>sampler distinct selecting 7 from 12 = [3, 8, 3, 6, 7, 5, 0]
selected for crossover -> 0.613535988668 0.626279183937
>sampler distinct selecting 4 from 6 = [4, 3, 2, 0]
selected for crossover -> 0.619947141267 0.689319481948
>sampler distinct selecting 3 from 5 = [1, 1, 0]
selected for crossover -> 0.69205660511 0.629048351302
>sampler distinct selecting 5 from 7 = [2, 5, 0, 0, 0]
selected for crossover -> 0.69205660511 0.680099603369
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.697524040384 0.680099603369
>sampler distinct selecting 2 from 5 = [1, 1]
selected for crossover -> 0.626244327264 0.613535988668
>sampler distinct selecting 2 from 6 = [5, 0]
selected for crossover -> 0.621532866498 0.629048351302
>sampler distinct selecting 5 from 12 = [4, 8, 3, 3, 2]
selected for crossover -> 0.696116216119 0.626244327264
>sampler distinct selecting 1 from 9 = [0]
selected for crossover -> 0.623865132278 0.621532866498
>sampler distinct selecting 5 from 8 = [4, 1, 3, 3, 1]
|- mutate
>sampler selecting 3 from 5 = [1, 1, 2]
>sampler selecting 1 from 5 = [2]
generation =  13
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.594402521603
| | |-finished  1  forest. fitness = 0.62719419121
| | |-MSE =  0.644980011808
| | |-finished  2  forest. fitness = 0.607910122203
| | |-MSE =  0.57691821014
| | |-finished  3  forest. fitness = 0.634148298605
| | |-MSE =  0.563527580891
| | |-finished  4  forest. fitness = 0.639579379489
| | |-MSE =  0.575118716445
| | |-finished  5  forest. fitness = 0.634872781054
| | |-MSE =  0.554813190287
| | |-finished  6  forest. fitness = 0.64316408315
| | |-MSE =  0.594215727424
| | |-finished  7  forest. fitness = 0.627267679523
| | |-MSE =  0.572871260312
| | |-finished  8  forest. fitness = 0.635779942855
| | |-MSE =  0.587198762703
| | |-finished  9  forest. fitness = 0.630040813727
| | |-MSE =  0.591355186395
| | |-finished  10  forest. fitness = 0.628395224743
| | |-MSE =  0.590706738284
| | |-finished  11  forest. fitness = 0.628651388677
| | |-MSE =  0.575882823785
| | |-finished  12  forest. fitness = 0.634564946649
| | |-MSE =  0.593538122449
| | |-finished  14  forest. fitness = 0.627534406559
| | |-MSE =  0.575922349906
| | |-finished  14  forest. fitness = 0.634549030959
| | |-MSE =  0.445940766371
| | |-finished  15  forest. fitness = 0.691591262421
| | |-MSE =  0.545691635125
| | |-finished  16  forest. fitness = 0.646959572838
| | |-MSE =  0.571303787466
| | |-finished  17  forest. fitness = 0.636414172725
| | |-MSE =  0.561509782351
| | |-finished  18  forest. fitness = 0.640405850353
| | |-MSE =  0.57711376094
| | |-finished  19  forest. fitness = 0.634069668762
| | |-MSE =  0.593680594085
| | |-finished  20  forest. fitness = 0.627478306325
avg =  0.635528556141 max =  0.691591262421
|-spawn
selected for crossover -> 0.64316408315 0.607910122203
>sampler distinct selecting 2 from 9 = [1, 1]
selected for crossover -> 0.634069668762 0.627534406559
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.639579379489 0.634549030959
>sampler distinct selecting 5 from 8 = [4, 2, 0, 0, 3]
selected for crossover -> 0.635779942855 0.691591262421
>sampler distinct selecting 3 from 5 = [3, 2, 1]
selected for crossover -> 0.630040813727 0.646959572838
>sampler distinct selecting 3 from 12 = [0, 7, 9]
selected for crossover -> 0.607910122203 0.628395224743
>sampler distinct selecting 4 from 5 = [2, 0, 2, 0]
selected for crossover -> 0.627534406559 0.628395224743
>sampler distinct selecting 4 from 5 = [3, 3, 2, 0]
selected for crossover -> 0.627267679523 0.627534406559
>sampler distinct selecting 5 from 7 = [6, 2, 0, 1, 0]
selected for crossover -> 0.691591262421 0.639579379489
>sampler distinct selecting 3 from 7 = [6, 4, 0]
selected for crossover -> 0.646959572838 0.634564946649
>sampler distinct selecting 4 from 9 = [2, 1, 0, 2]
selected for crossover -> 0.639579379489 0.634549030959
>sampler distinct selecting 1 from 8 = [7]
selected for crossover -> 0.636414172725 0.691591262421
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.634564946649 0.646959572838
>sampler distinct selecting 6 from 9 = [3, 4, 4, 2, 2, 0]
selected for crossover -> 0.646959572838 0.634549030959
>sampler distinct selecting 3 from 9 = [4, 6, 1]
selected for crossover -> 0.691591262421 0.627267679523
>sampler distinct selecting 6 from 6 = [0, 0, 0, 2, 1, 0]
selected for crossover -> 0.634872781054 0.62719419121
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.628395224743 0.634872781054
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.62719419121 0.639579379489
>sampler distinct selecting 1 from 9 = [7]
selected for crossover -> 0.634549030959 0.64316408315
>sampler distinct selecting 2 from 9 = [3, 3]
selected for crossover -> 0.64316408315 0.627267679523
>sampler distinct selecting 4 from 12 = [1, 8, 2, 7]
|- mutate
generation =  14
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.440088165189
| | |-finished  1  forest. fitness = 0.694401929113
| | |-MSE =  0.678539933505
| | |-finished  2  forest. fitness = 0.595755859029
| | |-MSE =  0.661574522261
| | |-finished  3  forest. fitness = 0.601838790017
| | |-MSE =  0.601147799447
| | |-finished  4  forest. fitness = 0.624551962252
| | |-MSE =  0.673106343252
| | |-finished  5  forest. fitness = 0.597690639351
| | |-MSE =  0.581070067475
| | |-finished  6  forest. fitness = 0.632483038274
| | |-MSE =  0.585670138937
| | |-finished  7  forest. fitness = 0.630648188072
| | |-MSE =  0.679835789992
| | |-finished  8  forest. fitness = 0.595296281909
| | |-MSE =  0.66308559741
| | |-finished  9  forest. fitness = 0.601291960893
| | |-MSE =  0.628418746451
| | |-finished  10  forest. fitness = 0.614092660244
| | |-MSE =  0.43492448024
| | |-finished  11  forest. fitness = 0.696900787303
| | |-MSE =  0.565111131245
| | |-finished  12  forest. fitness = 0.63893226496
| | |-MSE =  0.672627323371
| | |-finished  13  forest. fitness = 0.597861810594
| | |-MSE =  0.559696771692
| | |-finished  14  forest. fitness = 0.641150265968
| | |-MSE =  0.560100046568
| | |-finished  15  forest. fitness = 0.640984533139
| | |-MSE =  0.603266121482
| | |-finished  16  forest. fitness = 0.623726770373
| | |-MSE =  0.677894190631
| | |-finished  17  forest. fitness = 0.595985137551
| | |-MSE =  0.681591370939
| | |-finished  18  forest. fitness = 0.594674792748
| | |-MSE =  0.448889171981
| | |-finished  19  forest. fitness = 0.690183914228
| | |-MSE =  0.672867683517
| | |-finished  20  forest. fitness = 0.59777590891
avg =  0.625311374746 max =  0.696900787303
|-spawn
selected for crossover -> 0.597690639351 0.601291960893
>sampler distinct selecting 7 from 11 = [0, 4, 1, 1, 0, 4, 2]
selected for crossover -> 0.641150265968 0.597690639351
>sampler distinct selecting 7 from 8 = [3, 4, 3, 4, 3, 0, 0]
selected for crossover -> 0.623726770373 0.595296281909
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.694401929113 0.59777590891
>sampler distinct selecting 3 from 5 = [3, 0, 1]
selected for crossover -> 0.597690639351 0.595296281909
>sampler distinct selecting 4 from 9 = [2, 7, 1, 0]
selected for crossover -> 0.624551962252 0.597861810594
>sampler distinct selecting 4 from 8 = [3, 2, 4, 0]
selected for crossover -> 0.59777590891 0.595985137551
>sampler distinct selecting 4 from 9 = [3, 0, 4, 0]
selected for crossover -> 0.595296281909 0.595985137551
>sampler distinct selecting 6 from 9 = [4, 5, 2, 3, 0, 2]
selected for crossover -> 0.624551962252 0.597690639351
>sampler distinct selecting 4 from 10 = [6, 5, 3, 5]
selected for crossover -> 0.597861810594 0.694401929113
>sampler distinct selecting 5 from 6 = [1, 0, 0, 0, 0]
selected for crossover -> 0.630648188072 0.597690639351
>sampler distinct selecting 1 from 7 = [1]
selected for crossover -> 0.690183914228 0.624551962252
>sampler distinct selecting 4 from 6 = [0, 2, 0, 0]
selected for crossover -> 0.694401929113 0.640984533139
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.597861810594 0.640984533139
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.597690639351 0.640984533139
>sampler distinct selecting 3 from 7 = [0, 0, 0]
selected for crossover -> 0.641150265968 0.597861810594
>sampler distinct selecting 3 from 6 = [4, 3, 0]
selected for crossover -> 0.623726770373 0.597861810594
>sampler distinct selecting 2 from 5 = [4, 0]
selected for crossover -> 0.601838790017 0.59777590891
>sampler distinct selecting 4 from 7 = [5, 2, 0, 1]
selected for crossover -> 0.614092660244 0.694401929113
>sampler distinct selecting 4 from 6 = [1, 3, 0, 2]
selected for crossover -> 0.694401929113 0.690183914228
>sampler distinct selecting 3 from 4 = [0, 1, 0]
|- mutate
>sampler selecting 4 from 5 = [3, 1, 3, 2]
-+=> 3 <=+-
>sampler selecting 3 from 3 = [2, 0, 1]
>sampler selecting 2 from 5 = [3, 0]
>sampler selecting 1 from 5 = [1]
>sampler selecting 5 from 5 = [2, 2, 0, 3, 1]
>sampler selecting 1 from 3 = [0]
>sampler selecting 1 from 5 = [1]
>sampler selecting 1 from 3 = [2]
>sampler selecting 5 from 5 = [3, 4, 1, 3, 3]
>sampler selecting 1 from 3 = [0]
>sampler selecting 2 from 5 = [4, 3]
>sampler selecting 1 from 3 = [0]
>sampler selecting 4 from 5 = [3, 3, 2, 4]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 3 from 5 = [1, 3, 1]
>sampler selecting 4 from 5 = [2, 3, 4, 2]
>sampler selecting 3 from 3 = [2, 2, 0]
>sampler selecting 2 from 5 = [1, 1]
>sampler selecting 5 from 5 = [2, 3, 1, 3, 3]
>sampler selecting 1 from 5 = [3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [1, 3, 1, 0]
>sampler selecting 1 from 3 = [1]
>sampler selecting 5 from 5 = [1, 3, 1, 0, 1]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [3, 1, 3, 3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [4, 3, 4, 1]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 5 from 5 = [0, 2, 2, 4, 3]
>sampler selecting 4 from 5 = [1, 2, 0, 1]
>sampler selecting 3 from 3 = [0, 1, 1]
>sampler selecting 5 from 5 = [3, 2, 1, 3, 1]
>sampler selecting 5 from 5 = [2, 3, 0, 1, 1]
>sampler selecting 1 from 5 = [1]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 1 from 5 = [3]
>sampler selecting 4 from 5 = [0, 3, 2, 1]
>sampler selecting 1 from 3 = [1]
>sampler selecting 2 from 5 = [1, 4]
>sampler selecting 1 from 3 = [2]
>sampler selecting 2 from 5 = [4, 1]
>sampler selecting 3 from 3 = [0, 1, 0]
>sampler selecting 2 from 5 = [3, 1]
>sampler selecting 3 from 5 = [0, 1, 3]
>sampler selecting 3 from 5 = [2, 0, 0]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 3 from 5 = [0, 2, 2]
>sampler selecting 2 from 5 = [3, 1]
>sampler selecting 3 from 3 = [2, 1, 1]
>sampler selecting 5 from 5 = [1, 0, 3, 2, 2]
>sampler selecting 2 from 5 = [2, 2]
>sampler selecting 2 from 5 = [0, 1]
>sampler selecting 3 from 3 = [1, 0, 1]
>sampler selecting 2 from 5 = [1, 0]
>sampler selecting 4 from 5 = [2, 4, 3, 3]
>sampler selecting 5 from 5 = [1, 1, 2, 2, 1]
generation =  0
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.45542865612
| | |-finished  1  forest. fitness = 0.687082802579
| | |-MSE =  0.45751172123
| | |-finished  2  forest. fitness = 0.686100828854
| | |-MSE =  0.458772799076
| | |-finished  3  forest. fitness = 0.68550770938
| | |-MSE =  0.458478545787
| | |-finished  4  forest. fitness = 0.685646013024
| | |-MSE =  0.528413283569
| | |-finished  5  forest. fitness = 0.654273298165
| | |-MSE =  0.445705197354
| | |-finished  6  forest. fitness = 0.691703953081
| | |-MSE =  0.460694298692
| | |-finished  7  forest. fitness = 0.684605944513
| | |-MSE =  0.462919620059
| | |-finished  8  forest. fitness = 0.683564555624
| | |-MSE =  0.45922527041
| | |-finished  9  forest. fitness = 0.68529514961
| | |-MSE =  0.45868995222
| | |-finished  10  forest. fitness = 0.685546643053
| | |-MSE =  0.656250240297
| | |-finished  11  forest. fitness = 0.603773497307
| | |-MSE =  0.449514723647
| | |-finished  12  forest. fitness = 0.68988605889
| | |-MSE =  0.457149431884
| | |-finished  13  forest. fitness = 0.686271413294
| | |-MSE =  0.455394121816
| | |-finished  14  forest. fitness = 0.687099106016
| | |-MSE =  0.461405952147
| | |-finished  15  forest. fitness = 0.684272565423
| | |-MSE =  0.5197941802
| | |-finished  16  forest. fitness = 0.657983832961
| | |-MSE =  0.548552483185
| | |-finished  17  forest. fitness = 0.645764357914
| | |-MSE =  0.440348351038
| | |-finished  18  forest. fitness = 0.694276491711
| | |-MSE =  0.457340455361
| | |-finished  19  forest. fitness = 0.686181459055
| | |-MSE =  0.589319146748
| | |-finished  20  forest. fitness = 0.629200247191
avg =  0.674701796382 max =  0.694276491711
|-spawn
selected for crossover -> 0.657983832961 0.683564555624
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.686271413294 0.68988605889
>sampler distinct selecting 2 from 6 = [0, 4]
selected for crossover -> 0.68550770938 0.687082802579
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.694276491711 0.686271413294
>sampler distinct selecting 3 from 4 = [0, 2, 0]
selected for crossover -> 0.685646013024 0.687082802579
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.629200247191 0.645764357914
>sampler distinct selecting 3 from 4 = [2, 0, 1]
selected for crossover -> 0.686181459055 0.657983832961
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.686100828854 0.603773497307
>sampler distinct selecting 4 from 6 = [0, 4, 2, 1]
selected for crossover -> 0.684272565423 0.68550770938
>sampler distinct selecting 2 from 6 = [0, 1]
selected for crossover -> 0.685546643053 0.686181459055
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.691703953081 0.685546643053
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.629200247191 0.684272565423
>sampler distinct selecting 2 from 5 = [0, 2]
selected for crossover -> 0.686271413294 0.603773497307
>sampler distinct selecting 3 from 6 = [0, 2, 3]
selected for crossover -> 0.686100828854 0.685646013024
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.68988605889 0.68529514961
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.687099106016 0.68550770938
>sampler distinct selecting 2 from 4 = [1, 1]
selected for crossover -> 0.687099106016 0.645764357914
>sampler distinct selecting 2 from 3 = [0, 1]
selected for crossover -> 0.629200247191 0.687099106016
>sampler distinct selecting 3 from 3 = [1, 1, 0]
selected for crossover -> 0.683564555624 0.68529514961
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.694276491711 0.683564555624
>sampler distinct selecting 2 from 2 = [0, 0]
|- mutate
>sampler selecting 5 from 5 = [1, 1, 2, 2, 2]
generation =  1
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.462354956178
| | |-finished  1  forest. fitness = 0.683828502632
| | |-MSE =  0.454363564296
| | |-finished  2  forest. fitness = 0.687585982315
| | |-MSE =  0.461763012872
| | |-finished  3  forest. fitness = 0.684105420095
| | |-MSE =  0.4729482175
| | |-finished  4  forest. fitness = 0.678910492656
| | |-MSE =  0.432522464857
| | |-finished  5  forest. fitness = 0.698069331918
| | |-MSE =  0.466322324973
| | |-finished  6  forest. fitness = 0.68197829561
| | |-MSE =  0.430763257257
| | |-finished  7  forest. fitness = 0.69892764923
| | |-MSE =  0.621586090842
| | |-finished  8  forest. fitness = 0.616680178529
| | |-MSE =  0.447190927379
| | |-finished  9  forest. fitness = 0.690993828859
| | |-MSE =  0.591087471606
| | |-finished  11  forest. fitness = 0.628500957895
| | |-MSE =  0.570923780464
| | |-finished  11  forest. fitness = 0.636568121532
| | |-MSE =  0.630229002848
| | |-finished  12  forest. fitness = 0.613410752878
| | |-MSE =  0.573106050715
| | |-finished  13  forest. fitness = 0.635685050951
| | |-MSE =  0.454916784232
| | |-finished  14  forest. fitness = 0.687324533498
| | |-MSE =  0.590953485476
| | |-finished  15  forest. fitness = 0.628553888677
| | |-MSE =  0.453824589144
| | |-finished  16  forest. fitness = 0.687840890481
| | |-MSE =  0.454913680658
| | |-finished  17  forest. fitness = 0.687325999676
| | |-MSE =  0.449692176634
| | |-finished  18  forest. fitness = 0.689801611762
| | |-MSE =  0.423916264946
| | |-finished  19  forest. fitness = 0.702288487475
| | |-MSE =  0.572695276744
| | |-finished  20  forest. fitness = 0.635851086213
avg =  0.667711553144 max =  0.702288487475
|-spawn
selected for crossover -> 0.687585982315 0.687325999676
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.69892764923 0.68197829561
>sampler distinct selecting 2 from 3 = [0, 1]
selected for crossover -> 0.702288487475 0.636568121532
>sampler distinct selecting 4 from 5 = [2, 1, 2, 0]
selected for crossover -> 0.689801611762 0.628500957895
>sampler distinct selecting 3 from 6 = [3, 0, 0]
selected for crossover -> 0.616680178529 0.687324533498
>sampler distinct selecting 2 from 5 = [2, 0]
selected for crossover -> 0.687840890481 0.683828502632
>sampler distinct selecting 2 from 4 = [1, 1]
selected for crossover -> 0.702288487475 0.69892764923
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.687840890481 0.687585982315
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.635851086213 0.636568121532
>sampler distinct selecting 2 from 4 = [0, 2]
selected for crossover -> 0.702288487475 0.687840890481
>sampler distinct selecting 2 from 4 = [2, 2]
selected for crossover -> 0.687325999676 0.678910492656
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.628500957895 0.683828502632
>sampler distinct selecting 4 from 5 = [2, 0, 1, 0]
selected for crossover -> 0.69892764923 0.687325999676
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.687585982315 0.616680178529
>sampler distinct selecting 4 from 4 = [3, 1, 1, 0]
selected for crossover -> 0.687324533498 0.702288487475
>sampler distinct selecting 3 from 4 = [0, 1, 1]
selected for crossover -> 0.698069331918 0.687325999676
>sampler distinct selecting 3 from 4 = [0, 2, 1]
selected for crossover -> 0.689801611762 0.636568121532
>sampler distinct selecting 3 from 6 = [3, 3, 2]
selected for crossover -> 0.698069331918 0.689801611762
>sampler distinct selecting 3 from 5 = [1, 0, 0]
selected for crossover -> 0.690993828859 0.616680178529
>sampler distinct selecting 3 from 5 = [1, 0, 2]
selected for crossover -> 0.683828502632 0.687840890481
>sampler distinct selecting 3 from 4 = [2, 1, 1]
|- mutate
>sampler selecting 3 from 3 = [1, 2, 0]
>sampler selecting 4 from 5 = [1, 3, 2, 3]
>sampler selecting 4 from 5 = [2, 2, 3, 0]
>sampler selecting 1 from 5 = [3]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 2 from 5 = [4, 1]
>sampler selecting 4 from 5 = [1, 3, 3, 4]
>sampler selecting 5 from 5 = [1, 3, 3, 2, 4]
generation =  2
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.437497967729
| | |-finished  1  forest. fitness = 0.695653157395
| | |-MSE =  0.449905558354
| | |-finished  2  forest. fitness = 0.689700094077
| | |-MSE =  0.436116351695
| | |-finished  3  forest. fitness = 0.696322410659
| | |-MSE =  0.427467839335
| | |-finished  4  forest. fitness = 0.700541176792
| | |-MSE =  0.445792540099
| | |-finished  5  forest. fitness = 0.691662166089
| | |-MSE =  0.45455848234
| | |-finished  6  forest. fitness = 0.687493842386
| | |-MSE =  0.452059741734
| | |-finished  7  forest. fitness = 0.688676898931
| | |-MSE =  0.474862511183
| | |-finished  8  forest. fitness = 0.678029302676
| | |-MSE =  0.472487870091
| | |-finished  9  forest. fitness = 0.679122742069
| | |-MSE =  0.436327582815
| | |-finished  10  forest. fitness = 0.696220007166
| | |-MSE =  0.454480675771
| | |-finished  11  forest. fitness = 0.687530619456
| | |-MSE =  0.449896000309
| | |-finished  12  forest. fitness = 0.689704640738
| | |-MSE =  0.455218180531
| | |-finished  13  forest. fitness = 0.68718217885
| | |-MSE =  0.56305300003
| | |-finished  14  forest. fitness = 0.639773571325
| | |-MSE =  0.445990895954
| | |-finished  15  forest. fitness = 0.691567286349
| | |-MSE =  0.438212884415
| | |-finished  16  forest. fitness = 0.695307357371
| | |-MSE =  0.680057372786
| | |-finished  17  forest. fitness = 0.595217768273
| | |-MSE =  0.44121471742
| | |-finished  18  forest. fitness = 0.693859136958
| | |-MSE =  0.533632963191
| | |-finished  19  forest. fitness = 0.652046496131
| | |-MSE =  0.424163754595
| | |-finished  20  forest. fitness = 0.702166444535
avg =  0.681888864911 max =  0.702166444535
|-spawn
selected for crossover -> 0.702166444535 0.679122742069
>sampler distinct selecting 4 from 6 = [2, 0, 1, 1]
selected for crossover -> 0.678029302676 0.687493842386
>sampler distinct selecting 3 from 4 = [0, 0, 1]
selected for crossover -> 0.639773571325 0.696220007166
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.689700094077 0.679122742069
>sampler distinct selecting 2 from 7 = [6, 3]
selected for crossover -> 0.700541176792 0.639773571325
>sampler distinct selecting 2 from 4 = [1, 1]
selected for crossover -> 0.689704640738 0.68718217885
>sampler distinct selecting 3 from 6 = [4, 0, 1]
selected for crossover -> 0.639773571325 0.696322410659
>sampler distinct selecting 2 from 5 = [4, 1]
selected for crossover -> 0.687493842386 0.688676898931
>sampler distinct selecting 4 from 4 = [1, 2, 0, 0]
selected for crossover -> 0.696220007166 0.595217768273
>sampler distinct selecting 3 from 6 = [0, 0, 1]
selected for crossover -> 0.696322410659 0.700541176792
>sampler distinct selecting 3 from 5 = [0, 1, 0]
selected for crossover -> 0.679122742069 0.639773571325
>sampler distinct selecting 4 from 6 = [2, 3, 0, 0]
selected for crossover -> 0.679122742069 0.688676898931
>sampler distinct selecting 3 from 7 = [0, 4, 1]
selected for crossover -> 0.691662166089 0.695653157395
>sampler distinct selecting 2 from 7 = [5, 2]
selected for crossover -> 0.695653157395 0.595217768273
>sampler distinct selecting 2 from 9 = [1, 0]
selected for crossover -> 0.691567286349 0.678029302676
>sampler distinct selecting 3 from 6 = [0, 1, 0]
selected for crossover -> 0.695653157395 0.700541176792
>sampler distinct selecting 2 from 7 = [1, 2]
selected for crossover -> 0.691567286349 0.695653157395
>sampler distinct selecting 3 from 8 = [0, 2, 2]
selected for crossover -> 0.689704640738 0.691662166089
>sampler distinct selecting 3 from 6 = [3, 1, 1]
selected for crossover -> 0.688676898931 0.693859136958
>sampler distinct selecting 2 from 4 = [3, 0]
selected for crossover -> 0.691662166089 0.696220007166
>sampler distinct selecting 1 from 4 = [0]
|- mutate
>sampler selecting 2 from 5 = [3, 1]
>sampler selecting 3 from 5 = [2, 3, 3]
generation =  3
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.442312669492
| | |-finished  1  forest. fitness = 0.693330940754
| | |-MSE =  0.437441282867
| | |-finished  2  forest. fitness = 0.69568059017
| | |-MSE =  0.453264939861
| | |-finished  3  forest. fitness = 0.688105776567
| | |-MSE =  0.445401702248
| | |-finished  4  forest. fitness = 0.691849192128
| | |-MSE =  0.455930846468
| | |-finished  5  forest. fitness = 0.686845808938
| | |-MSE =  0.452465012747
| | |-finished  6  forest. fitness = 0.688484742299
| | |-MSE =  0.544131133185
| | |-finished  7  forest. fitness = 0.647613391446
| | |-MSE =  0.452360122212
| | |-finished  8  forest. fitness = 0.688534465183
| | |-MSE =  0.438688397068
| | |-finished  9  forest. fitness = 0.695077545658
| | |-MSE =  0.437935687166
| | |-finished  10  forest. fitness = 0.695441394859
| | |-MSE =  0.465745057976
| | |-finished  11  forest. fitness = 0.682246884994
| | |-MSE =  0.490357368571
| | |-finished  12  forest. fitness = 0.670980008613
| | |-MSE =  0.45987193273
| | |-finished  13  forest. fitness = 0.684991592468
| | |-MSE =  0.451404646799
| | |-finished  14  forest. fitness = 0.688987734885
| | |-MSE =  0.453858637603
| | |-finished  15  forest. fitness = 0.687824781678
| | |-MSE =  0.530341500866
| | |-finished  16  forest. fitness = 0.653448919365
| | |-MSE =  0.437776770158
| | |-finished  17  forest. fitness = 0.695518261774
| | |-MSE =  0.465936442238
| | |-finished  18  forest. fitness = 0.68215781475
| | |-MSE =  0.454579234
| | |-finished  19  forest. fitness = 0.6874840343
| | |-MSE =  0.604054268344
| | |-finished  20  forest. fitness = 0.623420304247
avg =  0.681401209254 max =  0.69568059017
|-spawn
selected for crossover -> 0.623420304247 0.670980008613
>sampler distinct selecting 2 from 7 = [2, 0]
selected for crossover -> 0.695077545658 0.695518261774
>sampler distinct selecting 1 from 6 = [3]
selected for crossover -> 0.684991592468 0.69568059017
>sampler distinct selecting 2 from 4 = [2, 1]
selected for crossover -> 0.695441394859 0.695077545658
>sampler distinct selecting 4 from 6 = [3, 4, 3, 0]
selected for crossover -> 0.688987734885 0.688105776567
>sampler distinct selecting 2 from 5 = [4, 2]
selected for crossover -> 0.69568059017 0.688534465183
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.682246884994 0.684991592468
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.653448919365 0.695518261774
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.670980008613 0.682246884994
>sampler distinct selecting 3 from 6 = [4, 0, 2]
selected for crossover -> 0.695441394859 0.693330940754
>sampler distinct selecting 1 from 7 = [4]
selected for crossover -> 0.6874840343 0.693330940754
>sampler distinct selecting 3 from 7 = [0, 0, 2]
selected for crossover -> 0.684991592468 0.691849192128
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.682246884994 0.693330940754
>sampler distinct selecting 2 from 7 = [6, 3]
selected for crossover -> 0.695077545658 0.688534465183
>sampler distinct selecting 3 from 5 = [1, 0, 0]
selected for crossover -> 0.653448919365 0.68215781475
>sampler distinct selecting 4 from 5 = [1, 0, 1, 0]
selected for crossover -> 0.687824781678 0.670980008613
>sampler distinct selecting 2 from 5 = [1, 0]
selected for crossover -> 0.688534465183 0.6874840343
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.68215781475 0.688987734885
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.682246884994 0.647613391446
>sampler distinct selecting 4 from 4 = [0, 2, 0, 0]
selected for crossover -> 0.68215781475 0.688484742299
>sampler distinct selecting 2 from 6 = [5, 4]
|- mutate
>sampler selecting 5 from 5 = [2, 2, 1, 1, 3]
>sampler selecting 3 from 5 = [1, 1, 3]
generation =  4
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.452559722233
| | |-finished  1  forest. fitness = 0.688439851866
| | |-MSE =  0.46452497608
| | |-finished  2  forest. fitness = 0.682815258417
| | |-MSE =  0.444945478948
| | |-finished  3  forest. fitness = 0.692067634779
| | |-MSE =  0.450231115618
| | |-finished  4  forest. fitness = 0.689545265738
| | |-MSE =  0.444654047313
| | |-finished  5  forest. fitness = 0.692207246337
| | |-MSE =  0.600332900445
| | |-finished  6  forest. fitness = 0.624869987814
| | |-MSE =  0.448901854498
| | |-finished  7  forest. fitness = 0.690177872915
| | |-MSE =  0.434236944139
| | |-finished  8  forest. fitness = 0.697234863519
| | |-MSE =  0.441590068655
| | |-finished  9  forest. fitness = 0.693678474723
| | |-MSE =  0.461324209077
| | |-finished  11  forest. fitness = 0.684310842035
| | |-MSE =  0.458746511222
| | |-finished  11  forest. fitness = 0.685520062812
| | |-MSE =  0.440429487832
| | |-finished  13  forest. fitness = 0.694237384369
| | |-MSE =  0.458762924223
| | |-finished  13  forest. fitness = 0.68551234981
| | |-MSE =  0.457652957956
| | |-finished  14  forest. fitness = 0.686034350318
| | |-MSE =  0.442549301167
| | |-finished  15  forest. fitness = 0.693217208723
| | |-MSE =  0.593405362016
| | |-finished  16  forest. fitness = 0.627586691898
| | |-MSE =  0.410712031161
| | |-finished  17  forest. fitness = 0.708861892372
| | |-MSE =  0.436821644969
| | |-finished  18  forest. fitness = 0.695980606571
| | |-MSE =  0.440375263431
| | |-finished  19  forest. fitness = 0.694263519645
| | |-MSE =  0.436905979528
| | |-finished  20  forest. fitness = 0.695939758236
avg =  0.685125056145 max =  0.708861892372
|-spawn
selected for crossover -> 0.684310842035 0.693678474723
>sampler distinct selecting 2 from 3 = [1, 1]
selected for crossover -> 0.697234863519 0.694263519645
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.684310842035 0.694263519645
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.68551234981 0.686034350318
>sampler distinct selecting 3 from 4 = [2, 2, 0]
selected for crossover -> 0.627586691898 0.693217208723
>sampler distinct selecting 5 from 6 = [3, 1, 1, 0, 0]
selected for crossover -> 0.690177872915 0.692067634779
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.694237384369 0.693678474723
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.692207246337 0.708861892372
>sampler distinct selecting 4 from 5 = [2, 2, 1, 0]
selected for crossover -> 0.692207246337 0.694237384369
>sampler distinct selecting 2 from 5 = [0, 1]
selected for crossover -> 0.694263519645 0.708861892372
>sampler distinct selecting 2 from 3 = [0, 1]
selected for crossover -> 0.682815258417 0.694237384369
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.68551234981 0.682815258417
>sampler distinct selecting 2 from 5 = [1, 0]
selected for crossover -> 0.693217208723 0.685520062812
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.689545265738 0.693678474723
>sampler distinct selecting 3 from 4 = [0, 2, 1]
selected for crossover -> 0.693678474723 0.682815258417
>sampler distinct selecting 2 from 5 = [2, 0]
selected for crossover -> 0.708861892372 0.685520062812
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.682815258417 0.627586691898
>sampler distinct selecting 3 from 7 = [6, 4, 4]
selected for crossover -> 0.694237384369 0.695939758236
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.689545265738 0.690177872915
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.708861892372 0.697234863519
>sampler distinct selecting 2 from 4 = [0, 1]
|- mutate
>sampler selecting 1 from 3 = [1]
>sampler selecting 1 from 5 = [3]
>sampler selecting 2 from 3 = [1, 2]
>sampler selecting 1 from 5 = [3]
>sampler selecting 1 from 5 = [3]
generation =  5
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.441630341196
| | |-finished  1  forest. fitness = 0.693659096527
| | |-MSE =  0.450641234507
| | |-finished  2  forest. fitness = 0.689350320543
| | |-MSE =  0.456991791136
| | |-finished  3  forest. fitness = 0.686345665146
| | |-MSE =  0.444486477298
| | |-finished  4  forest. fitness = 0.69228754697
| | |-MSE =  0.459175370635
| | |-finished  5  forest. fitness = 0.685318584815
| | |-MSE =  0.464714169483
| | |-finished  6  forest. fitness = 0.682727060907
| | |-MSE =  0.453352652953
| | |-finished  7  forest. fitness = 0.68806424784
| | |-MSE =  0.449615889096
| | |-finished  8  forest. fitness = 0.689837913286
| | |-MSE =  0.450511865913
| | |-finished  9  forest. fitness = 0.689411802482
| | |-MSE =  0.450446964326
| | |-finished  10  forest. fitness = 0.689442650849
| | |-MSE =  0.444312303263
| | |-finished  11  forest. fitness = 0.692371032041
| | |-MSE =  0.447025496896
| | |-finished  12  forest. fitness = 0.691072826391
| | |-MSE =  0.546464836002
| | |-finished  13  forest. fitness = 0.646636106247
| | |-MSE =  0.620865953278
| | |-finished  14  forest. fitness = 0.616954164518
| | |-MSE =  0.553270202242
| | |-finished  15  forest. fitness = 0.64380298969
| | |-MSE =  0.633766841673
| | |-finished  16  forest. fitness = 0.612082443157
| | |-MSE =  0.48199252953
| | |-finished  17  forest. fitness = 0.674767234027
| | |-MSE =  0.448378052325
| | |-finished  18  forest. fitness = 0.690427473956
| | |-MSE =  0.464460307
| | |-finished  19  forest. fitness = 0.682845410845
| | |-MSE =  0.579964343611
| | |-finished  20  forest. fitness = 0.632925675851
avg =  0.673516512304 max =  0.693659096527
|-spawn
selected for crossover -> 0.693659096527 0.689411802482
>sampler distinct selecting 2 from 5 = [3, 1]
selected for crossover -> 0.689411802482 0.612082443157
>sampler distinct selecting 3 from 7 = [0, 0, 2]
selected for crossover -> 0.685318584815 0.68806424784
>sampler distinct selecting 3 from 3 = [1, 1, 0]
selected for crossover -> 0.693659096527 0.682845410845
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.682727060907 0.68806424784
>sampler distinct selecting 3 from 4 = [0, 1, 1]
selected for crossover -> 0.693659096527 0.691072826391
>sampler distinct selecting 4 from 5 = [3, 0, 1, 0]
selected for crossover -> 0.612082443157 0.632925675851
>sampler distinct selecting 6 from 7 = [0, 3, 0, 0, 2, 0]
selected for crossover -> 0.691072826391 0.690427473956
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.689442650849 0.689411802482
>sampler distinct selecting 5 from 6 = [4, 4, 0, 0, 0]
selected for crossover -> 0.69228754697 0.690427473956
>sampler distinct selecting 3 from 5 = [2, 2, 0]
selected for crossover -> 0.646636106247 0.689350320543
>sampler distinct selecting 1 from 6 = [3]
selected for crossover -> 0.632925675851 0.689411802482
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.616954164518 0.692371032041
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.68806424784 0.689411802482
>sampler distinct selecting 3 from 4 = [3, 1, 1]
selected for crossover -> 0.674767234027 0.685318584815
>sampler distinct selecting 2 from 3 = [2, 0]
selected for crossover -> 0.612082443157 0.682845410845
>sampler distinct selecting 3 from 7 = [1, 4, 1]
selected for crossover -> 0.64380298969 0.69228754697
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.690427473956 0.632925675851
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.689442650849 0.68806424784
>sampler distinct selecting 4 from 6 = [4, 2, 2, 1]
selected for crossover -> 0.689442650849 0.682727060907
>sampler distinct selecting 4 from 6 = [0, 3, 1, 1]
|- mutate
generation =  6
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.459914321564
| | |-finished  1  forest. fitness = 0.684971703633
| | |-MSE =  0.456680066558
| | |-finished  2  forest. fitness = 0.686492540784
| | |-MSE =  0.456229924406
| | |-finished  3  forest. fitness = 0.686704745755
| | |-MSE =  0.463548966386
| | |-finished  4  forest. fitness = 0.683270613398
| | |-MSE =  0.450664019101
| | |-finished  5  forest. fitness = 0.689339493386
| | |-MSE =  0.458291157211
| | |-finished  6  forest. fitness = 0.685734117673
| | |-MSE =  0.460669186626
| | |-finished  7  forest. fitness = 0.684617714371
| | |-MSE =  0.476646576014
| | |-finished  8  forest. fitness = 0.677210116654
| | |-MSE =  0.463604058364
| | |-finished  9  forest. fitness = 0.683244894195
| | |-MSE =  0.446496094315
| | |-finished  10  forest. fitness = 0.691325751884
| | |-MSE =  0.454938554899
| | |-finished  11  forest. fitness = 0.687314248861
| | |-MSE =  0.438279242949
| | |-finished  12  forest. fitness = 0.695275277664
| | |-MSE =  0.463288239703
| | |-finished  13  forest. fitness = 0.683392357614
| | |-MSE =  0.55215713964
| | |-finished  14  forest. fitness = 0.644264665259
| | |-MSE =  0.629090674746
| | |-finished  15  forest. fitness = 0.613839374015
| | |-MSE =  0.605057270216
| | |-finished  16  forest. fitness = 0.623030728284
| | |-MSE =  0.456309454031
| | |-finished  17  forest. fitness = 0.686667244542
| | |-MSE =  0.45474451957
| | |-finished  18  forest. fitness = 0.687405923547
| | |-MSE =  0.609007654645
| | |-finished  19  forest. fitness = 0.621501083052
| | |-MSE =  0.463066900787
| | |-finished  20  forest. fitness = 0.683495744085
avg =  0.673954916933 max =  0.695275277664
|-spawn
selected for crossover -> 0.685734117673 0.613839374015
>sampler distinct selecting 6 from 9 = [6, 0, 0, 4, 1, 0]
selected for crossover -> 0.684617714371 0.686704745755
>sampler distinct selecting 4 from 4 = [2, 2, 0, 0]
selected for crossover -> 0.686492540784 0.686704745755
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.684617714371 0.644264665259
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.613839374015 0.683270613398
>sampler distinct selecting 5 from 10 = [0, 7, 7, 2, 3]
selected for crossover -> 0.683244894195 0.685734117673
>sampler distinct selecting 4 from 5 = [0, 0, 1, 1]
selected for crossover -> 0.685734117673 0.686492540784
>sampler distinct selecting 4 from 4 = [3, 1, 0, 0]
selected for crossover -> 0.686667244542 0.684971703633
>sampler distinct selecting 6 from 6 = [0, 0, 0, 0, 1, 0]
selected for crossover -> 0.686704745755 0.687314248861
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.691325751884 0.621501083052
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.687405923547 0.623030728284
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.686492540784 0.644264665259
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.691325751884 0.695275277664
>sampler distinct selecting 2 from 3 = [0, 1]
selected for crossover -> 0.683244894195 0.684971703633
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.689339493386 0.677210116654
>sampler distinct selecting 5 from 6 = [2, 3, 0, 1, 0]
selected for crossover -> 0.684971703633 0.685734117673
>sampler distinct selecting 3 from 4 = [0, 1, 1]
selected for crossover -> 0.683495744085 0.695275277664
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.613839374015 0.683244894195
>sampler distinct selecting 3 from 8 = [0, 4, 3]
selected for crossover -> 0.689339493386 0.687405923547
>sampler distinct selecting 3 from 7 = [5, 0, 0]
selected for crossover -> 0.685734117673 0.684971703633
>sampler distinct selecting 3 from 4 = [0, 0, 0]
|- mutate
generation =  7
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.45934675432
| | |-finished  1  forest. fitness = 0.685238101938
| | |-MSE =  0.447573464632
| | |-finished  2  forest. fitness = 0.690811226119
| | |-MSE =  0.456410304344
| | |-finished  3  forest. fitness = 0.686619695712
| | |-MSE =  0.482577868851
| | |-finished  4  forest. fitness = 0.674500827923
| | |-MSE =  0.464721959517
| | |-finished  5  forest. fitness = 0.682723429865
| | |-MSE =  0.610277053304
| | |-finished  6  forest. fitness = 0.621011147087
| | |-MSE =  0.457685158124
| | |-finished  7  forest. fitness = 0.686019195864
| | |-MSE =  0.44664173506
| | |-finished  8  forest. fitness = 0.691256152622
| | |-MSE =  0.439089565441
| | |-finished  9  forest. fitness = 0.69488378209
| | |-MSE =  0.447575385018
| | |-finished  10  forest. fitness = 0.690810309674
| | |-MSE =  0.439906815578
| | |-finished  11  forest. fitness = 0.694489385828
| | |-MSE =  0.456034899556
| | |-finished  12  forest. fitness = 0.686796724656
| | |-MSE =  0.45533850753
| | |-finished  13  forest. fitness = 0.687125362812
| | |-MSE =  0.447419890214
| | |-finished  14  forest. fitness = 0.690884522702
| | |-MSE =  0.435181999276
| | |-finished  15  forest. fitness = 0.696775740293
| | |-MSE =  0.647255495174
| | |-finished  16  forest. fitness = 0.607070368215
| | |-MSE =  0.551843460429
| | |-finished  17  forest. fitness = 0.64439489259
| | |-MSE =  0.450171830432
| | |-finished  18  forest. fitness = 0.689573455376
| | |-MSE =  0.581223954562
| | |-finished  19  forest. fitness = 0.632421484076
| | |-MSE =  0.454710458324
| | |-finished  20  forest. fitness = 0.687422018779
avg =  0.676041391211 max =  0.696775740293
|-spawn
selected for crossover -> 0.687422018779 0.686796724656
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.686619695712 0.686019195864
>sampler distinct selecting 1 from 6 = [3]
selected for crossover -> 0.607070368215 0.632421484076
>sampler distinct selecting 5 from 7 = [6, 0, 0, 3, 0]
selected for crossover -> 0.690811226119 0.682723429865
>sampler distinct selecting 6 from 8 = [0, 4, 1, 3, 0, 2]
selected for crossover -> 0.685238101938 0.686619695712
>sampler distinct selecting 4 from 7 = [0, 4, 0, 0]
selected for crossover -> 0.689573455376 0.687422018779
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.689573455376 0.686619695712
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.69488378209 0.690811226119
>sampler distinct selecting 6 from 7 = [1, 2, 0, 0, 2, 0]
selected for crossover -> 0.686796724656 0.690811226119
>sampler distinct selecting 6 from 6 = [4, 0, 1, 2, 0, 0]
selected for crossover -> 0.686796724656 0.696775740293
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.689573455376 0.674500827923
>sampler distinct selecting 7 from 8 = [3, 5, 3, 2, 1, 0, 1]
selected for crossover -> 0.691256152622 0.64439489259
>sampler distinct selecting 4 from 4 = [0, 0, 1, 0]
selected for crossover -> 0.694489385828 0.686019195864
>sampler distinct selecting 1 from 7 = [2]
selected for crossover -> 0.682723429865 0.690884522702
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.686019195864 0.685238101938
>sampler distinct selecting 2 from 7 = [6, 3]
selected for crossover -> 0.686019195864 0.690884522702
>sampler distinct selecting 2 from 6 = [0, 0]
selected for crossover -> 0.689573455376 0.686019195864
>sampler distinct selecting 2 from 5 = [2, 0]
selected for crossover -> 0.690884522702 0.686796724656
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.687422018779 0.691256152622
>sampler distinct selecting 4 from 5 = [4, 3, 0, 0]
selected for crossover -> 0.687125362812 0.632421484076
>sampler distinct selecting 4 from 6 = [4, 1, 3, 1]
|- mutate
>sampler selecting 2 from 3 = [0, 1]
>sampler selecting 4 from 5 = [3, 2, 2, 3]
>sampler selecting 3 from 5 = [0, 2, 1]
>sampler selecting 4 from 5 = [3, 2, 0, 3]
generation =  8
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.458092010399
| | |-finished  1  forest. fitness = 0.685827775523
| | |-MSE =  0.465444003337
| | |-finished  2  forest. fitness = 0.682387042918
| | |-MSE =  0.452934495395
| | |-finished  3  forest. fitness = 0.688262274156
| | |-MSE =  0.452946707472
| | |-finished  4  forest. fitness = 0.688256489283
| | |-MSE =  0.45603022684
| | |-finished  5  forest. fitness = 0.686798928735
| | |-MSE =  0.456232354812
| | |-finished  6  forest. fitness = 0.686703599666
| | |-MSE =  0.457820368567
| | |-finished  7  forest. fitness = 0.685955568712
| | |-MSE =  0.448006439184
| | |-finished  8  forest. fitness = 0.690604663722
| | |-MSE =  0.457710528151
| | |-finished  9  forest. fitness = 0.686007256371
| | |-MSE =  0.445624763271
| | |-finished  10  forest. fitness = 0.69174243926
| | |-MSE =  0.44052016391
| | |-finished  11  forest. fitness = 0.694193684374
| | |-MSE =  0.45737847781
| | |-finished  12  forest. fitness = 0.686163556843
| | |-MSE =  0.466126634247
| | |-finished  13  forest. fitness = 0.682069322418
| | |-MSE =  0.433009399706
| | |-finished  14  forest. fitness = 0.697832128809
| | |-MSE =  0.594006571429
| | |-finished  15  forest. fitness = 0.62734998583
| | |-MSE =  0.628358072382
| | |-finished  16  forest. fitness = 0.614115541883
| | |-MSE =  0.413329326444
| | |-finished  17  forest. fitness = 0.707549175758
| | |-MSE =  0.460819651071
| | |-finished  18  forest. fitness = 0.684547198737
| | |-MSE =  0.571736243888
| | |-finished  19  forest. fitness = 0.636239066121
| | |-MSE =  0.453627574033
| | |-finished  20  forest. fitness = 0.687934115907
avg =  0.679526990751 max =  0.707549175758
|-spawn
selected for crossover -> 0.686163556843 0.697832128809
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.687934115907 0.685827775523
>sampler distinct selecting 5 from 5 = [2, 2, 1, 0, 0]
selected for crossover -> 0.687934115907 0.690604663722
>sampler distinct selecting 1 from 9 = [0]
selected for crossover -> 0.69174243926 0.636239066121
>sampler distinct selecting 5 from 6 = [2, 2, 2, 1, 0]
selected for crossover -> 0.686163556843 0.686007256371
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.688256489283 0.682069322418
>sampler distinct selecting 2 from 5 = [2, 0]
selected for crossover -> 0.688256489283 0.687934115907
>sampler distinct selecting 4 from 5 = [3, 0, 1, 1]
selected for crossover -> 0.686007256371 0.685827775523
>sampler distinct selecting 5 from 5 = [1, 0, 1, 0, 0]
selected for crossover -> 0.686798928735 0.69174243926
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.686798928735 0.636239066121
>sampler distinct selecting 3 from 5 = [2, 2, 0]
selected for crossover -> 0.690604663722 0.697832128809
>sampler distinct selecting 1 from 9 = [0]
selected for crossover -> 0.690604663722 0.614115541883
>sampler distinct selecting 4 from 13 = [8, 6, 5, 5]
selected for crossover -> 0.686163556843 0.69174243926
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.684547198737 0.69174243926
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.62734998583 0.686007256371
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.62734998583 0.69174243926
>sampler distinct selecting 2 from 6 = [2, 0]
selected for crossover -> 0.686703599666 0.685827775523
>sampler distinct selecting 2 from 10 = [0, 0]
selected for crossover -> 0.697832128809 0.688256489283
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.697832128809 0.707549175758
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.686798928735 0.690604663722
>sampler distinct selecting 2 from 9 = [1, 2]
|- mutate
generation =  9
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.450557284338
| | |-finished  1  forest. fitness = 0.689390216296
| | |-MSE =  0.593751504952
| | |-finished  2  forest. fitness = 0.627450387901
| | |-MSE =  0.609297115808
| | |-finished  3  forest. fitness = 0.621389294853
| | |-MSE =  0.443271407325
| | |-finished  4  forest. fitness = 0.692870374155
| | |-MSE =  0.507386579146
| | |-finished  5  forest. fitness = 0.663399829768
| | |-MSE =  0.574185313252
| | |-finished  6  forest. fitness = 0.635249224841
| | |-MSE =  0.513773561194
| | |-finished  7  forest. fitness = 0.660600783126
| | |-MSE =  0.461962105273
| | |-finished  8  forest. fitness = 0.684012257495
| | |-MSE =  0.603318515253
| | |-finished  9  forest. fitness = 0.623706388024
| | |-MSE =  0.45508095563
| | |-finished  10  forest. fitness = 0.687246985215
| | |-MSE =  0.450310273874
| | |-finished  11  forest. fitness = 0.689507630204
| | |-MSE =  0.555275168851
| | |-finished  12  forest. fitness = 0.642973037844
| | |-MSE =  0.569801472885
| | |-finished  13  forest. fitness = 0.637023226996
| | |-MSE =  0.528826649045
| | |-finished  14  forest. fitness = 0.654096395183
| | |-MSE =  0.432529597443
| | |-finished  15  forest. fitness = 0.69806585622
| | |-MSE =  0.413761273407
| | |-finished  16  forest. fitness = 0.707332998017
| | |-MSE =  0.519954211169
| | |-finished  17  forest. fitness = 0.657914556012
| | |-MSE =  0.561960745072
| | |-finished  18  forest. fitness = 0.640220955075
| | |-MSE =  0.521382331279
| | |-finished  19  forest. fitness = 0.65729697226
| | |-MSE =  0.548674012861
| | |-finished  20  forest. fitness = 0.645713682606
avg =  0.660773052605 max =  0.707332998017
|-spawn
selected for crossover -> 0.663399829768 0.627450387901
>sampler distinct selecting 6 from 9 = [3, 2, 4, 2, 0, 0]
selected for crossover -> 0.689390216296 0.65729697226
>sampler distinct selecting 3 from 3 = [2, 1, 0]
selected for crossover -> 0.663399829768 0.621389294853
>sampler distinct selecting 5 from 9 = [1, 0, 1, 3, 0]
selected for crossover -> 0.623706388024 0.707332998017
>sampler distinct selecting 3 from 5 = [3, 0, 1]
selected for crossover -> 0.689390216296 0.660600783126
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.687246985215 0.627450387901
>sampler distinct selecting 4 from 6 = [0, 3, 0, 1]
selected for crossover -> 0.689390216296 0.657914556012
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.635249224841 0.627450387901
>sampler distinct selecting 5 from 8 = [1, 2, 3, 0, 1]
selected for crossover -> 0.623706388024 0.684012257495
>sampler distinct selecting 4 from 5 = [1, 1, 2, 1]
selected for crossover -> 0.65729697226 0.627450387901
>sampler distinct selecting 6 from 6 = [0, 3, 0, 0, 1, 0]
selected for crossover -> 0.692870374155 0.663399829768
>sampler distinct selecting 5 from 7 = [4, 3, 0, 1, 0]
selected for crossover -> 0.637023226996 0.684012257495
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.637023226996 0.635249224841
>sampler distinct selecting 2 from 5 = [3, 0]
selected for crossover -> 0.69806585622 0.642973037844
>sampler distinct selecting 6 from 8 = [1, 1, 0, 2, 1, 0]
selected for crossover -> 0.65729697226 0.635249224841
>sampler distinct selecting 3 from 4 = [1, 1, 0]
selected for crossover -> 0.660600783126 0.654096395183
>sampler distinct selecting 2 from 5 = [4, 0]
selected for crossover -> 0.707332998017 0.687246985215
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.657914556012 0.687246985215
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.621389294853 0.654096395183
>sampler distinct selecting 2 from 8 = [6, 5]
selected for crossover -> 0.640220955075 0.707332998017
>sampler distinct selecting 1 from 3 = [0]
|- mutate
>sampler selecting 3 from 3 = [2, 2, 1]
>sampler selecting 4 from 5 = [1, 4, 3, 2]
>sampler selecting 3 from 5 = [3, 0, 3]
>sampler selecting 3 from 5 = [2, 0, 2]
>sampler selecting 1 from 5 = [2]
generation =  10
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.455076403412
| | |-finished  1  forest. fitness = 0.687249135272
| | |-MSE =  0.604350385222
| | |-finished  2  forest. fitness = 0.623305238813
| | |-MSE =  0.589889451693
| | |-finished  3  forest. fitness = 0.628974548473
| | |-MSE =  0.493907299617
| | |-finished  4  forest. fitness = 0.669385577175
| | |-MSE =  0.598363609197
| | |-finished  5  forest. fitness = 0.62563986958
| | |-MSE =  0.627593636294
| | |-finished  6  forest. fitness = 0.614403975108
| | |-MSE =  0.546549421094
| | |-finished  7  forest. fitness = 0.646600739918
| | |-MSE =  0.584457663407
| | |-finished  8  forest. fitness = 0.63113077938
| | |-MSE =  0.447660766182
| | |-finished  9  forest. fitness = 0.690769566573
| | |-MSE =  0.595540244988
| | |-finished  11  forest. fitness = 0.626746961188
| | |-MSE =  0.455312494335
| | |-finished  11  forest. fitness = 0.687137644934
| | |-MSE =  0.541753054967
| | |-finished  12  forest. fitness = 0.648612303234
| | |-MSE =  0.435870154987
| | |-finished  13  forest. fitness = 0.696441803269
| | |-MSE =  0.568049170819
| | |-finished  14  forest. fitness = 0.637735103343
| | |-MSE =  0.649749261252
| | |-finished  16  forest. fitness = 0.606152718772
| | |-MSE =  0.644996042711
| | |-finished  16  forest. fitness = 0.607904197965
| | |-MSE =  0.629309066969
| | |-finished  17  forest. fitness = 0.613757095123
| | |-MSE =  0.439475118073
| | |-finished  18  forest. fitness = 0.694697662672
| | |-MSE =  0.620896407805
| | |-finished  19  forest. fitness = 0.616942572755
| | |-MSE =  0.622848705425
| | |-finished  20  forest. fitness = 0.616200386799
avg =  0.643489394017 max =  0.696441803269
|-spawn
selected for crossover -> 0.694697662672 0.613757095123
>sampler distinct selecting 3 from 6 = [4, 3, 2]
selected for crossover -> 0.63113077938 0.628974548473
>sampler distinct selecting 2 from 10 = [7, 4]
selected for crossover -> 0.648612303234 0.687137644934
>sampler distinct selecting 3 from 3 = [1, 1, 0]
selected for crossover -> 0.687137644934 0.626746961188
>sampler distinct selecting 2 from 4 = [3, 0]
selected for crossover -> 0.626746961188 0.646600739918
>sampler distinct selecting 2 from 4 = [2, 2]
selected for crossover -> 0.614403975108 0.696441803269
>sampler distinct selecting 4 from 8 = [0, 1, 0, 1]
selected for crossover -> 0.62563986958 0.626746961188
>sampler distinct selecting 1 from 8 = [1]
selected for crossover -> 0.613757095123 0.626746961188
>sampler distinct selecting 2 from 5 = [2, 3]
selected for crossover -> 0.687249135272 0.690769566573
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.616942572755 0.646600739918
>sampler distinct selecting 2 from 9 = [1, 4]
selected for crossover -> 0.628974548473 0.690769566573
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.613757095123 0.687249135272
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.616942572755 0.694697662672
>sampler distinct selecting 3 from 12 = [5, 10, 7]
selected for crossover -> 0.616942572755 0.607904197965
>sampler distinct selecting 2 from 10 = [6, 7]
selected for crossover -> 0.648612303234 0.687249135272
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.696441803269 0.616942572755
>sampler distinct selecting 4 from 10 = [8, 7, 0, 4]
selected for crossover -> 0.690769566573 0.637735103343
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.648612303234 0.616942572755
>sampler distinct selecting 2 from 10 = [6, 1]
selected for crossover -> 0.687249135272 0.613757095123
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.62563986958 0.687137644934
>sampler distinct selecting 3 from 6 = [2, 4, 1]
|- mutate
generation =  11
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.460497772389
| | |-finished  1  forest. fitness = 0.684698065896
| | |-MSE =  0.451814434697
| | |-finished  2  forest. fitness = 0.688793261798
| | |-MSE =  0.458948049583
| | |-finished  3  forest. fitness = 0.68542536541
| | |-MSE =  0.559378402717
| | |-finished  4  forest. fitness = 0.641281165789
| | |-MSE =  0.454167280377
| | |-finished  6  forest. fitness = 0.687678792869
| | |-MSE =  0.441744541403
| | |-finished  6  forest. fitness = 0.693604151972
| | |-MSE =  0.625351932565
| | |-finished  7  forest. fitness = 0.615251368005
| | |-MSE =  0.569028374293
| | |-finished  8  forest. fitness = 0.637337103894
| | |-MSE =  0.459916433639
| | |-finished  9  forest. fitness = 0.684970712678
| | |-MSE =  0.625860343356
| | |-finished  10  forest. fitness = 0.615058977289
| | |-MSE =  0.467623382422
| | |-finished  11  forest. fitness = 0.68137371752
| | |-MSE =  0.639982537773
| | |-finished  12  forest. fitness = 0.60976259013
| | |-MSE =  0.460240374091
| | |-finished  14  forest. fitness = 0.684818758434
| | |-MSE =  0.587496310925
| | |-finished  14  forest. fitness = 0.629922723674
| | |-MSE =  0.567687125662
| | |-finished  15  forest. fitness = 0.637882383309
| | |-MSE =  0.50558775994
| | |-finished  16  forest. fitness = 0.664192434747
| | |-MSE =  0.427760736152
| | |-finished  17  forest. fitness = 0.700397464841
| | |-MSE =  0.434475295281
| | |-finished  18  forest. fitness = 0.697119011592
| | |-MSE =  0.591581083334
| | |-finished  19  forest. fitness = 0.628306035094
| | |-MSE =  0.548754872364
| | |-finished  20  forest. fitness = 0.645679970306
avg =  0.660677702762 max =  0.700397464841
|-spawn
selected for crossover -> 0.688793261798 0.629922723674
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.637337103894 0.615058977289
>sampler distinct selecting 3 from 5 = [3, 0, 0]
selected for crossover -> 0.68137371752 0.68542536541
>sampler distinct selecting 2 from 3 = [1, 1]
selected for crossover -> 0.700397464841 0.68542536541
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.60976259013 0.637882383309
>sampler distinct selecting 3 from 4 = [2, 1, 0]
selected for crossover -> 0.684818758434 0.68542536541
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.68137371752 0.687678792869
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.684698065896 0.628306035094
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.700397464841 0.684970712678
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.629922723674 0.684698065896
>sampler distinct selecting 2 from 3 = [2, 1]
selected for crossover -> 0.645679970306 0.684970712678
>sampler distinct selecting 3 from 5 = [2, 1, 1]
selected for crossover -> 0.615058977289 0.684970712678
>sampler distinct selecting 4 from 5 = [0, 2, 2, 0]
selected for crossover -> 0.700397464841 0.645679970306
>sampler distinct selecting 2 from 5 = [4, 0]
selected for crossover -> 0.615251368005 0.60976259013
>sampler distinct selecting 4 from 6 = [5, 0, 1, 1]
selected for crossover -> 0.693604151972 0.664192434747
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.68542536541 0.615058977289
>sampler distinct selecting 3 from 5 = [1, 0, 0]
selected for crossover -> 0.641281165789 0.688793261798
>sampler distinct selecting 4 from 7 = [0, 2, 3, 1]
selected for crossover -> 0.60976259013 0.687678792869
>sampler distinct selecting 2 from 3 = [1, 1]
selected for crossover -> 0.68137371752 0.684818758434
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.637337103894 0.700397464841
>sampler distinct selecting 2 from 4 = [3, 0]
|- mutate
generation =  12
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.454704167952
| | |-finished  1  forest. fitness = 0.687424991301
| | |-MSE =  0.45551193381
| | |-finished  2  forest. fitness = 0.687043490865
| | |-MSE =  0.455565744026
| | |-finished  3  forest. fitness = 0.687018091834
| | |-MSE =  0.456618475891
| | |-finished  4  forest. fitness = 0.686521567968
| | |-MSE =  0.441082093794
| | |-finished  5  forest. fitness = 0.693922993219
| | |-MSE =  0.453592066049
| | |-finished  6  forest. fitness = 0.687950920589
| | |-MSE =  0.45954229949
| | |-finished  7  forest. fitness = 0.68514629576
| | |-MSE =  0.45653431453
| | |-finished  8  forest. fitness = 0.686561236508
| | |-MSE =  0.463791933135
| | |-finished  9  forest. fitness = 0.683157201077
| | |-MSE =  0.459371398181
| | |-finished  10  forest. fitness = 0.685226530578
| | |-MSE =  0.60351263531
| | |-finished  11  forest. fitness = 0.623630882588
| | |-MSE =  0.565797664369
| | |-finished  12  forest. fitness = 0.638652121379
| | |-MSE =  0.450105753833
| | |-finished  13  forest. fitness = 0.689604876994
| | |-MSE =  0.452494533395
| | |-finished  14  forest. fitness = 0.688470749465
| | |-MSE =  0.425878629412
| | |-finished  15  forest. fitness = 0.701321963436
| | |-MSE =  0.605060736067
| | |-finished  16  forest. fitness = 0.623029382957
| | |-MSE =  0.441299694534
| | |-finished  17  forest. fitness = 0.693818227946
| | |-MSE =  0.576737516104
| | |-finished  18  forest. fitness = 0.634220971967
| | |-MSE =  0.602619567863
| | |-finished  19  forest. fitness = 0.623978403891
| | |-MSE =  0.428843901292
| | |-finished  20  forest. fitness = 0.699866513827
avg =  0.674328370707 max =  0.701321963436
|-spawn
selected for crossover -> 0.687424991301 0.689604876994
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.685226530578 0.699866513827
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.634220971967 0.683157201077
>sampler distinct selecting 5 from 6 = [0, 2, 0, 0, 0]
selected for crossover -> 0.638652121379 0.623978403891
>sampler distinct selecting 2 from 7 = [3, 3]
selected for crossover -> 0.68514629576 0.701321963436
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.686521567968 0.68514629576
>sampler distinct selecting 3 from 4 = [3, 1, 0]
selected for crossover -> 0.623978403891 0.699866513827
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.638652121379 0.623029382957
>sampler distinct selecting 3 from 7 = [5, 0, 0]
selected for crossover -> 0.688470749465 0.701321963436
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.623029382957 0.689604876994
>sampler distinct selecting 3 from 6 = [0, 1, 1]
selected for crossover -> 0.68514629576 0.688470749465
>sampler distinct selecting 4 from 5 = [4, 3, 2, 0]
selected for crossover -> 0.687043490865 0.687424991301
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.685226530578 0.623029382957
>sampler distinct selecting 5 from 7 = [1, 3, 3, 1, 0]
selected for crossover -> 0.68514629576 0.687424991301
>sampler distinct selecting 2 from 5 = [0, 2]
selected for crossover -> 0.687043490865 0.693922993219
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.688470749465 0.701321963436
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.699866513827 0.689604876994
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.688470749465 0.638652121379
>sampler distinct selecting 3 from 5 = [2, 0, 0]
selected for crossover -> 0.638652121379 0.699866513827
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.685226530578 0.687950920589
>sampler distinct selecting 4 from 5 = [0, 0, 1, 0]
|- mutate
generation =  13
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.457732034453
| | |-finished  1  forest. fitness = 0.685997135526
| | |-MSE =  0.455702445874
| | |-finished  2  forest. fitness = 0.686953575461
| | |-MSE =  0.45614824994
| | |-finished  3  forest. fitness = 0.686743262605
| | |-MSE =  0.451625177683
| | |-finished  4  forest. fitness = 0.688883063875
| | |-MSE =  0.589267439899
| | |-finished  5  forest. fitness = 0.629220718235
| | |-MSE =  0.428266098476
| | |-finished  6  forest. fitness = 0.70014964373
| | |-MSE =  0.602119343763
| | |-finished  7  forest. fitness = 0.624173226479
| | |-MSE =  0.469808291463
| | |-finished  8  forest. fitness = 0.680360837402
| | |-MSE =  0.462383010757
| | |-finished  9  forest. fitness = 0.683815383962
| | |-MSE =  0.437122136285
| | |-finished  10  forest. fitness = 0.695835082316
| | |-MSE =  0.450096498829
| | |-finished  11  forest. fitness = 0.689609278284
| | |-MSE =  0.456083561336
| | |-finished  12  forest. fitness = 0.686773772161
| | |-MSE =  0.566178578181
| | |-finished  13  forest. fitness = 0.638496793362
| | |-MSE =  0.437635106437
| | |-finished  14  forest. fitness = 0.695586797736
| | |-MSE =  0.455147344375
| | |-finished  15  forest. fitness = 0.687215630682
| | |-MSE =  0.5982559916
| | |-finished  16  forest. fitness = 0.625681996661
| | |-MSE =  0.450138570472
| | |-finished  17  forest. fitness = 0.689589271234
| | |-MSE =  0.572529920599
| | |-finished  18  forest. fitness = 0.635917947825
| | |-MSE =  0.592289122064
| | |-finished  19  forest. fitness = 0.628026648015
| | |-MSE =  0.667079529793
| | |-finished  20  forest. fitness = 0.599851406084
avg =  0.666944073582 max =  0.70014964373
|-spawn
selected for crossover -> 0.70014964373 0.689609278284
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.628026648015 0.70014964373
>sampler distinct selecting 3 from 4 = [1, 1, 0]
selected for crossover -> 0.685997135526 0.686743262605
>sampler distinct selecting 3 from 6 = [2, 1, 1]
selected for crossover -> 0.695835082316 0.687215630682
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.624173226479 0.628026648015
>sampler distinct selecting 5 from 7 = [0, 3, 1, 0, 0]
selected for crossover -> 0.688883063875 0.687215630682
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.685997135526 0.686743262605
>sampler distinct selecting 5 from 6 = [4, 1, 2, 2, 0]
selected for crossover -> 0.638496793362 0.689609278284
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.686773772161 0.628026648015
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.695586797736 0.685997135526
>sampler distinct selecting 2 from 6 = [0, 4]
selected for crossover -> 0.685997135526 0.686953575461
>sampler distinct selecting 1 from 8 = [5]
selected for crossover -> 0.629220718235 0.635917947825
>sampler distinct selecting 1 from 7 = [1]
selected for crossover -> 0.70014964373 0.688883063875
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.687215630682 0.686743262605
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.688883063875 0.70014964373
>sampler distinct selecting 2 from 4 = [0, 2]
selected for crossover -> 0.625681996661 0.70014964373
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.680360837402 0.686953575461
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.628026648015 0.689609278284
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.689609278284 0.688883063875
>sampler distinct selecting 3 from 4 = [2, 0, 0]
selected for crossover -> 0.625681996661 0.688883063875
>sampler distinct selecting 2 from 3 = [0, 1]
|- mutate
>sampler selecting 4 from 5 = [2, 3, 1, 4]
>sampler selecting 2 from 5 = [3, 4]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 1 from 5 = [3]
>sampler selecting 5 from 5 = [3, 4, 1, 2, 0]
generation =  14
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.458615716385
| | |-finished  1  forest. fitness = 0.685581533756
| | |-MSE =  0.458069120481
| | |-finished  2  forest. fitness = 0.685838542188
| | |-MSE =  0.451495152887
| | |-finished  3  forest. fitness = 0.688944773953
| | |-MSE =  0.590106166691
| | |-finished  4  forest. fitness = 0.628888825757
| | |-MSE =  0.588760999505
| | |-finished  5  forest. fitness = 0.629421291378
| | |-MSE =  0.563978388994
| | |-finished  6  forest. fitness = 0.639395024277
| | |-MSE =  0.626108754304
| | |-finished  7  forest. fitness = 0.614965018393
| | |-MSE =  0.549692552398
| | |-finished  8  forest. fitness = 0.645289285576
| | |-MSE =  0.505367645602
| | |-finished  9  forest. fitness = 0.664289552736
| | |-MSE =  0.580804256443
| | |-finished  10  forest. fitness = 0.632589389815
| | |-MSE =  0.550569713435
| | |-finished  11  forest. fitness = 0.644924243867
| | |-MSE =  0.561707973546
| | |-finished  12  forest. fitness = 0.640324578564
| | |-MSE =  0.588078515012
| | |-finished  13  forest. fitness = 0.62969178825
| | |-MSE =  0.434390686508
| | |-finished  14  forest. fitness = 0.697160131759
| | |-MSE =  0.552242096675
| | |-finished  15  forest. fitness = 0.644229403482
| | |-MSE =  0.452090783806
| | |-finished  16  forest. fitness = 0.68866217674
| | |-MSE =  0.521528162203
| | |-finished  17  forest. fitness = 0.657233973607
| | |-MSE =  0.453351762698
| | |-finished  18  forest. fitness = 0.688064669316
| | |-MSE =  0.563974607051
| | |-finished  19  forest. fitness = 0.639396570438
| | |-MSE =  0.614348507245
| | |-finished  20  forest. fitness = 0.619444931198
avg =  0.653216785253 max =  0.697160131759
|-spawn
selected for crossover -> 0.644229403482 0.688944773953
>sampler distinct selecting 3 from 4 = [1, 1, 1]
selected for crossover -> 0.629421291378 0.657233973607
>sampler distinct selecting 3 from 3 = [2, 1, 0]
selected for crossover -> 0.619444931198 0.685581533756
>sampler distinct selecting 3 from 4 = [1, 0, 0]
selected for crossover -> 0.688944773953 0.629421291378
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.644229403482 0.639395024277
>sampler distinct selecting 3 from 5 = [0, 2, 0]
selected for crossover -> 0.685838542188 0.688944773953
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.640324578564 0.645289285576
>sampler distinct selecting 3 from 6 = [0, 2, 2]
selected for crossover -> 0.644229403482 0.632589389815
>sampler distinct selecting 4 from 5 = [3, 2, 1, 0]
selected for crossover -> 0.645289285576 0.664289552736
>sampler distinct selecting 5 from 9 = [5, 2, 2, 4, 0]
selected for crossover -> 0.62969178825 0.629421291378
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.688944773953 0.640324578564
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.62969178825 0.688064669316
>sampler distinct selecting 2 from 3 = [1, 1]
selected for crossover -> 0.688064669316 0.614965018393
>sampler distinct selecting 5 from 7 = [4, 0, 0, 0, 0]
selected for crossover -> 0.62969178825 0.640324578564
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.688944773953 0.644924243867
>sampler distinct selecting 2 from 4 = [0, 2]
selected for crossover -> 0.697160131759 0.614965018393
>sampler distinct selecting 1 from 7 = [0]
selected for crossover -> 0.640324578564 0.619444931198
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.629421291378 0.697160131759
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.645289285576 0.619444931198
>sampler distinct selecting 5 from 8 = [3, 3, 1, 0, 1]
selected for crossover -> 0.645289285576 0.657233973607
>sampler distinct selecting 5 from 7 = [6, 3, 2, 0, 0]
|- mutate
>sampler selecting 4 from 5 = [2, 1, 1, 4]
>sampler selecting 3 from 5 = [1, 3, 0]
>sampler selecting 4 from 5 = [1, 2, 3, 0]
>sampler selecting 3 from 5 = [4, 2, 4]
-+=> 4 <=+-
>sampler selecting 3 from 3 = [2, 1, 1]
>sampler selecting 5 from 5 = [3, 3, 1, 1, 1]
>sampler selecting 2 from 5 = [4, 1]
>sampler selecting 4 from 5 = [1, 4, 4, 3]
>sampler selecting 3 from 3 = [1, 2, 2]
>sampler selecting 4 from 5 = [0, 1, 3, 3]
>sampler selecting 1 from 5 = [4]
>sampler selecting 4 from 5 = [3, 3, 0, 3]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 3 from 5 = [1, 1, 2]
>sampler selecting 4 from 5 = [3, 2, 1, 3]
>sampler selecting 3 from 3 = [1, 1, 0]
>sampler selecting 5 from 5 = [3, 3, 4, 2, 3]
>sampler selecting 2 from 5 = [4, 1]
>sampler selecting 3 from 5 = [4, 1, 2]
>sampler selecting 3 from 3 = [1, 1, 1]
>sampler selecting 5 from 5 = [4, 2, 2, 3, 3]
>sampler selecting 2 from 5 = [1, 2]
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 3 from 3 = [2, 0, 1]
>sampler selecting 4 from 5 = [1, 3, 1, 3]
>sampler selecting 3 from 5 = [0, 2, 0]
>sampler selecting 2 from 5 = [4, 2]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [1, 3, 0, 2]
>sampler selecting 1 from 3 = [1]
>sampler selecting 5 from 5 = [1, 3, 2, 3, 0]
>sampler selecting 1 from 3 = [0]
>sampler selecting 5 from 5 = [2, 1, 2, 1, 2]
>sampler selecting 2 from 3 = [0, 2]
>sampler selecting 5 from 5 = [3, 1, 3, 4, 2]
>sampler selecting 1 from 5 = [3]
>sampler selecting 1 from 3 = [0]
>sampler selecting 1 from 5 = [2]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 4 from 5 = [3, 1, 0, 2]
>sampler selecting 1 from 5 = [2]
>sampler selecting 2 from 3 = [0, 2]
>sampler selecting 3 from 5 = [0, 1, 0]
>sampler selecting 3 from 5 = [2, 1, 3]
>sampler selecting 3 from 3 = [2, 0, 1]
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 4 from 5 = [2, 2, 1, 3]
>sampler selecting 2 from 5 = [0, 2]
>sampler selecting 3 from 3 = [2, 2, 1]
>sampler selecting 5 from 5 = [2, 1, 2, 3, 0]
>sampler selecting 3 from 5 = [1, 0, 2]
>sampler selecting 3 from 5 = [1, 1, 1]
>sampler selecting 3 from 3 = [2, 2, 2]
>sampler selecting 2 from 5 = [3, 2]
>sampler selecting 4 from 5 = [4, 1, 0, 1]
>sampler selecting 1 from 5 = [4]
>sampler selecting 2 from 3 = [2, 2]
>sampler selecting 4 from 5 = [3, 4, 0, 2]
>sampler selecting 1 from 5 = [2]
>sampler selecting 3 from 3 = [1, 1, 1]
>sampler selecting 3 from 5 = [1, 3, 3]
>sampler selecting 5 from 5 = [3, 2, 2, 1, 1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 1 from 5 = [1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 3 from 3 = [2, 1, 2]
>sampler selecting 2 from 5 = [4, 2]
>sampler selecting 4 from 5 = [2, 4, 2, 3]
>sampler selecting 3 from 5 = [3, 2, 1]
generation =  0
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.459110310856
| | |-finished  1  forest. fitness = 0.685349142255
| | |-MSE =  0.452496380132
| | |-finished  2  forest. fitness = 0.688469874127
| | |-MSE =  0.437186930313
| | |-finished  3  forest. fitness = 0.695803711339
| | |-MSE =  0.45777232553
| | |-finished  4  forest. fitness = 0.685978175389
| | |-MSE =  0.558807520239
| | |-finished  5  forest. fitness = 0.641516022355
| | |-MSE =  0.518791038016
| | |-finished  6  forest. fitness = 0.658418422923
| | |-MSE =  0.454428429063
| | |-finished  7  forest. fitness = 0.687555317276
| | |-MSE =  0.48137277447
| | |-finished  8  forest. fitness = 0.675049533267
| | |-MSE =  0.463294339892
| | |-finished  9  forest. fitness = 0.683389508685
| | |-MSE =  0.647687963246
| | |-finished  10  forest. fitness = 0.606911030672
| | |-MSE =  0.582359118108
| | |-finished  12  forest. fitness = 0.63196779325
| | |-MSE =  0.547539537927
| | |-finished  13  forest. fitness = 0.646187044332
| | |-MSE =  0.430835744804
| | |-finished  13  forest. fitness = 0.698892240868
| | |-MSE =  0.580878218932
| | |-finished  14  forest. fitness = 0.632559793679
| | |-MSE =  0.576320505965
| | |-finished  15  forest. fitness = 0.634388752932
| | |-MSE =  0.517772109484
| | |-finished  16  forest. fitness = 0.658860440083
| | |-MSE =  0.451765757552
| | |-finished  17  forest. fitness = 0.68881635677
| | |-MSE =  0.433757580043
| | |-finished  18  forest. fitness = 0.697467977795
| | |-MSE =  0.563896719109
| | |-finished  19  forest. fitness = 0.639428414793
| | |-MSE =  0.433824944349
| | |-finished  20  forest. fitness = 0.697435209187
avg =  0.666722238099 max =  0.698892240868
|-spawn
selected for crossover -> 0.63196779325 0.634388752932
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.685978175389 0.646187044332
>sampler distinct selecting 1 from 6 = [5]
selected for crossover -> 0.687555317276 0.658860440083
>sampler distinct selecting 2 from 3 = [1, 1]
selected for crossover -> 0.697435209187 0.641516022355
>sampler distinct selecting 4 from 6 = [0, 0, 1, 0]
selected for crossover -> 0.606911030672 0.639428414793
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.63196779325 0.675049533267
>sampler distinct selecting 1 from 6 = [3]
selected for crossover -> 0.697467977795 0.646187044332
>sampler distinct selecting 4 from 5 = [3, 0, 2, 1]
selected for crossover -> 0.68881635677 0.63196779325
>sampler distinct selecting 3 from 6 = [2, 0, 1]
selected for crossover -> 0.63196779325 0.687555317276
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.658418422923 0.658860440083
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.63196779325 0.606911030672
>sampler distinct selecting 3 from 6 = [4, 0, 3]
selected for crossover -> 0.698892240868 0.688469874127
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.695803711339 0.658860440083
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.68881635677 0.606911030672
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.639428414793 0.658418422923
>sampler distinct selecting 4 from 6 = [0, 0, 1, 0]
selected for crossover -> 0.658860440083 0.632559793679
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.697467977795 0.68881635677
>sampler distinct selecting 3 from 5 = [0, 1, 0]
selected for crossover -> 0.634388752932 0.641516022355
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.675049533267 0.658860440083
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.688469874127 0.646187044332
>sampler distinct selecting 2 from 5 = [3, 0]
|- mutate
>sampler selecting 2 from 3 = [2, 1]
>sampler selecting 3 from 5 = [0, 1, 3]
>sampler selecting 4 from 5 = [3, 0, 4, 2]
generation =  1
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.462333597877
| | |-finished  1  forest. fitness = 0.683838490377
| | |-MSE =  0.44048030287
| | |-finished  2  forest. fitness = 0.694212894135
| | |-MSE =  0.46685541866
| | |-finished  3  forest. fitness = 0.681730446831
| | |-MSE =  0.476492812698
| | |-finished  4  forest. fitness = 0.677280641937
| | |-MSE =  0.458452805929
| | |-finished  5  forest. fitness = 0.685658113814
| | |-MSE =  0.455830745969
| | |-finished  6  forest. fitness = 0.686893035313
| | |-MSE =  0.460178190077
| | |-finished  7  forest. fitness = 0.684847922531
| | |-MSE =  0.440722927245
| | |-finished  8  forest. fitness = 0.694095985487
| | |-MSE =  0.50332478648
| | |-finished  9  forest. fitness = 0.665192251863
| | |-MSE =  0.490465091803
| | |-finished  10  forest. fitness = 0.670931513593
| | |-MSE =  0.544782205024
| | |-finished  11  forest. fitness = 0.647340444982
| | |-MSE =  0.451645995659
| | |-finished  12  forest. fitness = 0.68887318464
| | |-MSE =  0.588902363646
| | |-finished  13  forest. fitness = 0.629365291965
| | |-MSE =  0.52295455521
| | |-finished  14  forest. fitness = 0.656618410956
| | |-MSE =  0.614958133566
| | |-finished  15  forest. fitness = 0.619211098551
| | |-MSE =  0.462436963665
| | |-finished  16  forest. fitness = 0.683790156325
| | |-MSE =  0.459129296158
| | |-finished  17  forest. fitness = 0.685340224909
| | |-MSE =  0.453989357596
| | |-finished  18  forest. fitness = 0.687762943226
| | |-MSE =  0.46532417814
| | |-finished  19  forest. fitness = 0.682442844333
| | |-MSE =  0.655416728235
| | |-finished  20  forest. fitness = 0.604077500815
avg =  0.670475169829 max =  0.694212894135
|-spawn
selected for crossover -> 0.68887318464 0.686893035313
>sampler distinct selecting 3 from 4 = [2, 1, 0]
selected for crossover -> 0.683838490377 0.629365291965
>sampler distinct selecting 3 from 5 = [4, 2, 0]
selected for crossover -> 0.683790156325 0.694095985487
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.670931513593 0.685340224909
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.604077500815 0.665192251863
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.604077500815 0.677280641937
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.647340444982 0.677280641937
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.684847922531 0.694095985487
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.685340224909 0.682442844333
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.685658113814 0.685340224909
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.694212894135 0.683790156325
>sampler distinct selecting 3 from 6 = [1, 2, 3]
selected for crossover -> 0.687762943226 0.694212894135
>sampler distinct selecting 3 from 5 = [2, 2, 0]
selected for crossover -> 0.656618410956 0.619211098551
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.604077500815 0.682442844333
>sampler distinct selecting 4 from 4 = [1, 1, 0, 0]
selected for crossover -> 0.68887318464 0.685658113814
>sampler distinct selecting 4 from 4 = [1, 0, 1, 0]
selected for crossover -> 0.687762943226 0.694212894135
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.686893035313 0.677280641937
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.687762943226 0.677280641937
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.687762943226 0.68887318464
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.683838490377 0.685340224909
>sampler distinct selecting 2 from 3 = [0, 0]
|- mutate
>sampler selecting 1 from 5 = [3]
generation =  2
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.46244913334
| | |-finished  1  forest. fitness = 0.68378446621
| | |-MSE =  0.457766414142
| | |-finished  2  forest. fitness = 0.685980957099
| | |-MSE =  0.44657670666
| | |-finished  3  forest. fitness = 0.691287226869
| | |-MSE =  0.435811360782
| | |-finished  4  forest. fitness = 0.69647032146
| | |-MSE =  0.446407693298
| | |-finished  5  forest. fitness = 0.691368004079
| | |-MSE =  0.447351727979
| | |-finished  6  forest. fitness = 0.690917059529
| | |-MSE =  0.441812307933
| | |-finished  7  forest. fitness = 0.693571551927
| | |-MSE =  0.454033579699
| | |-finished  8  forest. fitness = 0.687742026018
| | |-MSE =  0.462228804019
| | |-finished  9  forest. fitness = 0.683887499173
| | |-MSE =  0.639355659007
| | |-finished  10  forest. fitness = 0.609995759313
| | |-MSE =  0.437292408986
| | |-finished  12  forest. fitness = 0.695752648346
| | |-MSE =  0.577681356938
| | |-finished  12  forest. fitness = 0.633841552099
| | |-MSE =  0.458547536632
| | |-finished  13  forest. fitness = 0.68561358124
| | |-MSE =  0.496140932622
| | |-finished  14  forest. fitness = 0.668386231668
| | |-MSE =  0.567270419714
| | |-finished  15  forest. fitness = 0.638051983513
| | |-MSE =  0.450313457878
| | |-finished  16  forest. fitness = 0.689506116466
| | |-MSE =  0.461256088202
| | |-finished  17  forest. fitness = 0.684342743256
| | |-MSE =  0.462481521736
| | |-finished  18  forest. fitness = 0.683769322988
| | |-MSE =  0.443982007155
| | |-finished  19  forest. fitness = 0.69252940483
| | |-MSE =  0.449012176118
| | |-finished  20  forest. fitness = 0.690125325709
avg =  0.67884618909 max =  0.69647032146
|-spawn
selected for crossover -> 0.683769322988 0.695752648346
>sampler distinct selecting 3 from 3 = [1, 1, 0]
selected for crossover -> 0.69647032146 0.68378446621
>sampler distinct selecting 2 from 7 = [3, 0]
selected for crossover -> 0.633841552099 0.69647032146
>sampler distinct selecting 1 from 7 = [6]
selected for crossover -> 0.684342743256 0.693571551927
>sampler distinct selecting 3 from 4 = [3, 0, 1]
selected for crossover -> 0.633841552099 0.695752648346
>sampler distinct selecting 3 from 5 = [3, 3, 0]
selected for crossover -> 0.68561358124 0.68378446621
>sampler distinct selecting 4 from 4 = [3, 0, 1, 0]
selected for crossover -> 0.68561358124 0.69647032146
>sampler distinct selecting 2 from 5 = [1, 2]
selected for crossover -> 0.683887499173 0.683769322988
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.685980957099 0.689506116466
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.69647032146 0.695752648346
>sampler distinct selecting 5 from 6 = [4, 1, 1, 1, 0]
selected for crossover -> 0.695752648346 0.683769322988
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.638051983513 0.68378446621
>sampler distinct selecting 3 from 5 = [1, 3, 2]
selected for crossover -> 0.69252940483 0.69647032146
>sampler distinct selecting 4 from 5 = [2, 0, 1, 0]
selected for crossover -> 0.69252940483 0.683769322988
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.695752648346 0.68561358124
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.691368004079 0.633841552099
>sampler distinct selecting 2 from 6 = [1, 0]
selected for crossover -> 0.691368004079 0.691287226869
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.683769322988 0.609995759313
>sampler distinct selecting 3 from 5 = [0, 2, 1]
selected for crossover -> 0.68561358124 0.638051983513
>sampler distinct selecting 2 from 3 = [1, 1]
selected for crossover -> 0.690917059529 0.68561358124
>sampler distinct selecting 2 from 3 = [1, 1]
|- mutate
>sampler selecting 3 from 5 = [2, 0, 1]
>sampler selecting 3 from 5 = [4, 3, 0]
generation =  3
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.422736866467
| | |-finished  1  forest. fitness = 0.702870659761
| | |-MSE =  0.423346201307
| | |-finished  2  forest. fitness = 0.702569760668
| | |-MSE =  0.464054008546
| | |-finished  3  forest. fitness = 0.683034911392
| | |-MSE =  0.45342210004
| | |-finished  4  forest. fitness = 0.688031370909
| | |-MSE =  0.451311639818
| | |-finished  5  forest. fitness = 0.68903188851
| | |-MSE =  0.45035807748
| | |-finished  6  forest. fitness = 0.689484904126
| | |-MSE =  0.456553482732
| | |-finished  7  forest. fitness = 0.686552201382
| | |-MSE =  0.447677846432
| | |-finished  8  forest. fitness = 0.690761416613
| | |-MSE =  0.439127437689
| | |-finished  9  forest. fitness = 0.694865495446
| | |-MSE =  0.453102908903
| | |-finished  10  forest. fitness = 0.688182505088
| | |-MSE =  0.47393520426
| | |-finished  11  forest. fitness = 0.678455875882
| | |-MSE =  0.558723211343
| | |-finished  12  forest. fitness = 0.641550720951
| | |-MSE =  0.432532099843
| | |-finished  13  forest. fitness = 0.698064636813
| | |-MSE =  0.426748335121
| | |-finished  14  forest. fitness = 0.700894457266
| | |-MSE =  0.448831285057
| | |-finished  15  forest. fitness = 0.690211489988
| | |-MSE =  0.42702477982
| | |-finished  16  forest. fitness = 0.700758679275
| | |-MSE =  0.433615322101
| | |-finished  17  forest. fitness = 0.697537187684
| | |-MSE =  0.463289921393
| | |-finished  18  forest. fitness = 0.683391572224
| | |-MSE =  0.470388136149
| | |-finished  19  forest. fitness = 0.680092538436
| | |-MSE =  0.656476323147
| | |-finished  20  forest. fitness = 0.603691091763
avg =  0.684501668209 max =  0.702870659761
|-spawn
selected for crossover -> 0.690211489988 0.683034911392
>sampler distinct selecting 3 from 7 = [0, 1, 2]
selected for crossover -> 0.688031370909 0.688182505088
>sampler distinct selecting 3 from 5 = [1, 0, 0]
selected for crossover -> 0.641550720951 0.678455875882
>sampler distinct selecting 1 from 6 = [3]
selected for crossover -> 0.68903188851 0.641550720951
>sampler distinct selecting 5 from 7 = [1, 0, 3, 2, 0]
selected for crossover -> 0.683034911392 0.68903188851
>sampler distinct selecting 5 from 7 = [3, 1, 1, 0, 0]
selected for crossover -> 0.690211489988 0.683034911392
>sampler distinct selecting 4 from 7 = [2, 2, 0, 0]
selected for crossover -> 0.697537187684 0.686552201382
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.678455875882 0.680092538436
>sampler distinct selecting 2 from 8 = [7, 1]
selected for crossover -> 0.690211489988 0.694865495446
>sampler distinct selecting 3 from 5 = [0, 2, 0]
selected for crossover -> 0.68903188851 0.700758679275
>sampler distinct selecting 4 from 5 = [3, 0, 0, 0]
selected for crossover -> 0.688031370909 0.678455875882
>sampler distinct selecting 3 from 5 = [1, 0, 2]
selected for crossover -> 0.694865495446 0.700894457266
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.694865495446 0.683034911392
>sampler distinct selecting 3 from 4 = [3, 0, 0]
selected for crossover -> 0.641550720951 0.690761416613
>sampler distinct selecting 4 from 5 = [2, 0, 0, 1]
selected for crossover -> 0.68903188851 0.686552201382
>sampler distinct selecting 5 from 5 = [2, 1, 0, 0, 0]
selected for crossover -> 0.700894457266 0.678455875882
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.689484904126 0.678455875882
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.683034911392 0.690761416613
>sampler distinct selecting 2 from 5 = [3, 3]
selected for crossover -> 0.700758679275 0.702870659761
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.68903188851 0.698064636813
>sampler distinct selecting 3 from 6 = [3, 2, 2]
|- mutate
>sampler selecting 2 from 5 = [3, 1]
generation =  4
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.424385240242
| | |-finished  1  forest. fitness = 0.702057260738
| | |-MSE =  0.456495534427
| | |-finished  2  forest. fitness = 0.686579516629
| | |-MSE =  0.457952923868
| | |-finished  3  forest. fitness = 0.685893202469
| | |-MSE =  0.439715033213
| | |-finished  4  forest. fitness = 0.694581897758
| | |-MSE =  0.468724449483
| | |-finished  5  forest. fitness = 0.680862908187
| | |-MSE =  0.436456157712
| | |-finished  6  forest. fitness = 0.696157689625
| | |-MSE =  0.454259226957
| | |-finished  7  forest. fitness = 0.687635313886
| | |-MSE =  0.470491132312
| | |-finished  8  forest. fitness = 0.680044903384
| | |-MSE =  0.454376513517
| | |-finished  9  forest. fitness = 0.687579860309
| | |-MSE =  0.460239820646
| | |-finished  10  forest. fitness = 0.684819017987
| | |-MSE =  0.440664873489
| | |-finished  11  forest. fitness = 0.694123955128
| | |-MSE =  0.458714828299
| | |-finished  12  forest. fitness = 0.685534952137
| | |-MSE =  0.432861854454
| | |-finished  13  forest. fitness = 0.697903986272
| | |-MSE =  0.439099584843
| | |-finished  15  forest. fitness = 0.694878944121
| | |-MSE =  0.460528606655
| | |-finished  15  forest. fitness = 0.684683610744
| | |-MSE =  0.469287841266
| | |-finished  16  forest. fitness = 0.680601834381
| | |-MSE =  0.619441095456
| | |-finished  17  forest. fitness = 0.61749698881
| | |-MSE =  0.453645992556
| | |-finished  18  forest. fitness = 0.68792539939
| | |-MSE =  0.480274185372
| | |-finished  19  forest. fitness = 0.675550522925
| | |-MSE =  0.447942512661
| | |-finished  20  forest. fitness = 0.690635153852
avg =  0.684777345937 max =  0.702057260738
|-spawn
selected for crossover -> 0.68792539939 0.697903986272
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.687579860309 0.68792539939
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.697903986272 0.675550522925
>sampler distinct selecting 4 from 6 = [3, 3, 0, 0]
selected for crossover -> 0.675550522925 0.687579860309
>sampler distinct selecting 3 from 6 = [3, 3, 0]
selected for crossover -> 0.684819017987 0.702057260738
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.687635313886 0.687579860309
>sampler distinct selecting 2 from 7 = [5, 1]
selected for crossover -> 0.694878944121 0.697903986272
>sampler distinct selecting 4 from 5 = [1, 1, 2, 0]
selected for crossover -> 0.68792539939 0.694581897758
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.702057260738 0.68792539939
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.694878944121 0.697903986272
>sampler distinct selecting 2 from 5 = [0, 1]
selected for crossover -> 0.687579860309 0.680601834381
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.685534952137 0.680044903384
>sampler distinct selecting 4 from 6 = [3, 1, 3, 1]
selected for crossover -> 0.702057260738 0.685893202469
>sampler distinct selecting 2 from 3 = [2, 0]
selected for crossover -> 0.696157689625 0.61749698881
>sampler distinct selecting 3 from 9 = [6, 4, 3]
selected for crossover -> 0.687579860309 0.68792539939
>sampler distinct selecting 3 from 5 = [0, 0, 0]
selected for crossover -> 0.687635313886 0.690635153852
>sampler distinct selecting 2 from 7 = [3, 0]
selected for crossover -> 0.694878944121 0.680601834381
>sampler distinct selecting 4 from 5 = [0, 0, 0, 0]
selected for crossover -> 0.684683610744 0.685893202469
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.68792539939 0.687635313886
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.690635153852 0.684683610744
>sampler distinct selecting 5 from 7 = [0, 0, 3, 2, 0]
|- mutate
>sampler selecting 1 from 3 = [1]
>sampler selecting 3 from 5 = [3, 3, 2]
generation =  5
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.510787492047
| | |-finished  1  forest. fitness = 0.661906459554
| | |-MSE =  0.456847932778
| | |-finished  2  forest. fitness = 0.686413439248
| | |-MSE =  0.461661475509
| | |-finished  3  forest. fitness = 0.684152942905
| | |-MSE =  0.452166785506
| | |-finished  4  forest. fitness = 0.688626134395
| | |-MSE =  0.460953600252
| | |-finished  5  forest. fitness = 0.684484435253
| | |-MSE =  0.465743933982
| | |-finished  6  forest. fitness = 0.68224740817
| | |-MSE =  0.449812210874
| | |-finished  7  forest. fitness = 0.689744501046
| | |-MSE =  0.459417661985
| | |-finished  8  forest. fitness = 0.685204808773
| | |-MSE =  0.465460423533
| | |-finished  9  forest. fitness = 0.682379396906
| | |-MSE =  0.456017579443
| | |-finished  10  forest. fitness = 0.686804894473
| | |-MSE =  0.451444342552
| | |-finished  11  forest. fitness = 0.688968891664
| | |-MSE =  0.453128933577
| | |-finished  12  forest. fitness = 0.688170180149
| | |-MSE =  0.445454780768
| | |-finished  13  forest. fitness = 0.691823786746
| | |-MSE =  0.456949036106
| | |-finished  14  forest. fitness = 0.686365806365
| | |-MSE =  0.447528498594
| | |-finished  15  forest. fitness = 0.690832685485
| | |-MSE =  0.451619823633
| | |-finished  16  forest. fitness = 0.688885604702
| | |-MSE =  0.445353576331
| | |-finished  17  forest. fitness = 0.69187222862
| | |-MSE =  0.446009260731
| | |-finished  18  forest. fitness = 0.691558503225
| | |-MSE =  0.460166280383
| | |-finished  19  forest. fitness = 0.684853508422
| | |-MSE =  0.448570542345
| | |-finished  20  forest. fitness = 0.690335728063
avg =  0.686281567208 max =  0.69187222862
|-spawn
selected for crossover -> 0.688968891664 0.689744501046
>sampler distinct selecting 3 from 5 = [2, 0, 1]
selected for crossover -> 0.691823786746 0.69187222862
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.686365806365 0.688885604702
>sampler distinct selecting 5 from 6 = [1, 3, 3, 2, 0]
selected for crossover -> 0.690832685485 0.688968891664
>sampler distinct selecting 3 from 6 = [4, 0, 0]
selected for crossover -> 0.688885604702 0.691558503225
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.688968891664 0.684152942905
>sampler distinct selecting 3 from 5 = [1, 2, 0]
selected for crossover -> 0.690832685485 0.686365806365
>sampler distinct selecting 3 from 8 = [6, 2, 3]
selected for crossover -> 0.684152942905 0.69187222862
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.691823786746 0.684853508422
>sampler distinct selecting 2 from 5 = [3, 0]
selected for crossover -> 0.691823786746 0.690335728063
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.68224740817 0.688170180149
>sampler distinct selecting 5 from 6 = [2, 0, 0, 0, 1]
selected for crossover -> 0.661906459554 0.689744501046
>sampler distinct selecting 2 from 6 = [2, 1]
selected for crossover -> 0.686413439248 0.690832685485
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.661906459554 0.686804894473
>sampler distinct selecting 3 from 7 = [4, 4, 2]
selected for crossover -> 0.686365806365 0.682379396906
>sampler distinct selecting 5 from 8 = [3, 4, 0, 1, 1]
selected for crossover -> 0.684484435253 0.686365806365
>sampler distinct selecting 3 from 6 = [0, 1, 1]
selected for crossover -> 0.68224740817 0.688885604702
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.688170180149 0.684853508422
>sampler distinct selecting 2 from 8 = [7, 0]
selected for crossover -> 0.688968891664 0.688626134395
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.684152942905 0.685204808773
>sampler distinct selecting 2 from 4 = [1, 0]
|- mutate
>sampler selecting 1 from 5 = [1]
generation =  6
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.480114006489
| | |-finished  1  forest. fitness = 0.675623631434
| | |-MSE =  0.458442251946
| | |-finished  2  forest. fitness = 0.685663075563
| | |-MSE =  0.469393383845
| | |-finished  3  forest. fitness = 0.68055294858
| | |-MSE =  0.461663862616
| | |-finished  4  forest. fitness = 0.684151825585
| | |-MSE =  0.449652722731
| | |-finished  5  forest. fitness = 0.689820385475
| | |-MSE =  0.471189939768
| | |-finished  6  forest. fitness = 0.679721885645
| | |-MSE =  0.455969527579
| | |-finished  7  forest. fitness = 0.686827561331
| | |-MSE =  0.548648294267
| | |-finished  8  forest. fitness = 0.645724406052
| | |-MSE =  0.46834879355
| | |-finished  9  forest. fitness = 0.681037097175
| | |-MSE =  0.631830212937
| | |-finished  10  forest. fitness = 0.612808852338
| | |-MSE =  0.4661007449
| | |-finished  11  forest. fitness = 0.682081366836
| | |-MSE =  0.443237649677
| | |-finished  12  forest. fitness = 0.692886580546
| | |-MSE =  0.467516137969
| | |-finished  13  forest. fitness = 0.681423511556
| | |-MSE =  0.436678404445
| | |-finished  14  forest. fitness = 0.696049997624
| | |-MSE =  0.431941403739
| | |-finished  15  forest. fitness = 0.69835259836
| | |-MSE =  0.442833358311
| | |-finished  16  forest. fitness = 0.693080731909
| | |-MSE =  0.466310057258
| | |-finished  17  forest. fitness = 0.681984001303
| | |-MSE =  0.453688392352
| | |-finished  18  forest. fitness = 0.687905334638
| | |-MSE =  0.448757399612
| | |-finished  19  forest. fitness = 0.690246690211
| | |-MSE =  0.464582818393
| | |-finished  20  forest. fitness = 0.682788291274
avg =  0.680436538672 max =  0.69835259836
|-spawn
selected for crossover -> 0.645724406052 0.693080731909
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.684151825585 0.681423511556
>sampler distinct selecting 3 from 6 = [2, 3, 1]
selected for crossover -> 0.68055294858 0.690246690211
>sampler distinct selecting 5 from 7 = [1, 2, 0, 3, 0]
selected for crossover -> 0.645724406052 0.681037097175
>sampler distinct selecting 3 from 5 = [1, 2, 0]
selected for crossover -> 0.679721885645 0.681037097175
>sampler distinct selecting 2 from 6 = [1, 4]
selected for crossover -> 0.675623631434 0.679721885645
>sampler distinct selecting 1 from 8 = [0]
selected for crossover -> 0.686827561331 0.681984001303
>sampler distinct selecting 3 from 4 = [0, 1, 1]
selected for crossover -> 0.696049997624 0.686827561331
>sampler distinct selecting 4 from 4 = [3, 1, 0, 0]
selected for crossover -> 0.675623631434 0.690246690211
>sampler distinct selecting 1 from 7 = [4]
selected for crossover -> 0.684151825585 0.682081366836
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.686827561331 0.690246690211
>sampler distinct selecting 2 from 5 = [0, 1]
selected for crossover -> 0.684151825585 0.686827561331
>sampler distinct selecting 2 from 6 = [0, 0]
selected for crossover -> 0.681037097175 0.68055294858
>sampler distinct selecting 2 from 8 = [3, 4]
selected for crossover -> 0.685663075563 0.69835259836
>sampler distinct selecting 1 from 7 = [3]
selected for crossover -> 0.68055294858 0.684151825585
>sampler distinct selecting 3 from 8 = [5, 0, 3]
selected for crossover -> 0.692886580546 0.679721885645
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.682081366836 0.685663075563
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.681037097175 0.675623631434
>sampler distinct selecting 1 from 8 = [2]
selected for crossover -> 0.68055294858 0.645724406052
>sampler distinct selecting 3 from 7 = [0, 3, 1]
selected for crossover -> 0.689820385475 0.69835259836
>sampler distinct selecting 4 from 8 = [2, 4, 5, 2]
|- mutate
generation =  7
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.458108627944
| | |-finished  1  forest. fitness = 0.685819959388
| | |-MSE =  0.45253704602
| | |-finished  2  forest. fitness = 0.688450599411
| | |-MSE =  0.459416751649
| | |-finished  3  forest. fitness = 0.685205236181
| | |-MSE =  0.467708429969
| | |-finished  4  forest. fitness = 0.681334234771
| | |-MSE =  0.567061582428
| | |-finished  5  forest. fitness = 0.638137014661
| | |-MSE =  0.45675236271
| | |-finished  6  forest. fitness = 0.686458471322
| | |-MSE =  0.460583787572
| | |-finished  7  forest. fitness = 0.684657743369
| | |-MSE =  0.454996792981
| | |-finished  8  forest. fitness = 0.687286738242
| | |-MSE =  0.462286105381
| | |-finished  9  forest. fitness = 0.683860700256
| | |-MSE =  0.473189787545
| | |-finished  10  forest. fitness = 0.67879916658
| | |-MSE =  0.456144136496
| | |-finished  11  forest. fitness = 0.686745202578
| | |-MSE =  0.452856131174
| | |-finished  12  forest. fitness = 0.688299397678
| | |-MSE =  0.445682084519
| | |-finished  13  forest. fitness = 0.691715011695
| | |-MSE =  0.589654062507
| | |-finished  14  forest. fitness = 0.629067684338
| | |-MSE =  0.453763211602
| | |-finished  15  forest. fitness = 0.687869930962
| | |-MSE =  0.463206229204
| | |-finished  16  forest. fitness = 0.683430660724
| | |-MSE =  0.443702228353
| | |-finished  17  forest. fitness = 0.692663611901
| | |-MSE =  0.465743824696
| | |-finished  18  forest. fitness = 0.682247459038
| | |-MSE =  0.465656943915
| | |-finished  19  forest. fitness = 0.682287901102
| | |-MSE =  0.486569820174
| | |-finished  20  forest. fitness = 0.672689561183
avg =  0.679851314269 max =  0.692663611901
|-spawn
selected for crossover -> 0.683860700256 0.681334234771
>sampler distinct selecting 3 from 3 = [2, 0, 0]
selected for crossover -> 0.683860700256 0.692663611901
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.629067684338 0.683430660724
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.681334234771 0.685205236181
>sampler distinct selecting 3 from 4 = [2, 0, 1]
selected for crossover -> 0.688450599411 0.638137014661
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.683430660724 0.681334234771
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.683860700256 0.688450599411
>sampler distinct selecting 3 from 4 = [0, 0, 1]
selected for crossover -> 0.672689561183 0.688450599411
>sampler distinct selecting 4 from 4 = [1, 0, 0, 0]
selected for crossover -> 0.682287901102 0.685819959388
>sampler distinct selecting 3 from 7 = [6, 2, 0]
selected for crossover -> 0.682287901102 0.629067684338
>sampler distinct selecting 2 from 7 = [4, 1]
selected for crossover -> 0.682247459038 0.691715011695
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.629067684338 0.67879916658
>sampler distinct selecting 2 from 8 = [0, 2]
selected for crossover -> 0.672689561183 0.67879916658
>sampler distinct selecting 3 from 6 = [2, 3, 0]
selected for crossover -> 0.682247459038 0.686458471322
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.686745202578 0.682287901102
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.682247459038 0.681334234771
>sampler distinct selecting 2 from 3 = [0, 1]
selected for crossover -> 0.686458471322 0.687286738242
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.688299397678 0.683430660724
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.683860700256 0.688299397678
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.688299397678 0.672689561183
>sampler distinct selecting 4 from 4 = [2, 0, 0, 0]
|- mutate
>sampler selecting 5 from 5 = [3, 4, 3, 2, 1]
generation =  8
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.454774027264
| | |-finished  1  forest. fitness = 0.687391980651
| | |-MSE =  0.547666222554
| | |-finished  2  forest. fitness = 0.646134150521
| | |-MSE =  0.446244790201
| | |-finished  3  forest. fitness = 0.691445878855
| | |-MSE =  0.612626523593
| | |-finished  4  forest. fitness = 0.620106382581
| | |-MSE =  0.560112844064
| | |-finished  5  forest. fitness = 0.640979275188
| | |-MSE =  0.486737699934
| | |-finished  6  forest. fitness = 0.672613602281
| | |-MSE =  0.466230821621
| | |-finished  7  forest. fitness = 0.682020855962
| | |-MSE =  0.551487478568
| | |-finished  8  forest. fitness = 0.644542746116
| | |-MSE =  0.566770296071
| | |-finished  9  forest. fitness = 0.638255654009
| | |-MSE =  0.451793847915
| | |-finished  10  forest. fitness = 0.68880302905
| | |-MSE =  0.581023592564
| | |-finished  11  forest. fitness = 0.632501630402
| | |-MSE =  0.633897437619
| | |-finished  12  forest. fitness = 0.61203351996
| | |-MSE =  0.476239892887
| | |-finished  13  forest. fitness = 0.677396678425
| | |-MSE =  0.565096224768
| | |-finished  14  forest. fitness = 0.638938350355
| | |-MSE =  0.602175054916
| | |-finished  15  forest. fitness = 0.624151522601
| | |-MSE =  0.60908104646
| | |-finished  16  forest. fitness = 0.621472735758
| | |-MSE =  0.467640135322
| | |-finished  17  forest. fitness = 0.681365939737
| | |-MSE =  0.458613902035
| | |-finished  18  forest. fitness = 0.685582386542
| | |-MSE =  0.442954026845
| | |-finished  19  forest. fitness = 0.69302277231
| | |-MSE =  0.582464063489
| | |-finished  20  forest. fitness = 0.631925882598
avg =  0.655534248695 max =  0.69302277231
|-spawn
selected for crossover -> 0.638255654009 0.621472735758
>sampler distinct selecting 2 from 6 = [3, 2]
selected for crossover -> 0.621472735758 0.682020855962
>sampler distinct selecting 3 from 6 = [1, 3, 2]
selected for crossover -> 0.681365939737 0.624151522601
>sampler distinct selecting 4 from 6 = [5, 3, 0, 1]
selected for crossover -> 0.61203351996 0.672613602281
>sampler distinct selecting 4 from 5 = [2, 2, 2, 0]
selected for crossover -> 0.682020855962 0.681365939737
>sampler distinct selecting 3 from 5 = [2, 3, 1]
selected for crossover -> 0.672613602281 0.691445878855
>sampler distinct selecting 4 from 4 = [3, 0, 0, 0]
selected for crossover -> 0.682020855962 0.61203351996
>sampler distinct selecting 3 from 7 = [0, 1, 1]
selected for crossover -> 0.632501630402 0.677396678425
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.631925882598 0.682020855962
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.644542746116 0.620106382581
>sampler distinct selecting 3 from 5 = [2, 2, 1]
selected for crossover -> 0.69302277231 0.640979275188
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.640979275188 0.638255654009
>sampler distinct selecting 4 from 4 = [2, 0, 0, 0]
selected for crossover -> 0.624151522601 0.638255654009
>sampler distinct selecting 4 from 7 = [2, 2, 0, 3]
selected for crossover -> 0.621472735758 0.69302277231
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.677396678425 0.61203351996
>sampler distinct selecting 4 from 6 = [0, 2, 2, 1]
selected for crossover -> 0.632501630402 0.638938350355
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.624151522601 0.687391980651
>sampler distinct selecting 2 from 5 = [1, 3]
selected for crossover -> 0.691445878855 0.672613602281
>sampler distinct selecting 3 from 4 = [2, 1, 0]
selected for crossover -> 0.640979275188 0.69302277231
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.620106382581 0.632501630402
>sampler distinct selecting 2 from 4 = [2, 0]
|- mutate
>sampler selecting 2 from 5 = [1, 3]
>sampler selecting 3 from 3 = [2, 1, 2]
>sampler selecting 2 from 5 = [3, 2]
>sampler selecting 3 from 5 = [1, 1, 3]
>sampler selecting 2 from 5 = [4, 2]
>sampler selecting 5 from 5 = [0, 2, 4, 3, 2]
generation =  9
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.458123559815
| | |-finished  1  forest. fitness = 0.685812936269
| | |-MSE =  0.444869862045
| | |-finished  2  forest. fitness = 0.692103853966
| | |-MSE =  0.45565975757
| | |-finished  3  forest. fitness = 0.686973720885
| | |-MSE =  0.52029646595
| | |-finished  4  forest. fitness = 0.657766443846
| | |-MSE =  0.573616997829
| | |-finished  5  forest. fitness = 0.63547864657
| | |-MSE =  0.650853184164
| | |-finished  6  forest. fitness = 0.605747385408
| | |-MSE =  0.60634653481
| | |-finished  7  forest. fitness = 0.622530679607
| | |-MSE =  0.472521149606
| | |-finished  8  forest. fitness = 0.679107393648
| | |-MSE =  0.653820786781
| | |-finished  9  forest. fitness = 0.604660437209
| | |-MSE =  0.572745277656
| | |-finished  10  forest. fitness = 0.635830871157
| | |-MSE =  0.451859933091
| | |-finished  11  forest. fitness = 0.688771676391
| | |-MSE =  0.637385223527
| | |-finished  12  forest. fitness = 0.610729830483
| | |-MSE =  0.448420232672
| | |-finished  13  forest. fitness = 0.690407367588
| | |-MSE =  0.446455328092
| | |-finished  14  forest. fitness = 0.691345235887
| | |-MSE =  0.464538129727
| | |-finished  15  forest. fitness = 0.682809125759
| | |-MSE =  0.459367340172
| | |-finished  16  forest. fitness = 0.685228435962
| | |-MSE =  0.659735501488
| | |-finished  17  forest. fitness = 0.602505639666
| | |-MSE =  0.629890303189
| | |-finished  18  forest. fitness = 0.613538222814
| | |-MSE =  0.646496798581
| | |-finished  19  forest. fitness = 0.607350102874
| | |-MSE =  0.581890695488
| | |-finished  20  forest. fitness = 0.632154928815
avg =  0.65054264674 max =  0.692103853966
|-spawn
selected for crossover -> 0.610729830483 0.679107393648
>sampler distinct selecting 5 from 6 = [1, 3, 0, 0, 0]
selected for crossover -> 0.682809125759 0.632154928815
>sampler distinct selecting 5 from 6 = [0, 3, 2, 0, 0]
selected for crossover -> 0.688771676391 0.605747385408
>sampler distinct selecting 3 from 7 = [3, 1, 3]
selected for crossover -> 0.691345235887 0.613538222814
>sampler distinct selecting 1 from 7 = [1]
selected for crossover -> 0.685812936269 0.686973720885
>sampler distinct selecting 4 from 4 = [2, 0, 0, 0]
selected for crossover -> 0.685812936269 0.688771676391
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.635830871157 0.604660437209
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.610729830483 0.682809125759
>sampler distinct selecting 2 from 6 = [1, 4]
selected for crossover -> 0.685228435962 0.604660437209
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.685228435962 0.657766443846
>sampler distinct selecting 4 from 6 = [4, 3, 0, 0]
selected for crossover -> 0.688771676391 0.632154928815
>sampler distinct selecting 2 from 7 = [5, 1]
selected for crossover -> 0.605747385408 0.685228435962
>sampler distinct selecting 2 from 6 = [0, 3]
selected for crossover -> 0.679107393648 0.691345235887
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.686973720885 0.691345235887
>sampler distinct selecting 3 from 7 = [5, 3, 0]
selected for crossover -> 0.610729830483 0.604660437209
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.690407367588 0.605747385408
>sampler distinct selecting 4 from 6 = [1, 2, 2, 1]
selected for crossover -> 0.682809125759 0.610729830483
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.682809125759 0.688771676391
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.690407367588 0.602505639666
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.679107393648 0.688771676391
>sampler distinct selecting 3 from 5 = [4, 1, 0]
|- mutate
generation =  10
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.454187649957
| | |-finished  1  forest. fitness = 0.687669160187
| | |-MSE =  0.457847853418
| | |-finished  2  forest. fitness = 0.68594263637
| | |-MSE =  0.453095555947
| | |-finished  3  forest. fitness = 0.68818598743
| | |-MSE =  0.465051414075
| | |-finished  4  forest. fitness = 0.682569901911
| | |-MSE =  0.590831795188
| | |-finished  5  forest. fitness = 0.628601969752
| | |-MSE =  0.434141191213
| | |-finished  6  forest. fitness = 0.697281415615
| | |-MSE =  0.441243230038
| | |-finished  7  forest. fitness = 0.6938454101
| | |-MSE =  0.421562938542
| | |-finished  8  forest. fitness = 0.70345109097
| | |-MSE =  0.451296775044
| | |-finished  9  forest. fitness = 0.689038945856
| | |-MSE =  0.457736342678
| | |-finished  10  forest. fitness = 0.685995108116
| | |-MSE =  0.419294665797
| | |-finished  11  forest. fitness = 0.704575324701
| | |-MSE =  0.44939734185
| | |-finished  12  forest. fitness = 0.689941930433
| | |-MSE =  0.5082254374
| | |-finished  13  forest. fitness = 0.663030854143
| | |-MSE =  0.420413556869
| | |-finished  14  forest. fitness = 0.704020315185
| | |-MSE =  0.443314741862
| | |-finished  15  forest. fitness = 0.692849571196
| | |-MSE =  0.449451533749
| | |-finished  16  forest. fitness = 0.689916134977
| | |-MSE =  0.431240860025
| | |-finished  17  forest. fitness = 0.698694418201
| | |-MSE =  0.441958858417
| | |-finished  18  forest. fitness = 0.693501062227
| | |-MSE =  0.427444138763
| | |-finished  19  forest. fitness = 0.700552808229
| | |-MSE =  0.439446337985
| | |-finished  20  forest. fitness = 0.69471155236
avg =  0.688718779898 max =  0.704575324701
|-spawn
selected for crossover -> 0.698694418201 0.628601969752
>sampler distinct selecting 6 from 6 = [0, 3, 0, 0, 0, 0]
selected for crossover -> 0.663030854143 0.697281415615
>sampler distinct selecting 3 from 7 = [5, 0, 3]
selected for crossover -> 0.6938454101 0.628601969752
>sampler distinct selecting 6 from 10 = [3, 7, 7, 3, 0, 0]
selected for crossover -> 0.68818598743 0.628601969752
>sampler distinct selecting 5 from 9 = [4, 2, 3, 4, 2]
selected for crossover -> 0.704020315185 0.663030854143
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.693501062227 0.689916134977
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.692849571196 0.68818598743
>sampler distinct selecting 3 from 8 = [2, 0, 1]
selected for crossover -> 0.704575324701 0.69471155236
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.700552808229 0.704575324701
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.704020315185 0.698694418201
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.685995108116 0.704020315185
>sampler distinct selecting 2 from 4 = [2, 2]
selected for crossover -> 0.693501062227 0.69471155236
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.663030854143 0.685995108116
>sampler distinct selecting 2 from 6 = [0, 4]
selected for crossover -> 0.685995108116 0.689941930433
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.704020315185 0.689916134977
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.689038945856 0.700552808229
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.689038945856 0.663030854143
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.689038945856 0.6938454101
>sampler distinct selecting 1 from 7 = [0]
selected for crossover -> 0.689916134977 0.69471155236
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.704575324701 0.689038945856
>sampler distinct selecting 1 from 3 = [0]
|- mutate
generation =  11
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.458378145928
| | |-finished  1  forest. fitness = 0.685693215297
| | |-MSE =  0.458053712615
| | |-finished  2  forest. fitness = 0.685845789732
| | |-MSE =  0.457812450357
| | |-finished  3  forest. fitness = 0.685959294527
| | |-MSE =  0.437971649918
| | |-finished  4  forest. fitness = 0.695424002314
| | |-MSE =  0.444897382732
| | |-finished  5  forest. fitness = 0.692090671594
| | |-MSE =  0.569707453854
| | |-finished  6  forest. fitness = 0.637061382072
| | |-MSE =  0.453124529603
| | |-finished  7  forest. fitness = 0.688172265782
| | |-MSE =  0.604130711643
| | |-finished  8  forest. fitness = 0.623390595755
| | |-MSE =  0.470707366947
| | |-finished  9  forest. fitness = 0.679944917986
| | |-MSE =  0.453623129545
| | |-finished  10  forest. fitness = 0.687936219282
| | |-MSE =  0.440356632143
| | |-finished  11  forest. fitness = 0.694272500077
| | |-MSE =  0.455841361339
| | |-finished  12  forest. fitness = 0.686888026783
| | |-MSE =  0.439910652416
| | |-finished  13  forest. fitness = 0.694487535266
| | |-MSE =  0.455828417825
| | |-finished  14  forest. fitness = 0.686894133784
| | |-MSE =  0.439276423888
| | |-finished  15  forest. fitness = 0.694793566686
| | |-MSE =  0.459415491271
| | |-finished  16  forest. fitness = 0.685205827937
| | |-MSE =  0.600746524493
| | |-finished  17  forest. fitness = 0.624708524866
| | |-MSE =  0.430815373472
| | |-finished  18  forest. fitness = 0.698902191394
| | |-MSE =  0.424935369979
| | |-finished  19  forest. fitness = 0.701786215058
| | |-MSE =  0.463008083516
| | |-finished  20  forest. fitness = 0.683523222645
avg =  0.680649004942 max =  0.701786215058
|-spawn
selected for crossover -> 0.623390595755 0.694793566686
>sampler distinct selecting 3 from 7 = [3, 4, 2]
selected for crossover -> 0.698902191394 0.679944917986
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.701786215058 0.685845789732
>sampler distinct selecting 3 from 5 = [1, 0, 2]
selected for crossover -> 0.679944917986 0.694793566686
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.637061382072 0.683523222645
>sampler distinct selecting 3 from 8 = [3, 3, 0]
selected for crossover -> 0.692090671594 0.685845789732
>sampler distinct selecting 4 from 5 = [0, 1, 1, 0]
selected for crossover -> 0.692090671594 0.701786215058
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.701786215058 0.695424002314
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.685205827937 0.623390595755
>sampler distinct selecting 1 from 7 = [5]
selected for crossover -> 0.694793566686 0.685693215297
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.685845789732 0.688172265782
>sampler distinct selecting 4 from 4 = [0, 1, 0, 0]
selected for crossover -> 0.695424002314 0.686894133784
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.694487535266 0.688172265782
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.701786215058 0.637061382072
>sampler distinct selecting 6 from 8 = [4, 0, 2, 2, 0, 0]
selected for crossover -> 0.698902191394 0.694487535266
>sampler distinct selecting 3 from 4 = [2, 2, 0]
selected for crossover -> 0.686894133784 0.694793566686
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.685205827937 0.694793566686
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.692090671594 0.701786215058
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.694272500077 0.685693215297
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.685959294527 0.698902191394
>sampler distinct selecting 1 from 3 = [2]
|- mutate
generation =  12
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.458723191996
| | |-finished  1  forest. fitness = 0.685531021572
| | |-MSE =  0.455918622118
| | |-finished  2  forest. fitness = 0.686851575911
| | |-MSE =  0.453583782494
| | |-finished  3  forest. fitness = 0.687954841024
| | |-MSE =  0.456761022719
| | |-finished  4  forest. fitness = 0.686454390531
| | |-MSE =  0.441354339762
| | |-finished  5  forest. fitness = 0.693791923619
| | |-MSE =  0.452101124463
| | |-finished  6  forest. fitness = 0.68865727266
| | |-MSE =  0.446803572519
| | |-finished  7  forest. fitness = 0.691178829659
| | |-MSE =  0.505864240312
| | |-finished  8  forest. fitness = 0.664070487385
| | |-MSE =  0.559073624373
| | |-finished  9  forest. fitness = 0.641406527804
| | |-MSE =  0.443854914032
| | |-finished  10  forest. fitness = 0.692590363673
| | |-MSE =  0.454671347204
| | |-finished  11  forest. fitness = 0.687440501198
| | |-MSE =  0.608536323717
| | |-finished  12  forest. fitness = 0.621683194377
| | |-MSE =  0.447788863038
| | |-finished  13  forest. fitness = 0.690708448953
| | |-MSE =  0.446700839295
| | |-finished  14  forest. fitness = 0.691227911699
| | |-MSE =  0.436491183574
| | |-finished  15  forest. fitness = 0.696140715261
| | |-MSE =  0.435820075156
| | |-finished  16  forest. fitness = 0.696466094397
| | |-MSE =  0.467464373066
| | |-finished  17  forest. fitness = 0.681447548815
| | |-MSE =  0.440390585218
| | |-finished  18  forest. fitness = 0.694256134595
| | |-MSE =  0.441339711042
| | |-finished  19  forest. fitness = 0.693798965184
| | |-MSE =  0.451064884976
| | |-finished  20  forest. fitness = 0.68914905898
avg =  0.683040290365 max =  0.696466094397
|-spawn
selected for crossover -> 0.681447548815 0.693791923619
>sampler distinct selecting 3 from 4 = [1, 0, 0]
selected for crossover -> 0.692590363673 0.685531021572
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.692590363673 0.687440501198
>sampler distinct selecting 4 from 5 = [1, 0, 0, 0]
selected for crossover -> 0.696140715261 0.686454390531
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.691178829659 0.681447548815
>sampler distinct selecting 3 from 6 = [5, 1, 2]
selected for crossover -> 0.693791923619 0.691227911699
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.696466094397 0.692590363673
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.68914905898 0.664070487385
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.685531021572 0.686454390531
>sampler distinct selecting 2 from 5 = [3, 2]
selected for crossover -> 0.664070487385 0.641406527804
>sampler distinct selecting 5 from 7 = [2, 1, 2, 0, 0]
selected for crossover -> 0.68865727266 0.692590363673
>sampler distinct selecting 2 from 5 = [0, 3]
selected for crossover -> 0.686851575911 0.696140715261
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.687440501198 0.694256134595
>sampler distinct selecting 2 from 6 = [0, 1]
selected for crossover -> 0.68865727266 0.692590363673
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.696140715261 0.68865727266
>sampler distinct selecting 4 from 4 = [3, 0, 0, 0]
selected for crossover -> 0.687954841024 0.685531021572
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.687954841024 0.690708448953
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.696140715261 0.681447548815
>sampler distinct selecting 4 from 4 = [1, 0, 0, 0]
selected for crossover -> 0.694256134595 0.693791923619
>sampler distinct selecting 3 from 4 = [1, 0, 0]
selected for crossover -> 0.691227911699 0.691178829659
>sampler distinct selecting 2 from 7 = [5, 3]
|- mutate
>sampler selecting 2 from 5 = [4, 0]
>sampler selecting 4 from 5 = [2, 3, 4, 0]
generation =  13
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.437619185969
| | |-finished  1  forest. fitness = 0.695594500797
| | |-MSE =  0.460336694348
| | |-finished  2  forest. fitness = 0.684773589454
| | |-MSE =  0.463594977956
| | |-finished  3  forest. fitness = 0.68324913317
| | |-MSE =  0.465635062476
| | |-finished  4  forest. fitness = 0.682298087432
| | |-MSE =  0.621764369117
| | |-finished  5  forest. fitness = 0.616612387744
| | |-MSE =  0.455510504258
| | |-finished  6  forest. fitness = 0.687044165655
| | |-MSE =  0.619546645416
| | |-finished  7  forest. fitness = 0.617456744967
| | |-MSE =  0.574176613283
| | |-finished  8  forest. fitness = 0.63525273566
| | |-MSE =  0.45093477346
| | |-finished  9  forest. fitness = 0.689210857918
| | |-MSE =  0.434251863691
| | |-finished  10  forest. fitness = 0.697227610656
| | |-MSE =  0.561045047588
| | |-finished  11  forest. fitness = 0.640596503954
| | |-MSE =  0.539673389171
| | |-finished  12  forest. fitness = 0.649488396067
| | |-MSE =  0.665145712595
| | |-finished  13  forest. fitness = 0.600548043595
| | |-MSE =  0.452360181433
| | |-finished  14  forest. fitness = 0.688534437107
| | |-MSE =  0.541443370065
| | |-finished  15  forest. fitness = 0.648742613203
| | |-MSE =  0.435289649525
| | |-finished  16  forest. fitness = 0.6967234804
| | |-MSE =  0.644419832629
| | |-finished  17  forest. fitness = 0.608117209582
| | |-MSE =  0.456222888649
| | |-finished  18  forest. fitness = 0.686708063577
| | |-MSE =  0.436698058284
| | |-finished  19  forest. fitness = 0.696040475752
| | |-MSE =  0.466453501472
| | |-finished  20  forest. fitness = 0.681917291613
avg =  0.664306816415 max =  0.697227610656
|-spawn
selected for crossover -> 0.682298087432 0.681917291613
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.697227610656 0.616612387744
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.684773589454 0.682298087432
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.684773589454 0.687044165655
>sampler distinct selecting 4 from 5 = [2, 3, 2, 0]
selected for crossover -> 0.697227610656 0.688534437107
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.697227610656 0.600548043595
>sampler distinct selecting 3 from 5 = [3, 2, 2]
selected for crossover -> 0.63525273566 0.681917291613
>sampler distinct selecting 3 from 3 = [1, 1, 0]
selected for crossover -> 0.616612387744 0.63525273566
>sampler distinct selecting 3 from 5 = [3, 0, 2]
selected for crossover -> 0.640596503954 0.616612387744
>sampler distinct selecting 4 from 5 = [2, 1, 0, 0]
selected for crossover -> 0.600548043595 0.681917291613
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.697227610656 0.684773589454
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.649488396067 0.681917291613
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.684773589454 0.689210857918
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.689210857918 0.608117209582
>sampler distinct selecting 4 from 6 = [3, 3, 0, 0]
selected for crossover -> 0.684773589454 0.640596503954
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.649488396067 0.688534437107
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.608117209582 0.686708063577
>sampler distinct selecting 6 from 7 = [5, 2, 1, 1, 0, 0]
selected for crossover -> 0.608117209582 0.68324913317
>sampler distinct selecting 3 from 8 = [2, 0, 4]
selected for crossover -> 0.6967234804 0.617456744967
>sampler distinct selecting 2 from 4 = [3, 0]
selected for crossover -> 0.689210857918 0.687044165655
>sampler distinct selecting 2 from 5 = [4, 0]
|- mutate
>sampler selecting 2 from 5 = [2, 2]
>sampler selecting 5 from 5 = [0, 3, 3, 0, 0]
generation =  14
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.458450828882
| | |-finished  1  forest. fitness = 0.685659043278
| | |-MSE =  0.457486941113
| | |-finished  2  forest. fitness = 0.686112493904
| | |-MSE =  0.457034234016
| | |-finished  3  forest. fitness = 0.686325672146
| | |-MSE =  0.536822819541
| | |-finished  4  forest. fitness = 0.650693097008
| | |-MSE =  0.474163386091
| | |-finished  5  forest. fitness = 0.678350859501
| | |-MSE =  0.583308303737
| | |-finished  6  forest. fitness = 0.631588931631
| | |-MSE =  0.551185570929
| | |-finished  7  forest. fitness = 0.644668193633
| | |-MSE =  0.49232178569
| | |-finished  8  forest. fitness = 0.670096764377
| | |-MSE =  0.500691453911
| | |-finished  9  forest. fitness = 0.666359495414
| | |-MSE =  0.586044304903
| | |-finished  10  forest. fitness = 0.630499410962
| | |-MSE =  0.485886254
| | |-finished  11  forest. fitness = 0.672999024864
| | |-MSE =  0.461661469103
| | |-finished  12  forest. fitness = 0.684152945903
| | |-MSE =  0.453489784069
| | |-finished  13  forest. fitness = 0.68799933165
| | |-MSE =  0.501267591282
| | |-finished  14  forest. fitness = 0.666103768447
| | |-MSE =  0.426681225941
| | |-finished  15  forest. fitness = 0.700927426406
| | |-MSE =  0.457968509782
| | |-finished  16  forest. fitness = 0.685885870161
| | |-MSE =  0.547061895692
| | |-finished  17  forest. fitness = 0.6463865491
| | |-MSE =  0.473568196485
| | |-finished  18  forest. fitness = 0.678624852508
| | |-MSE =  0.451423806186
| | |-finished  19  forest. fitness = 0.688978639966
| | |-MSE =  0.593290297262
| | |-finished  20  forest. fitness = 0.627632015156
avg =  0.668502219301 max =  0.700927426406
|-spawn
selected for crossover -> 0.6463865491 0.68799933165
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.700927426406 0.666103768447
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.688978639966 0.678350859501
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.685659043278 0.700927426406
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.670096764377 0.672999024864
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.700927426406 0.670096764377
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.686325672146 0.68799933165
>sampler distinct selecting 4 from 7 = [6, 0, 1, 0]
selected for crossover -> 0.68799933165 0.685659043278
>sampler distinct selecting 4 from 5 = [0, 1, 0, 1]
selected for crossover -> 0.666103768447 0.685885870161
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.672999024864 0.686112493904
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.686325672146 0.688978639966
>sampler distinct selecting 3 from 6 = [0, 0, 3]
selected for crossover -> 0.666103768447 0.630499410962
>sampler distinct selecting 1 from 6 = [5]
selected for crossover -> 0.68799933165 0.686325672146
>sampler distinct selecting 3 from 7 = [0, 0, 0]
selected for crossover -> 0.672999024864 0.686325672146
>sampler distinct selecting 5 from 6 = [0, 1, 0, 1, 0]
selected for crossover -> 0.685659043278 0.672999024864
>sampler distinct selecting 3 from 4 = [2, 0, 1]
selected for crossover -> 0.700927426406 0.688978639966
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.685885870161 0.686112493904
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.627632015156 0.678350859501
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.700927426406 0.631588931631
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.686325672146 0.678624852508
>sampler distinct selecting 2 from 7 = [0, 2]
|- mutate
-+=> 5 <=+-
>sampler selecting 3 from 3 = [0, 0, 1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 1 from 5 = [1]
>sampler selecting 4 from 5 = [2, 3, 0, 1]
>sampler selecting 1 from 3 = [1]
>sampler selecting 3 from 5 = [1, 2, 1]
>sampler selecting 3 from 3 = [0, 0, 1]
>sampler selecting 3 from 5 = [4, 3, 3]
>sampler selecting 4 from 5 = [1, 1, 0, 2]
>sampler selecting 5 from 5 = [3, 3, 1, 3, 2]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 5 from 5 = [2, 3, 2, 2, 1]
>sampler selecting 3 from 5 = [0, 3, 2]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 2 from 5 = [0, 2]
>sampler selecting 2 from 5 = [3, 2]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 2 from 5 = [2, 2]
>sampler selecting 1 from 5 = [0]
>sampler selecting 3 from 3 = [2, 1, 1]
>sampler selecting 2 from 5 = [0, 2]
>sampler selecting 5 from 5 = [1, 3, 0, 3, 1]
>sampler selecting 2 from 5 = [1, 3]
>sampler selecting 3 from 3 = [1, 2, 0]
>sampler selecting 3 from 5 = [2, 3, 1]
>sampler selecting 2 from 5 = [2, 0]
>sampler selecting 1 from 5 = [0]
>sampler selecting 2 from 3 = [0, 0]
>sampler selecting 1 from 5 = [0]
>sampler selecting 1 from 5 = [2]
>sampler selecting 3 from 3 = [2, 0, 2]
>sampler selecting 5 from 5 = [2, 1, 0, 3, 1]
>sampler selecting 3 from 5 = [1, 1, 2]
>sampler selecting 1 from 5 = [1]
>sampler selecting 3 from 3 = [1, 1, 2]
>sampler selecting 1 from 5 = [4]
>sampler selecting 4 from 5 = [4, 2, 1, 1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 2 from 5 = [3, 2]
>sampler selecting 2 from 3 = [1, 0]
>sampler selecting 1 from 5 = [3]
>sampler selecting 4 from 5 = [0, 0, 0, 3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [2, 2, 0, 3]
>sampler selecting 3 from 3 = [0, 2, 1]
>sampler selecting 2 from 5 = [3, 4]
>sampler selecting 4 from 5 = [3, 2, 2, 0]
>sampler selecting 2 from 5 = [2, 2]
>sampler selecting 3 from 3 = [2, 2, 1]
>sampler selecting 1 from 5 = [1]
>sampler selecting 5 from 5 = [3, 0, 1, 1, 2]
>sampler selecting 5 from 5 = [1, 2, 3, 1, 0]
>sampler selecting 3 from 3 = [1, 0, 1]
>sampler selecting 3 from 5 = [2, 3, 1]
>sampler selecting 4 from 5 = [3, 1, 3, 1]
>sampler selecting 5 from 5 = [2, 1, 0, 1, 1]
>sampler selecting 3 from 3 = [1, 1, 0]
>sampler selecting 4 from 5 = [0, 1, 1, 1]
>sampler selecting 2 from 5 = [3, 2]
>sampler selecting 1 from 5 = [3]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 4 from 5 = [1, 2, 3, 0]
>sampler selecting 3 from 5 = [1, 4, 2]
generation =  0
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.429820210227
| | |-finished  1  forest. fitness = 0.699388631415
| | |-MSE =  0.451443122851
| | |-finished  2  forest. fitness = 0.68896947063
| | |-MSE =  0.457270837503
| | |-finished  3  forest. fitness = 0.686214239841
| | |-MSE =  0.562335674283
| | |-finished  4  forest. fitness = 0.640067314893
| | |-MSE =  0.575795044124
| | |-finished  5  forest. fitness = 0.634600295088
| | |-MSE =  0.450434221125
| | |-finished  6  forest. fitness = 0.689448708142
| | |-MSE =  0.561917072187
| | |-finished  7  forest. fitness = 0.640238856343
| | |-MSE =  0.562783558372
| | |-finished  8  forest. fitness = 0.639883875565
| | |-MSE =  0.549411546865
| | |-finished  9  forest. fitness = 0.645406317013
| | |-MSE =  0.658876693375
| | |-finished  10  forest. fitness = 0.602817559613
| | |-MSE =  0.466954287071
| | |-finished  11  forest. fitness = 0.681684500201
| | |-MSE =  0.551059054517
| | |-finished  12  forest. fitness = 0.644720777773
| | |-MSE =  0.4266018679
| | |-finished  13  forest. fitness = 0.700966417121
| | |-MSE =  0.445377136826
| | |-finished  14  forest. fitness = 0.691860950697
| | |-MSE =  0.59228013768
| | |-finished  15  forest. fitness = 0.628030191632
| | |-MSE =  0.568185892018
| | |-finished  16  forest. fitness = 0.637679502851
| | |-MSE =  0.614579220329
| | |-finished  17  forest. fitness = 0.619356416464
| | |-MSE =  0.462550214846
| | |-finished  18  forest. fitness = 0.683737207687
| | |-MSE =  0.448946113316
| | |-finished  19  forest. fitness = 0.690156791071
| | |-MSE =  0.539919395239
| | |-finished  20  forest. fitness = 0.649384638632
avg =  0.659730633134 max =  0.700966417121
|-spawn
selected for crossover -> 0.639883875565 0.700966417121
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.628030191632 0.700966417121
>sampler distinct selecting 4 from 5 = [3, 2, 0, 0]
selected for crossover -> 0.619356416464 0.640067314893
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.68896947063 0.602817559613
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.644720777773 0.637679502851
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.699388631415 0.683737207687
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.699388631415 0.637679502851
>sampler distinct selecting 2 from 5 = [1, 2]
selected for crossover -> 0.645406317013 0.649384638632
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.644720777773 0.699388631415
>sampler distinct selecting 4 from 5 = [1, 0, 0, 0]
selected for crossover -> 0.649384638632 0.700966417121
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.644720777773 0.689448708142
>sampler distinct selecting 4 from 5 = [0, 3, 1, 0]
selected for crossover -> 0.690156791071 0.644720777773
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.691860950697 0.686214239841
>sampler distinct selecting 4 from 6 = [2, 3, 1, 1]
selected for crossover -> 0.690156791071 0.644720777773
>sampler distinct selecting 2 from 5 = [3, 0]
selected for crossover -> 0.686214239841 0.690156791071
>sampler distinct selecting 4 from 6 = [0, 0, 3, 0]
selected for crossover -> 0.700966417121 0.649384638632
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.639883875565 0.68896947063
>sampler distinct selecting 3 from 4 = [2, 0, 0]
selected for crossover -> 0.68896947063 0.637679502851
>sampler distinct selecting 2 from 5 = [0, 2]
selected for crossover -> 0.640238856343 0.645406317013
>sampler distinct selecting 4 from 4 = [2, 1, 0, 0]
selected for crossover -> 0.640067314893 0.691860950697
>sampler distinct selecting 3 from 4 = [0, 1, 1]
|- mutate
>sampler selecting 1 from 5 = [4]
>sampler selecting 3 from 5 = [3, 4, 2]
generation =  1
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.454826208027
| | |-finished  1  forest. fitness = 0.687367325721
| | |-MSE =  0.605786879297
| | |-finished  2  forest. fitness = 0.622747646585
| | |-MSE =  0.582245748809
| | |-finished  3  forest. fitness = 0.632013074298
| | |-MSE =  0.458378045374
| | |-finished  4  forest. fitness = 0.685693262575
| | |-MSE =  0.679328773403
| | |-finished  5  forest. fitness = 0.59547601151
| | |-MSE =  0.644258089871
| | |-finished  6  forest. fitness = 0.608177028996
| | |-MSE =  0.427821752761
| | |-finished  7  forest. fitness = 0.700367534019
| | |-MSE =  0.550845322575
| | |-finished  8  forest. fitness = 0.644809630879
| | |-MSE =  0.425080400436
| | |-finished  9  forest. fitness = 0.701714794263
| | |-MSE =  0.629554887123
| | |-finished  10  forest. fitness = 0.613664509187
| | |-MSE =  0.443855705081
| | |-finished  11  forest. fitness = 0.692589984222
| | |-MSE =  0.662402886997
| | |-finished  12  forest. fitness = 0.601538897593
| | |-MSE =  0.553815229502
| | |-finished  13  forest. fitness = 0.643577164783
| | |-MSE =  0.580459003004
| | |-finished  14  forest. fitness = 0.632727579836
| | |-MSE =  0.454290683128
| | |-finished  15  forest. fitness = 0.687620440398
| | |-MSE =  0.422178199481
| | |-finished  16  forest. fitness = 0.703146764846
| | |-MSE =  0.517197976779
| | |-finished  17  forest. fitness = 0.659109763726
| | |-MSE =  0.523870900453
| | |-finished  18  forest. fitness = 0.65622356835
| | |-MSE =  0.635031422418
| | |-finished  19  forest. fitness = 0.611609040835
| | |-MSE =  0.484515125773
| | |-finished  20  forest. fitness = 0.673620620389
avg =  0.652689732151 max =  0.703146764846
|-spawn
selected for crossover -> 0.687620440398 0.685693262575
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.673620620389 0.601538897593
>sampler distinct selecting 3 from 6 = [5, 1, 0]
selected for crossover -> 0.703146764846 0.601538897593
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.644809630879 0.687367325721
>sampler distinct selecting 4 from 6 = [1, 0, 1, 0]
selected for crossover -> 0.613664509187 0.659109763726
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.608177028996 0.622747646585
>sampler distinct selecting 5 from 6 = [0, 1, 2, 1, 0]
selected for crossover -> 0.673620620389 0.632727579836
>sampler distinct selecting 4 from 7 = [2, 3, 0, 2]
selected for crossover -> 0.632013074298 0.703146764846
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.643577164783 0.673620620389
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.632013074298 0.632727579836
>sampler distinct selecting 4 from 6 = [4, 3, 1, 0]
selected for crossover -> 0.65622356835 0.644809630879
>sampler distinct selecting 2 from 8 = [2, 5]
selected for crossover -> 0.687620440398 0.632727579836
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.601538897593 0.608177028996
>sampler distinct selecting 5 from 7 = [3, 0, 1, 3, 0]
selected for crossover -> 0.632727579836 0.613664509187
>sampler distinct selecting 2 from 8 = [1, 5]
selected for crossover -> 0.59547601151 0.687620440398
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.692589984222 0.59547601151
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.692589984222 0.703146764846
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.673620620389 0.692589984222
>sampler distinct selecting 4 from 5 = [2, 2, 0, 0]
selected for crossover -> 0.687367325721 0.685693262575
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.692589984222 0.701714794263
>sampler distinct selecting 2 from 4 = [2, 1]
|- mutate
>sampler selecting 2 from 5 = [2, 3]
generation =  2
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.431597672009
| | |-finished  1  forest. fitness = 0.698520275321
| | |-MSE =  0.570972408804
| | |-finished  2  forest. fitness = 0.636548417016
| | |-MSE =  0.550229589214
| | |-finished  3  forest. fitness = 0.645065741847
| | |-MSE =  0.562042068518
| | |-finished  4  forest. fitness = 0.640187623723
| | |-MSE =  0.439940199269
| | |-finished  5  forest. fitness = 0.694473284729
| | |-MSE =  0.432408302851
| | |-finished  6  forest. fitness = 0.698124967588
| | |-MSE =  0.68236867832
| | |-finished  7  forest. fitness = 0.594400034241
| | |-MSE =  0.666466071212
| | |-finished  8  forest. fitness = 0.600072223056
| | |-MSE =  0.43819553422
| | |-finished  9  forest. fitness = 0.695315745464
| | |-MSE =  0.573467057643
| | |-finished  10  forest. fitness = 0.635539203152
| | |-MSE =  0.425142066887
| | |-finished  11  forest. fitness = 0.701684430791
| | |-MSE =  0.591566101966
| | |-finished  12  forest. fitness = 0.628311949321
| | |-MSE =  0.431204104681
| | |-finished  13  forest. fitness = 0.698712361661
| | |-MSE =  0.570285501821
| | |-finished  14  forest. fitness = 0.63682686928
| | |-MSE =  0.590503408615
| | |-finished  15  forest. fitness = 0.628731755357
| | |-MSE =  0.440265614479
| | |-finished  16  forest. fitness = 0.694316374665
| | |-MSE =  0.501789753572
| | |-finished  17  forest. fitness = 0.665872168605
| | |-MSE =  0.646582252116
| | |-finished  18  forest. fitness = 0.60731858291
| | |-MSE =  0.46397114192
| | |-finished  19  forest. fitness = 0.683073573901
| | |-MSE =  0.552654574184
| | |-finished  20  forest. fitness = 0.644058257791
avg =  0.656357692021 max =  0.701684430791
|-spawn
selected for crossover -> 0.694316374665 0.698124967588
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.698124967588 0.694473284729
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.701684430791 0.60731858291
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.694473284729 0.695315745464
>sampler distinct selecting 4 from 5 = [0, 2, 1, 1]
selected for crossover -> 0.60731858291 0.645065741847
>sampler distinct selecting 5 from 5 = [4, 3, 0, 0, 0]
selected for crossover -> 0.628731755357 0.698712361661
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.694473284729 0.701684430791
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.701684430791 0.636548417016
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.636548417016 0.698520275321
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.600072223056 0.665872168605
>sampler distinct selecting 6 from 9 = [5, 5, 0, 0, 0, 1]
selected for crossover -> 0.628731755357 0.698124967588
>sampler distinct selecting 3 from 3 = [2, 0, 0]
selected for crossover -> 0.694316374665 0.645065741847
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.695315745464 0.635539203152
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.694316374665 0.594400034241
>sampler distinct selecting 4 from 6 = [5, 0, 2, 1]
selected for crossover -> 0.644058257791 0.694473284729
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.698124967588 0.694316374665
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.701684430791 0.665872168605
>sampler distinct selecting 3 from 5 = [3, 1, 0]
selected for crossover -> 0.63682686928 0.635539203152
>sampler distinct selecting 3 from 5 = [0, 2, 2]
selected for crossover -> 0.694316374665 0.594400034241
>sampler distinct selecting 2 from 6 = [3, 3]
selected for crossover -> 0.694316374665 0.698520275321
>sampler distinct selecting 2 from 2 = [0, 0]
|- mutate
>sampler selecting 2 from 3 = [2, 2]
>sampler selecting 5 from 5 = [1, 2, 2, 2, 3]
>sampler selecting 1 from 5 = [1]
generation =  3
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.439419264093
| | |-finished  1  forest. fitness = 0.69472461912
| | |-MSE =  0.511623911145
| | |-finished  2  forest. fitness = 0.661540210252
| | |-MSE =  0.573939856515
| | |-finished  3  forest. fitness = 0.635348292288
| | |-MSE =  0.670212434336
| | |-finished  4  forest. fitness = 0.598726233527
| | |-MSE =  0.443339811965
| | |-finished  5  forest. fitness = 0.69283753674
| | |-MSE =  0.452559291699
| | |-finished  6  forest. fitness = 0.688440055917
| | |-MSE =  0.438347505713
| | |-finished  7  forest. fitness = 0.695242280484
| | |-MSE =  0.456326961346
| | |-finished  8  forest. fitness = 0.686658989734
| | |-MSE =  0.422501844601
| | |-finished  10  forest. fitness = 0.70298678613
| | |-MSE =  0.445064603951
| | |-finished  10  forest. fitness = 0.692010583655
| | |-MSE =  0.448190526343
| | |-finished  11  forest. fitness = 0.69051687731
| | |-MSE =  0.637701780793
| | |-finished  12  forest. fitness = 0.610611780318
| | |-MSE =  0.664593736595
| | |-finished  13  forest. fitness = 0.600747184142
| | |-MSE =  0.597436086383
| | |-finished  14  forest. fitness = 0.626003136228
| | |-MSE =  0.426219995094
| | |-finished  15  forest. fitness = 0.70115410206
| | |-MSE =  0.527329443851
| | |-finished  16  forest. fitness = 0.654737590522
| | |-MSE =  0.451878745418
| | |-finished  17  forest. fitness = 0.688762751818
| | |-MSE =  0.466087746243
| | |-finished  18  forest. fitness = 0.682087414319
| | |-MSE =  0.560741403632
| | |-finished  19  forest. fitness = 0.640721132708
| | |-MSE =  0.474457221723
| | |-finished  20  forest. fitness = 0.678215675075
avg =  0.666103661617 max =  0.70298678613
|-spawn
selected for crossover -> 0.695242280484 0.654737590522
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.598726233527 0.682087414319
>sampler distinct selecting 3 from 8 = [6, 3, 4]
selected for crossover -> 0.688440055917 0.626003136228
>sampler distinct selecting 3 from 6 = [1, 1, 0]
selected for crossover -> 0.70298678613 0.686658989734
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.640721132708 0.688440055917
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.70298678613 0.695242280484
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.600747184142 0.695242280484
>sampler distinct selecting 3 from 8 = [4, 3, 3]
selected for crossover -> 0.686658989734 0.598726233527
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.610611780318 0.692010583655
>sampler distinct selecting 3 from 5 = [2, 2, 1]
selected for crossover -> 0.654737590522 0.70298678613
>sampler distinct selecting 2 from 5 = [0, 1]
selected for crossover -> 0.598726233527 0.69283753674
>sampler distinct selecting 4 from 5 = [2, 0, 0, 0]
selected for crossover -> 0.695242280484 0.640721132708
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.682087414319 0.686658989734
>sampler distinct selecting 4 from 5 = [1, 2, 0, 0]
selected for crossover -> 0.682087414319 0.69051687731
>sampler distinct selecting 5 from 7 = [1, 0, 0, 0, 1]
selected for crossover -> 0.695242280484 0.686658989734
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.682087414319 0.692010583655
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.688440055917 0.626003136228
>sampler distinct selecting 3 from 6 = [3, 0, 3]
selected for crossover -> 0.69283753674 0.610611780318
>sampler distinct selecting 2 from 5 = [0, 3]
selected for crossover -> 0.682087414319 0.692010583655
>sampler distinct selecting 4 from 5 = [0, 2, 0, 0]
selected for crossover -> 0.70115410206 0.661540210252
>sampler distinct selecting 1 from 3 = [1]
|- mutate
>sampler selecting 1 from 5 = [0]
>sampler selecting 3 from 3 = [2, 0, 0]
>sampler selecting 3 from 5 = [2, 4, 2]
>sampler selecting 3 from 5 = [1, 1, 0]
>sampler selecting 5 from 5 = [4, 2, 1, 2, 2]
>sampler selecting 1 from 5 = [3]
generation =  4
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.456580994097
| | |-finished  1  forest. fitness = 0.686539234037
| | |-MSE =  0.524245688802
| | |-finished  2  forest. fitness = 0.656062213163
| | |-MSE =  0.43133761894
| | |-finished  3  forest. fitness = 0.698647186218
| | |-MSE =  0.442173298732
| | |-finished  4  forest. fitness = 0.693397943839
| | |-MSE =  0.65095098763
| | |-finished  5  forest. fitness = 0.605711500518
| | |-MSE =  0.428806460455
| | |-finished  6  forest. fitness = 0.699884853321
| | |-MSE =  0.454888604072
| | |-finished  7  forest. fitness = 0.687337846486
| | |-MSE =  0.627723373577
| | |-finished  8  forest. fitness = 0.614355004194
| | |-MSE =  0.553734034968
| | |-finished  9  forest. fitness = 0.643610796632
| | |-MSE =  0.672817325764
| | |-finished  10  forest. fitness = 0.597793904091
| | |-MSE =  0.453312819737
| | |-finished  11  forest. fitness = 0.688083106692
| | |-MSE =  0.42188156451
| | |-finished  12  forest. fitness = 0.703293456333
| | |-MSE =  0.43234556337
| | |-finished  13  forest. fitness = 0.698155546799
| | |-MSE =  0.45249007776
| | |-finished  14  forest. fitness = 0.688472861407
| | |-MSE =  0.426468130492
| | |-finished  15  forest. fitness = 0.701032135681
| | |-MSE =  0.449768755687
| | |-finished  16  forest. fitness = 0.689765175361
| | |-MSE =  0.628141303013
| | |-finished  17  forest. fitness = 0.614197304711
| | |-MSE =  0.672498809716
| | |-finished  18  forest. fitness = 0.597907749883
| | |-MSE =  0.50206640729
| | |-finished  19  forest. fitness = 0.665749526883
| | |-MSE =  0.457644528597
| | |-finished  20  forest. fitness = 0.686038317561
avg =  0.665801783191 max =  0.703293456333
|-spawn
selected for crossover -> 0.597793904091 0.688472861407
>sampler distinct selecting 2 from 9 = [3, 6]
selected for crossover -> 0.614355004194 0.698155546799
>sampler distinct selecting 4 from 4 = [1, 0, 0, 0]
selected for crossover -> 0.698155546799 0.688083106692
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.686539234037 0.605711500518
>sampler distinct selecting 5 from 5 = [4, 0, 2, 0, 0]
selected for crossover -> 0.698647186218 0.703293456333
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.698647186218 0.597793904091
>sampler distinct selecting 3 from 4 = [0, 1, 0]
selected for crossover -> 0.665749526883 0.701032135681
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.698647186218 0.614197304711
>sampler distinct selecting 4 from 4 = [2, 2, 0, 0]
selected for crossover -> 0.605711500518 0.693397943839
>sampler distinct selecting 5 from 8 = [5, 5, 1, 0, 0]
selected for crossover -> 0.699884853321 0.605711500518
>sampler distinct selecting 2 from 8 = [6, 4]
selected for crossover -> 0.688472861407 0.698647186218
>sampler distinct selecting 2 from 7 = [0, 4]
selected for crossover -> 0.698647186218 0.597907749883
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.703293456333 0.687337846486
>sampler distinct selecting 5 from 7 = [3, 1, 3, 2, 2]
selected for crossover -> 0.686539234037 0.699884853321
>sampler distinct selecting 5 from 5 = [1, 2, 1, 1, 0]
selected for crossover -> 0.701032135681 0.686539234037
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.693397943839 0.689765175361
>sampler distinct selecting 2 from 5 = [1, 0]
selected for crossover -> 0.699884853321 0.643610796632
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.689765175361 0.686038317561
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.597793904091 0.614197304711
>sampler distinct selecting 3 from 6 = [0, 2, 2]
selected for crossover -> 0.686038317561 0.614355004194
>sampler distinct selecting 2 from 5 = [0, 0]
|- mutate
>sampler selecting 4 from 5 = [3, 0, 2, 1]
>sampler selecting 1 from 5 = [2]
generation =  5
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.456518340238
| | |-finished  1  forest. fitness = 0.686568766334
| | |-MSE =  0.667840956032
| | |-finished  2  forest. fitness = 0.599577553473
| | |-MSE =  0.431952313882
| | |-finished  3  forest. fitness = 0.698347277563
| | |-MSE =  0.435073317088
| | |-finished  4  forest. fitness = 0.696828509103
| | |-MSE =  0.450606078828
| | |-finished  5  forest. fitness = 0.689367027062
| | |-MSE =  0.597675731955
| | |-finished  6  forest. fitness = 0.625909238026
| | |-MSE =  0.550345527401
| | |-finished  7  forest. fitness = 0.645017502438
| | |-MSE =  0.528465204647
| | |-finished  8  forest. fitness = 0.65425107288
| | |-MSE =  0.431696120929
| | |-finished  9  forest. fitness = 0.698472242386
| | |-MSE =  0.624193798405
| | |-finished  10  forest. fitness = 0.615690074043
| | |-MSE =  0.444554168358
| | |-finished  11  forest. fitness = 0.692255106734
| | |-MSE =  0.576581113402
| | |-finished  12  forest. fitness = 0.634283889043
| | |-MSE =  0.431278245054
| | |-finished  13  forest. fitness = 0.698676168282
| | |-MSE =  0.427042455438
| | |-finished  14  forest. fitness = 0.700749999546
| | |-MSE =  0.442146507686
| | |-finished  15  forest. fitness = 0.693410825232
| | |-MSE =  0.457250868443
| | |-finished  16  forest. fitness = 0.6862236432
| | |-MSE =  0.421159736059
| | |-finished  17  forest. fitness = 0.70365066968
| | |-MSE =  0.674304866488
| | |-finished  18  forest. fitness = 0.597262792467
| | |-MSE =  0.661864324189
| | |-finished  19  forest. fitness = 0.601733839186
| | |-MSE =  0.45213525547
| | |-finished  20  forest. fitness = 0.68864108645
avg =  0.665345864156 max =  0.70365066968
|-spawn
selected for crossover -> 0.68864108645 0.689367027062
>sampler distinct selecting 2 from 7 = [4, 3]
selected for crossover -> 0.615690074043 0.645017502438
>sampler distinct selecting 5 from 7 = [3, 3, 1, 0, 0]
selected for crossover -> 0.692255106734 0.65425107288
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.6862236432 0.601733839186
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.693410825232 0.68864108645
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.692255106734 0.6862236432
>sampler distinct selecting 4 from 5 = [2, 1, 0, 1]
selected for crossover -> 0.689367027062 0.645017502438
>sampler distinct selecting 1 from 8 = [0]
selected for crossover -> 0.689367027062 0.625909238026
>sampler distinct selecting 6 from 9 = [2, 4, 5, 1, 3, 0]
selected for crossover -> 0.6862236432 0.625909238026
>sampler distinct selecting 5 from 6 = [5, 2, 3, 1, 1]
selected for crossover -> 0.634283889043 0.6862236432
>sampler distinct selecting 4 from 7 = [3, 0, 2, 0]
selected for crossover -> 0.65425107288 0.625909238026
>sampler distinct selecting 4 from 6 = [5, 2, 0, 1]
selected for crossover -> 0.700749999546 0.689367027062
>sampler distinct selecting 6 from 6 = [5, 2, 1, 0, 0, 0]
selected for crossover -> 0.700749999546 0.597262792467
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.597262792467 0.6862236432
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.698472242386 0.65425107288
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.696828509103 0.645017502438
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.597262792467 0.686568766334
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.698472242386 0.68864108645
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.689367027062 0.599577553473
>sampler distinct selecting 6 from 10 = [0, 1, 2, 0, 0, 1]
selected for crossover -> 0.686568766334 0.65425107288
>sampler distinct selecting 3 from 4 = [1, 2, 0]
|- mutate
generation =  6
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.541028810935
| | |-finished  1  forest. fitness = 0.648917134387
| | |-MSE =  0.452950832723
| | |-finished  2  forest. fitness = 0.688254535169
| | |-MSE =  0.455860890291
| | |-finished  3  forest. fitness = 0.686878812852
| | |-MSE =  0.441294582737
| | |-finished  4  forest. fitness = 0.69382068869
| | |-MSE =  0.426348348465
| | |-finished  5  forest. fitness = 0.701091007029
| | |-MSE =  0.418902417417
| | |-finished  6  forest. fitness = 0.704770100977
| | |-MSE =  0.668318204917
| | |-finished  7  forest. fitness = 0.599406034804
| | |-MSE =  0.427991697707
| | |-finished  8  forest. fitness = 0.700284183448
| | |-MSE =  0.420448072699
| | |-finished  9  forest. fitness = 0.704003208016
| | |-MSE =  0.634302536304
| | |-finished  10  forest. fitness = 0.61188181367
| | |-MSE =  0.574629089782
| | |-finished  11  forest. fitness = 0.635070193031
| | |-MSE =  0.45626423896
| | |-finished  12  forest. fitness = 0.686688564648
| | |-MSE =  0.44788399712
| | |-finished  13  forest. fitness = 0.690663065542
| | |-MSE =  0.448418988248
| | |-finished  14  forest. fitness = 0.690407960758
| | |-MSE =  0.524169314147
| | |-finished  15  forest. fitness = 0.656095087808
| | |-MSE =  0.421551460022
| | |-finished  16  forest. fitness = 0.703456771086
| | |-MSE =  0.576007701862
| | |-finished  17  forest. fitness = 0.634514665644
| | |-MSE =  0.463469912064
| | |-finished  18  forest. fitness = 0.683307522592
| | |-MSE =  0.437707550376
| | |-finished  19  forest. fitness = 0.695551748155
| | |-MSE =  0.60845747823
| | |-finished  20  forest. fitness = 0.621713668863
avg =  0.671838838359 max =  0.704770100977
|-spawn
selected for crossover -> 0.688254535169 0.683307522592
>sampler distinct selecting 5 from 12 = [7, 0, 7, 0, 2]
selected for crossover -> 0.648917134387 0.688254535169
>sampler distinct selecting 4 from 9 = [7, 6, 3, 0]
selected for crossover -> 0.704770100977 0.700284183448
>sampler distinct selecting 2 from 5 = [2, 0]
selected for crossover -> 0.688254535169 0.686688564648
>sampler distinct selecting 7 from 12 = [6, 0, 5, 1, 1, 5, 1]
selected for crossover -> 0.648917134387 0.69382068869
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.704003208016 0.700284183448
>sampler distinct selecting 4 from 5 = [3, 0, 0, 1]
selected for crossover -> 0.635070193031 0.700284183448
>sampler distinct selecting 4 from 9 = [7, 0, 1, 4]
selected for crossover -> 0.690663065542 0.69382068869
>sampler distinct selecting 2 from 4 = [2, 1]
selected for crossover -> 0.690663065542 0.700284183448
>sampler distinct selecting 4 from 7 = [5, 4, 3, 2]
selected for crossover -> 0.656095087808 0.61188181367
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.656095087808 0.621713668863
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.656095087808 0.688254535169
>sampler distinct selecting 6 from 7 = [1, 1, 3, 2, 0, 0]
selected for crossover -> 0.686688564648 0.634514665644
>sampler distinct selecting 2 from 10 = [1, 3]
selected for crossover -> 0.700284183448 0.635070193031
>sampler distinct selecting 6 from 9 = [5, 6, 0, 4, 1, 2]
selected for crossover -> 0.648917134387 0.599406034804
>sampler distinct selecting 2 from 8 = [0, 5]
selected for crossover -> 0.686878812852 0.703456771086
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.635070193031 0.688254535169
>sampler distinct selecting 6 from 11 = [6, 8, 0, 5, 4, 3]
selected for crossover -> 0.61188181367 0.634514665644
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.704770100977 0.599406034804
>sampler distinct selecting 5 from 6 = [3, 0, 2, 1, 0]
selected for crossover -> 0.690407960758 0.704003208016
>sampler distinct selecting 1 from 2 = [0]
|- mutate
>sampler selecting 5 from 5 = [1, 4, 2, 2, 3]
>sampler selecting 2 from 5 = [3, 1]
>sampler selecting 4 from 5 = [2, 2, 0, 1]
>sampler selecting 5 from 5 = [1, 2, 1, 2, 2]
generation =  7
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.609612366019
| | |-finished  1  forest. fitness = 0.621267592814
| | |-MSE =  0.453173234525
| | |-finished  2  forest. fitness = 0.688149200826
| | |-MSE =  0.63050815163
| | |-finished  3  forest. fitness = 0.61330573478
| | |-MSE =  0.440232431403
| | |-finished  4  forest. fitness = 0.694332371773
| | |-MSE =  0.603599559043
| | |-finished  5  forest. fitness = 0.623597078436
| | |-MSE =  0.656139731081
| | |-finished  6  forest. fitness = 0.603813785294
| | |-MSE =  0.654794937826
| | |-finished  7  forest. fitness = 0.604304483378
| | |-MSE =  0.442796984393
| | |-finished  8  forest. fitness = 0.693098204957
| | |-MSE =  0.629793211005
| | |-finished  9  forest. fitness = 0.613574773319
| | |-MSE =  0.453660436415
| | |-finished  10  forest. fitness = 0.687918564026
| | |-MSE =  0.43151968438
| | |-finished  11  forest. fitness = 0.698558329942
| | |-MSE =  0.667530600966
| | |-finished  12  forest. fitness = 0.599689144787
| | |-MSE =  0.432369868046
| | |-finished  13  forest. fitness = 0.698143700387
| | |-MSE =  0.437522406297
| | |-finished  14  forest. fitness = 0.695641330959
| | |-MSE =  0.43652817804
| | |-finished  15  forest. fitness = 0.696122787765
| | |-MSE =  0.456657940102
| | |-finished  16  forest. fitness = 0.686502968521
| | |-MSE =  0.471289968164
| | |-finished  17  forest. fitness = 0.679675673483
| | |-MSE =  0.447938854848
| | |-finished  18  forest. fitness = 0.690636898549
| | |-MSE =  0.635422043899
| | |-finished  19  forest. fitness = 0.611462957669
| | |-MSE =  0.429835451779
| | |-finished  20  forest. fitness = 0.699381176174
avg =  0.659958837892 max =  0.699381176174
|-spawn
selected for crossover -> 0.698143700387 0.690636898549
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.693098204957 0.698558329942
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.699381176174 0.604304483378
>sampler distinct selecting 4 from 9 = [4, 7, 5, 3]
selected for crossover -> 0.694332371773 0.695641330959
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.679675673483 0.688149200826
>sampler distinct selecting 4 from 10 = [8, 2, 2, 2]
selected for crossover -> 0.611462957669 0.679675673483
>sampler distinct selecting 2 from 5 = [1, 2]
selected for crossover -> 0.695641330959 0.694332371773
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.688149200826 0.694332371773
>sampler distinct selecting 2 from 7 = [2, 2]
selected for crossover -> 0.688149200826 0.599689144787
>sampler distinct selecting 4 from 11 = [3, 8, 0, 3]
selected for crossover -> 0.694332371773 0.688149200826
>sampler distinct selecting 4 from 7 = [5, 3, 3, 1]
selected for crossover -> 0.696122787765 0.688149200826
>sampler distinct selecting 3 from 10 = [3, 8, 1]
selected for crossover -> 0.698143700387 0.621267592814
>sampler distinct selecting 2 from 5 = [0, 2]
selected for crossover -> 0.695641330959 0.687918564026
>sampler distinct selecting 3 from 7 = [6, 3, 2]
selected for crossover -> 0.694332371773 0.603813785294
>sampler distinct selecting 3 from 7 = [4, 0, 0]
selected for crossover -> 0.613574773319 0.687918564026
>sampler distinct selecting 2 from 7 = [1, 1]
selected for crossover -> 0.687918564026 0.693098204957
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.688149200826 0.696122787765
>sampler distinct selecting 4 from 10 = [0, 3, 3, 2]
selected for crossover -> 0.61330573478 0.699381176174
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.686502968521 0.699381176174
>sampler distinct selecting 2 from 6 = [0, 0]
selected for crossover -> 0.599689144787 0.621267592814
>sampler distinct selecting 4 from 9 = [6, 4, 3, 1]
|- mutate
>sampler selecting 1 from 5 = [1]
generation =  8
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.443930294392
| | |-finished  1  forest. fitness = 0.692554207003
| | |-MSE =  0.454816654826
| | |-finished  2  forest. fitness = 0.687371839388
| | |-MSE =  0.447980898231
| | |-finished  3  forest. fitness = 0.690616845306
| | |-MSE =  0.629491157337
| | |-finished  4  forest. fitness = 0.613688509752
| | |-MSE =  0.631574926112
| | |-finished  5  forest. fitness = 0.612904736397
| | |-MSE =  0.441551856402
| | |-finished  6  forest. fitness = 0.693696862558
| | |-MSE =  0.443001614135
| | |-finished  7  forest. fitness = 0.692999917813
| | |-MSE =  0.424185184191
| | |-finished  8  forest. fitness = 0.702155879095
| | |-MSE =  0.614098729719
| | |-finished  9  forest. fitness = 0.619540788669
| | |-MSE =  0.667916627008
| | |-finished  10  forest. fitness = 0.599550351503
| | |-MSE =  0.446801359573
| | |-finished  11  forest. fitness = 0.691179886847
| | |-MSE =  0.445737967028
| | |-finished  12  forest. fitness = 0.691688274644
| | |-MSE =  0.43262005977
| | |-finished  13  forest. fitness = 0.698021777079
| | |-MSE =  0.611585796196
| | |-finished  14  forest. fitness = 0.620506833927
| | |-MSE =  0.445211839221
| | |-finished  15  forest. fitness = 0.691940083012
| | |-MSE =  0.6664091323
| | |-finished  17  forest. fitness = 0.6000927267
| | |-MSE =  0.429616820308
| | |-finished  17  forest. fitness = 0.699488132621
| | |-MSE =  0.581915311803
| | |-finished  18  forest. fitness = 0.6321450918
| | |-MSE =  0.453038891065
| | |-finished  19  forest. fitness = 0.688212824962
| | |-MSE =  0.443517008134
| | |-finished  20  forest. fitness = 0.692752488793
avg =  0.665555402893 max =  0.702155879095
|-spawn
selected for crossover -> 0.702155879095 0.687371839388
>sampler distinct selecting 2 from 4 = [3, 0]
selected for crossover -> 0.599550351503 0.693696862558
>sampler distinct selecting 5 from 5 = [3, 1, 1, 0, 0]
selected for crossover -> 0.619540788669 0.691688274644
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.692554207003 0.691688274644
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.687371839388 0.619540788669
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.687371839388 0.692999917813
>sampler distinct selecting 2 from 3 = [0, 1]
selected for crossover -> 0.692999917813 0.690616845306
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.692752488793 0.612904736397
>sampler distinct selecting 3 from 6 = [3, 0, 2]
selected for crossover -> 0.6000927267 0.691940083012
>sampler distinct selecting 2 from 6 = [1, 1]
selected for crossover -> 0.612904736397 0.699488132621
>sampler distinct selecting 2 from 7 = [5, 3]
selected for crossover -> 0.687371839388 0.699488132621
>sampler distinct selecting 3 from 5 = [0, 1, 2]
selected for crossover -> 0.688212824962 0.691688274644
>sampler distinct selecting 2 from 4 = [1, 1]
selected for crossover -> 0.693696862558 0.698021777079
>sampler distinct selecting 2 from 3 = [0, 1]
selected for crossover -> 0.687371839388 0.6000927267
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.692554207003 0.692999917813
>sampler distinct selecting 3 from 5 = [0, 2, 2]
selected for crossover -> 0.599550351503 0.692999917813
>sampler distinct selecting 1 from 6 = [1]
selected for crossover -> 0.699488132621 0.691179886847
>sampler distinct selecting 3 from 8 = [6, 6, 0]
selected for crossover -> 0.691179886847 0.690616845306
>sampler distinct selecting 4 from 5 = [0, 3, 2, 0]
selected for crossover -> 0.693696862558 0.692554207003
>sampler distinct selecting 3 from 4 = [2, 0, 0]
selected for crossover -> 0.692752488793 0.619540788669
>sampler distinct selecting 3 from 5 = [0, 2, 1]
|- mutate
>sampler selecting 3 from 5 = [1, 3, 2]
>sampler selecting 4 from 5 = [1, 1, 3, 1]
generation =  9
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.44945981605
| | |-finished  1  forest. fitness = 0.689912192754
| | |-MSE =  0.466023030753
| | |-finished  2  forest. fitness = 0.682117524093
| | |-MSE =  0.457370778223
| | |-finished  3  forest. fitness = 0.686167181984
| | |-MSE =  0.435120537905
| | |-finished  4  forest. fitness = 0.696805580847
| | |-MSE =  0.449442226628
| | |-finished  5  forest. fitness = 0.689920565048
| | |-MSE =  0.456653341582
| | |-finished  6  forest. fitness = 0.686505135748
| | |-MSE =  0.45228582795
| | |-finished  7  forest. fitness = 0.688569688387
| | |-MSE =  0.655569683169
| | |-finished  8  forest. fitness = 0.604021691244
| | |-MSE =  0.454455307665
| | |-finished  9  forest. fitness = 0.687542611127
| | |-MSE =  0.668927766621
| | |-finished  10  forest. fitness = 0.599187106836
| | |-MSE =  0.434043862847
| | |-finished  11  forest. fitness = 0.697328740011
| | |-MSE =  0.437925640567
| | |-finished  12  forest. fitness = 0.695446253817
| | |-MSE =  0.4515482982
| | |-finished  13  forest. fitness = 0.688919549725
| | |-MSE =  0.440110943117
| | |-finished  14  forest. fitness = 0.694390945906
| | |-MSE =  0.427144959457
| | |-finished  15  forest. fitness = 0.700699668505
| | |-MSE =  0.604993945177
| | |-finished  16  forest. fitness = 0.623055309962
| | |-MSE =  0.455624416473
| | |-finished  17  forest. fitness = 0.686990399916
| | |-MSE =  0.446779050851
| | |-finished  18  forest. fitness = 0.691190544549
| | |-MSE =  0.432017694966
| | |-finished  19  forest. fitness = 0.698315393389
| | |-MSE =  0.609194925687
| | |-finished  20  forest. fitness = 0.621428755484
avg =  0.675425741967 max =  0.700699668505
|-spawn
selected for crossover -> 0.691190544549 0.689920565048
>sampler distinct selecting 2 from 7 = [0, 3]
selected for crossover -> 0.700699668505 0.623055309962
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.686505135748 0.623055309962
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.696805580847 0.694390945906
>sampler distinct selecting 3 from 4 = [3, 1, 0]
selected for crossover -> 0.688569688387 0.686505135748
>sampler distinct selecting 2 from 5 = [3, 0]
selected for crossover -> 0.689920565048 0.691190544549
>sampler distinct selecting 3 from 7 = [4, 0, 4]
selected for crossover -> 0.689912192754 0.688919549725
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.686505135748 0.599187106836
>sampler distinct selecting 3 from 7 = [3, 1, 2]
selected for crossover -> 0.688919549725 0.700699668505
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.689912192754 0.687542611127
>sampler distinct selecting 3 from 5 = [3, 3, 1]
selected for crossover -> 0.691190544549 0.604021691244
>sampler distinct selecting 4 from 7 = [0, 4, 0, 1]
selected for crossover -> 0.687542611127 0.689920565048
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.695446253817 0.623055309962
>sampler distinct selecting 3 from 3 = [2, 1, 0]
selected for crossover -> 0.695446253817 0.696805580847
>sampler distinct selecting 1 from 5 = [2]
selected for crossover -> 0.688919549725 0.686167181984
>sampler distinct selecting 2 from 3 = [2, 0]
selected for crossover -> 0.695446253817 0.694390945906
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.698315393389 0.599187106836
>sampler distinct selecting 3 from 8 = [4, 6, 1]
selected for crossover -> 0.691190544549 0.700699668505
>sampler distinct selecting 3 from 6 = [0, 3, 2]
selected for crossover -> 0.687542611127 0.700699668505
>sampler distinct selecting 3 from 5 = [1, 0, 0]
selected for crossover -> 0.686505135748 0.696805580847
>sampler distinct selecting 3 from 5 = [1, 2, 0]
|- mutate
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 2 from 5 = [2, 2]
generation =  10
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.456519387925
| | |-finished  1  forest. fitness = 0.686568272479
| | |-MSE =  0.584213536875
| | |-finished  2  forest. fitness = 0.631228036324
| | |-MSE =  0.591274548854
| | |-finished  3  forest. fitness = 0.628427068553
| | |-MSE =  0.578086169528
| | |-finished  4  forest. fitness = 0.633678958291
| | |-MSE =  0.683327626637
| | |-finished  5  forest. fitness = 0.594061419878
| | |-MSE =  0.581675276577
| | |-finished  6  forest. fitness = 0.632241026214
| | |-MSE =  0.576682731236
| | |-finished  7  forest. fitness = 0.634243009192
| | |-MSE =  0.56024289385
| | |-finished  8  forest. fitness = 0.640925848111
| | |-MSE =  0.590983573297
| | |-finished  9  forest. fitness = 0.628542001806
| | |-MSE =  0.594423523455
| | |-finished  10  forest. fitness = 0.627185929767
| | |-MSE =  0.58909020989
| | |-finished  11  forest. fitness = 0.629290894738
| | |-MSE =  0.671465654764
| | |-finished  12  forest. fitness = 0.598277324544
| | |-MSE =  0.661407274613
| | |-finished  13  forest. fitness = 0.601899374874
| | |-MSE =  0.583181794137
| | |-finished  14  forest. fitness = 0.631639400923
| | |-MSE =  0.618833046126
| | |-finished  15  forest. fitness = 0.617728926645
| | |-MSE =  0.450173242014
| | |-finished  16  forest. fitness = 0.689572784153
| | |-MSE =  0.650642536112
| | |-finished  17  forest. fitness = 0.60582468834
| | |-MSE =  0.566647633579
| | |-finished  18  forest. fitness = 0.638305626975
| | |-MSE =  0.602328042457
| | |-finished  19  forest. fitness = 0.624091929682
| | |-MSE =  0.5766467887
| | |-finished  20  forest. fitness = 0.634257467917
avg =  0.63039949947 max =  0.689572784153
|-spawn
selected for crossover -> 0.628427068553 0.631639400923
>sampler distinct selecting 4 from 4 = [2, 0, 0, 0]
selected for crossover -> 0.627185929767 0.601899374874
>sampler distinct selecting 3 from 7 = [5, 2, 3]
selected for crossover -> 0.686568272479 0.628427068553
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.634257467917 0.598277324544
>sampler distinct selecting 3 from 4 = [0, 0, 1]
selected for crossover -> 0.638305626975 0.640925848111
>sampler distinct selecting 2 from 5 = [4, 0]
selected for crossover -> 0.631228036324 0.594061419878
>sampler distinct selecting 4 from 6 = [4, 0, 0, 2]
selected for crossover -> 0.617728926645 0.629290894738
>sampler distinct selecting 2 from 6 = [0, 0]
selected for crossover -> 0.594061419878 0.640925848111
>sampler distinct selecting 2 from 5 = [4, 1]
selected for crossover -> 0.629290894738 0.627185929767
>sampler distinct selecting 2 from 6 = [2, 0]
selected for crossover -> 0.634243009192 0.601899374874
>sampler distinct selecting 2 from 7 = [0, 0]
selected for crossover -> 0.60582468834 0.629290894738
>sampler distinct selecting 1 from 5 = [4]
selected for crossover -> 0.628427068553 0.628542001806
>sampler distinct selecting 2 from 4 = [2, 1]
selected for crossover -> 0.628427068553 0.629290894738
>sampler distinct selecting 3 from 4 = [1, 0, 0]
selected for crossover -> 0.631639400923 0.634257467917
>sampler distinct selecting 4 from 4 = [1, 1, 0, 0]
selected for crossover -> 0.60582468834 0.624091929682
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.617728926645 0.634257467917
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.689572784153 0.601899374874
>sampler distinct selecting 5 from 5 = [1, 1, 0, 0, 0]
selected for crossover -> 0.631639400923 0.634243009192
>sampler distinct selecting 4 from 6 = [5, 4, 2, 1]
selected for crossover -> 0.594061419878 0.634257467917
>sampler distinct selecting 4 from 4 = [2, 1, 0, 0]
selected for crossover -> 0.640925848111 0.631639400923
>sampler distinct selecting 1 from 5 = [3]
|- mutate
generation =  11
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.454798561956
| | |-finished  1  forest. fitness = 0.687380388015
| | |-MSE =  0.570050457255
| | |-finished  2  forest. fitness = 0.636922205512
| | |-MSE =  0.451981511607
| | |-finished  3  forest. fitness = 0.688714003592
| | |-MSE =  0.434657474791
| | |-finished  4  forest. fitness = 0.697030488163
| | |-MSE =  0.458807142385
| | |-finished  5  forest. fitness = 0.685491571124
| | |-MSE =  0.456625648461
| | |-finished  6  forest. fitness = 0.686518187468
| | |-MSE =  0.457599541532
| | |-finished  7  forest. fitness = 0.686059491312
| | |-MSE =  0.433080555586
| | |-finished  8  forest. fitness = 0.697797479773
| | |-MSE =  0.538906102241
| | |-finished  9  forest. fitness = 0.649812226064
| | |-MSE =  0.625789145701
| | |-finished  10  forest. fitness = 0.615085912367
| | |-MSE =  0.454221162241
| | |-finished  11  forest. fitness = 0.687653312966
| | |-MSE =  0.463554944174
| | |-finished  12  forest. fitness = 0.683267822626
| | |-MSE =  0.439221309817
| | |-finished  13  forest. fitness = 0.694820173367
| | |-MSE =  0.630261101002
| | |-finished  14  forest. fitness = 0.613398675455
| | |-MSE =  0.435577369994
| | |-finished  15  forest. fitness = 0.696583842085
| | |-MSE =  0.444133630977
| | |-finished  16  forest. fitness = 0.692456694138
| | |-MSE =  0.596852580431
| | |-finished  17  forest. fitness = 0.626231884054
| | |-MSE =  0.450841889164
| | |-finished  18  forest. fitness = 0.689254981862
| | |-MSE =  0.447235317093
| | |-finished  19  forest. fitness = 0.690972634643
| | |-MSE =  0.434064305327
| | |-finished  20  forest. fitness = 0.697318799642
avg =  0.675138538711 max =  0.697797479773
|-spawn
selected for crossover -> 0.688714003592 0.696583842085
>sampler distinct selecting 2 from 6 = [2, 4]
selected for crossover -> 0.626231884054 0.696583842085
>sampler distinct selecting 1 from 4 = [3]
selected for crossover -> 0.692456694138 0.683267822626
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.626231884054 0.697030488163
>sampler distinct selecting 5 from 6 = [0, 2, 2, 0, 0]
selected for crossover -> 0.649812226064 0.697030488163
>sampler distinct selecting 5 from 7 = [5, 0, 4, 2, 2]
selected for crossover -> 0.687653312966 0.615085912367
>sampler distinct selecting 5 from 5 = [1, 1, 1, 0, 0]
selected for crossover -> 0.688714003592 0.687653312966
>sampler distinct selecting 3 from 5 = [3, 0, 0]
selected for crossover -> 0.685491571124 0.694820173367
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.697030488163 0.687380388015
>sampler distinct selecting 3 from 5 = [4, 0, 2]
selected for crossover -> 0.687653312966 0.694820173367
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.686518187468 0.689254981862
>sampler distinct selecting 4 from 5 = [2, 1, 0, 1]
selected for crossover -> 0.692456694138 0.686518187468
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.683267822626 0.694820173367
>sampler distinct selecting 4 from 5 = [1, 3, 0, 1]
selected for crossover -> 0.687653312966 0.697030488163
>sampler distinct selecting 4 from 5 = [2, 2, 1, 0]
selected for crossover -> 0.686518187468 0.686059491312
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.689254981862 0.694820173367
>sampler distinct selecting 5 from 7 = [5, 0, 3, 2, 0]
selected for crossover -> 0.692456694138 0.697030488163
>sampler distinct selecting 2 from 7 = [1, 3]
selected for crossover -> 0.626231884054 0.689254981862
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.697797479773 0.649812226064
>sampler distinct selecting 5 from 7 = [2, 0, 3, 1, 1]
selected for crossover -> 0.626231884054 0.687653312966
>sampler distinct selecting 2 from 3 = [0, 0]
|- mutate
>sampler selecting 1 from 3 = [1]
>sampler selecting 2 from 5 = [1, 1]
generation =  12
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.455966211703
| | |-finished  1  forest. fitness = 0.68682912554
| | |-MSE =  0.467640721845
| | |-finished  2  forest. fitness = 0.681365667439
| | |-MSE =  0.601971175397
| | |-finished  3  forest. fitness = 0.62423095706
| | |-MSE =  0.456584950074
| | |-finished  4  forest. fitness = 0.686537369447
| | |-MSE =  0.461639339863
| | |-finished  5  forest. fitness = 0.684163303988
| | |-MSE =  0.574230186216
| | |-finished  6  forest. fitness = 0.635231117251
| | |-MSE =  0.605750290361
| | |-finished  7  forest. fitness = 0.622761836634
| | |-MSE =  0.588742907912
| | |-finished  8  forest. fitness = 0.629428458827
| | |-MSE =  0.594301570785
| | |-finished  9  forest. fitness = 0.627233905005
| | |-MSE =  0.611856951996
| | |-finished  10  forest. fitness = 0.620402448717
| | |-MSE =  0.667781872307
| | |-finished  11  forest. fitness = 0.599598794425
| | |-MSE =  0.577117688221
| | |-finished  12  forest. fitness = 0.634068089825
| | |-MSE =  0.457233425054
| | |-finished  13  forest. fitness = 0.686231857441
| | |-MSE =  0.600861553914
| | |-finished  14  forest. fitness = 0.624663636624
| | |-MSE =  0.58719584009
| | |-finished  15  forest. fitness = 0.630041973865
| | |-MSE =  0.660009334241
| | |-finished  16  forest. fitness = 0.602406251202
| | |-MSE =  0.577793158554
| | |-finished  17  forest. fitness = 0.633796638412
| | |-MSE =  0.586213579185
| | |-finished  18  forest. fitness = 0.630432126621
| | |-MSE =  0.562866731389
| | |-finished  19  forest. fitness = 0.639849822071
| | |-MSE =  0.564490630875
| | |-finished  20  forest. fitness = 0.639185675046
avg =  0.640922952772 max =  0.68682912554
|-spawn
selected for crossover -> 0.686231857441 0.681365667439
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.630041973865 0.634068089825
>sampler distinct selecting 1 from 8 = [6]
selected for crossover -> 0.633796638412 0.627233905005
>sampler distinct selecting 3 from 7 = [6, 1, 0]
selected for crossover -> 0.630041973865 0.639849822071
>sampler distinct selecting 4 from 10 = [2, 3, 7, 0]
selected for crossover -> 0.630041973865 0.681365667439
>sampler distinct selecting 6 from 6 = [0, 0, 3, 0, 0, 0]
selected for crossover -> 0.634068089825 0.686231857441
>sampler distinct selecting 2 from 4 = [0, 0]
selected for crossover -> 0.630432126621 0.681365667439
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.620402448717 0.635231117251
>sampler distinct selecting 3 from 9 = [6, 1, 2]
selected for crossover -> 0.633796638412 0.622761836634
>sampler distinct selecting 4 from 5 = [2, 1, 0, 1]
selected for crossover -> 0.620402448717 0.686231857441
>sampler distinct selecting 4 from 5 = [1, 0, 1, 0]
selected for crossover -> 0.630041973865 0.602406251202
>sampler distinct selecting 2 from 9 = [4, 4]
selected for crossover -> 0.686231857441 0.681365667439
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.630041973865 0.681365667439
>sampler distinct selecting 1 from 6 = [3]
selected for crossover -> 0.686537369447 0.599598794425
>sampler distinct selecting 3 from 6 = [4, 2, 2]
selected for crossover -> 0.602406251202 0.629428458827
>sampler distinct selecting 2 from 10 = [4, 7]
selected for crossover -> 0.602406251202 0.684163303988
>sampler distinct selecting 5 from 5 = [0, 3, 0, 0, 0]
selected for crossover -> 0.633796638412 0.639849822071
>sampler distinct selecting 6 from 8 = [3, 4, 5, 1, 0, 2]
selected for crossover -> 0.622761836634 0.633796638412
>sampler distinct selecting 4 from 5 = [2, 0, 0, 1]
selected for crossover -> 0.639849822071 0.686537369447
>sampler distinct selecting 3 from 6 = [3, 3, 3]
selected for crossover -> 0.634068089825 0.630432126621
>sampler distinct selecting 1 from 4 = [0]
|- mutate
>sampler selecting 5 from 5 = [3, 1, 3, 3, 3]
generation =  13
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.457078774739
| | |-finished  1  forest. fitness = 0.686304692194
| | |-MSE =  0.463387414314
| | |-finished  2  forest. fitness = 0.683346043719
| | |-MSE =  0.463302903551
| | |-finished  3  forest. fitness = 0.683385509298
| | |-MSE =  0.477162556629
| | |-finished  4  forest. fitness = 0.676973563615
| | |-MSE =  0.447550108181
| | |-finished  5  forest. fitness = 0.690822372468
| | |-MSE =  0.459420363877
| | |-finished  6  forest. fitness = 0.685203540222
| | |-MSE =  0.461697556287
| | |-finished  7  forest. fitness = 0.684136055163
| | |-MSE =  0.457755584942
| | |-finished  8  forest. fitness = 0.685986053032
| | |-MSE =  0.479417817448
| | |-finished  9  forest. fitness = 0.675941568505
| | |-MSE =  0.455340908103
| | |-finished  10  forest. fitness = 0.687124229404
| | |-MSE =  0.42653373199
| | |-finished  11  forest. fitness = 0.700999897566
| | |-MSE =  0.468460253957
| | |-finished  12  forest. fitness = 0.680985404477
| | |-MSE =  0.434065019522
| | |-finished  13  forest. fitness = 0.697318452362
| | |-MSE =  0.45356940923
| | |-finished  14  forest. fitness = 0.687961643696
| | |-MSE =  0.459172440243
| | |-finished  15  forest. fitness = 0.68531996111
| | |-MSE =  0.593779196676
| | |-finished  16  forest. fitness = 0.627439486025
| | |-MSE =  0.436027026428
| | |-finished  17  forest. fitness = 0.69636572404
| | |-MSE =  0.573377041546
| | |-finished  18  forest. fitness = 0.635575563641
| | |-MSE =  0.436603545321
| | |-finished  19  forest. fitness = 0.696086267681
| | |-MSE =  0.570802571773
| | |-finished  20  forest. fitness = 0.636617241383
avg =  0.67919466348 max =  0.700999897566
|-spawn
selected for crossover -> 0.685203540222 0.687961643696
>sampler distinct selecting 2 from 3 = [1, 1]
selected for crossover -> 0.685986053032 0.635575563641
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.687961643696 0.685203540222
>sampler distinct selecting 2 from 3 = [0, 1]
selected for crossover -> 0.68531996111 0.635575563641
>sampler distinct selecting 2 from 5 = [0, 0]
selected for crossover -> 0.696086267681 0.635575563641
>sampler distinct selecting 2 from 5 = [2, 0]
selected for crossover -> 0.685203540222 0.636617241383
>sampler distinct selecting 4 from 8 = [6, 3, 4, 4]
selected for crossover -> 0.687961643696 0.68531996111
>sampler distinct selecting 2 from 3 = [2, 1]
selected for crossover -> 0.675941568505 0.683346043719
>sampler distinct selecting 1 from 8 = [3]
selected for crossover -> 0.686304692194 0.700999897566
>sampler distinct selecting 4 from 6 = [2, 0, 2, 2]
selected for crossover -> 0.636617241383 0.687124229404
>sampler distinct selecting 4 from 7 = [1, 3, 2, 0]
selected for crossover -> 0.687961643696 0.635575563641
>sampler distinct selecting 2 from 4 = [3, 0]
selected for crossover -> 0.680985404477 0.68531996111
>sampler distinct selecting 2 from 5 = [4, 1]
selected for crossover -> 0.687961643696 0.636617241383
>sampler distinct selecting 3 from 7 = [6, 5, 1]
selected for crossover -> 0.69636572404 0.627439486025
>sampler distinct selecting 3 from 9 = [2, 3, 2]
selected for crossover -> 0.627439486025 0.675941568505
>sampler distinct selecting 6 from 11 = [2, 5, 7, 1, 5, 1]
selected for crossover -> 0.687961643696 0.700999897566
>sampler distinct selecting 5 from 5 = [2, 1, 0, 0, 0]
selected for crossover -> 0.683385509298 0.685986053032
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.683346043719 0.687124229404
>sampler distinct selecting 4 from 4 = [1, 1, 0, 0]
selected for crossover -> 0.627439486025 0.683385509298
>sampler distinct selecting 2 from 8 = [6, 3]
selected for crossover -> 0.635575563641 0.700999897566
>sampler distinct selecting 4 from 7 = [1, 3, 0, 0]
|- mutate
generation =  14
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.458125247802
| | |-finished  1  forest. fitness = 0.685812142343
| | |-MSE =  0.459560472132
| | |-finished  2  forest. fitness = 0.685137765165
| | |-MSE =  0.440547243793
| | |-finished  3  forest. fitness = 0.694180634692
| | |-MSE =  0.453880861553
| | |-finished  4  forest. fitness = 0.687814267623
| | |-MSE =  0.458846617829
| | |-finished  5  forest. fitness = 0.685473022166
| | |-MSE =  0.454712568054
| | |-finished  6  forest. fitness = 0.68742102183
| | |-MSE =  0.576004136417
| | |-finished  7  forest. fitness = 0.634516101127
| | |-MSE =  0.574545686033
| | |-finished  8  forest. fitness = 0.635103832725
| | |-MSE =  0.454382982026
| | |-finished  9  forest. fitness = 0.687576802231
| | |-MSE =  0.433833185286
| | |-finished  10  forest. fitness = 0.697431200688
| | |-MSE =  0.445690166149
| | |-finished  11  forest. fitness = 0.691711144902
| | |-MSE =  0.61866087887
| | |-finished  12  forest. fitness = 0.617794630768
| | |-MSE =  0.588058946036
| | |-finished  13  forest. fitness = 0.629699547675
| | |-MSE =  0.457714382599
| | |-finished  14  forest. fitness = 0.68600544245
| | |-MSE =  0.553475117218
| | |-finished  15  forest. fitness = 0.643718067265
| | |-MSE =  0.507512707785
| | |-finished  16  forest. fitness = 0.663344325282
| | |-MSE =  0.469038273961
| | |-finished  17  forest. fitness = 0.680717458303
| | |-MSE =  0.461553225077
| | |-finished  18  forest. fitness = 0.684203614923
| | |-MSE =  0.602316385279
| | |-finished  19  forest. fitness = 0.624096470077
| | |-MSE =  0.446285089582
| | |-finished  20  forest. fitness = 0.691426612362
avg =  0.66965920523 max =  0.697431200688
|-spawn
selected for crossover -> 0.685812142343 0.68600544245
>sampler distinct selecting 3 from 6 = [0, 2, 1]
selected for crossover -> 0.635103832725 0.691426612362
>sampler distinct selecting 4 from 6 = [0, 0, 1, 1]
selected for crossover -> 0.694180634692 0.687814267623
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.697431200688 0.685473022166
>sampler distinct selecting 3 from 3 = [2, 0, 0]
selected for crossover -> 0.691711144902 0.68600544245
>sampler distinct selecting 4 from 8 = [4, 4, 2, 2]
selected for crossover -> 0.624096470077 0.68742102183
>sampler distinct selecting 1 from 6 = [3]
selected for crossover -> 0.629699547675 0.68742102183
>sampler distinct selecting 6 from 10 = [4, 3, 3, 3, 3, 3]
selected for crossover -> 0.697431200688 0.691426612362
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.697431200688 0.685137765165
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.635103832725 0.629699547675
>sampler distinct selecting 5 from 10 = [4, 8, 4, 3, 1]
selected for crossover -> 0.624096470077 0.629699547675
>sampler distinct selecting 4 from 8 = [2, 2, 4, 0]
selected for crossover -> 0.68600544245 0.684203614923
>sampler distinct selecting 4 from 9 = [8, 0, 0, 4]
selected for crossover -> 0.663344325282 0.635103832725
>sampler distinct selecting 2 from 6 = [1, 1]
selected for crossover -> 0.691711144902 0.635103832725
>sampler distinct selecting 3 from 8 = [7, 0, 0]
selected for crossover -> 0.694180634692 0.691426612362
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.643718067265 0.691711144902
>sampler distinct selecting 4 from 8 = [3, 5, 1, 0]
selected for crossover -> 0.629699547675 0.697431200688
>sampler distinct selecting 2 from 7 = [2, 2]
selected for crossover -> 0.635103832725 0.680717458303
>sampler distinct selecting 2 from 5 = [3, 0]
selected for crossover -> 0.663344325282 0.685812142343
>sampler distinct selecting 2 from 4 = [1, 1]
selected for crossover -> 0.684203614923 0.685473022166
>sampler distinct selecting 3 from 7 = [4, 0, 1]
|- mutate
>sampler selecting 1 from 5 = [1]
>sampler selecting 4 from 5 = [3, 4, 0, 4]
>sampler selecting 2 from 5 = [2, 3]
-+=> 6 <=+-
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 3 from 5 = [1, 4, 0]
>sampler selecting 5 from 5 = [2, 2, 1, 1, 4]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 3 from 5 = [3, 4, 2]
>sampler selecting 4 from 5 = [3, 0, 0, 0]
>sampler selecting 3 from 3 = [1, 0, 1]
>sampler selecting 4 from 5 = [1, 1, 4, 1]
>sampler selecting 3 from 5 = [4, 4, 0]
>sampler selecting 5 from 5 = [1, 0, 2, 0, 0]
>sampler selecting 1 from 3 = [0]
>sampler selecting 1 from 5 = [0]
>sampler selecting 1 from 3 = [1]
>sampler selecting 5 from 5 = [2, 1, 3, 1, 1]
>sampler selecting 1 from 3 = [2]
>sampler selecting 2 from 5 = [1, 2]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 1 from 5 = [3]
>sampler selecting 2 from 5 = [3, 4]
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [3, 0, 2, 0]
>sampler selecting 1 from 3 = [2]
>sampler selecting 4 from 5 = [0, 4, 2, 1]
>sampler selecting 3 from 3 = [2, 0, 2]
>sampler selecting 3 from 5 = [4, 3, 2]
>sampler selecting 3 from 5 = [0, 0, 4]
>sampler selecting 5 from 5 = [1, 0, 1, 0, 3]
>sampler selecting 2 from 3 = [1, 0]
>sampler selecting 1 from 5 = [0]
>sampler selecting 1 from 5 = [4]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 2 from 5 = [1, 1]
>sampler selecting 1 from 5 = [0]
>sampler selecting 1 from 3 = [1]
>sampler selecting 1 from 5 = [0]
>sampler selecting 2 from 3 = [2, 1]
>sampler selecting 1 from 5 = [4]
>sampler selecting 2 from 5 = [1, 3]
>sampler selecting 3 from 3 = [1, 2, 0]
>sampler selecting 5 from 5 = [2, 0, 4, 2, 4]
>sampler selecting 3 from 5 = [2, 0, 4]
>sampler selecting 1 from 5 = [2]
>sampler selecting 1 from 3 = [2]
>sampler selecting 1 from 5 = [2]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 4 from 5 = [3, 1, 0, 3]
>sampler selecting 3 from 3 = [1, 1, 1]
>sampler selecting 4 from 5 = [0, 0, 3, 1]
>sampler selecting 2 from 5 = [0, 3]
>sampler selecting 3 from 5 = [2, 1, 4]
>sampler selecting 1 from 3 = [2]
>sampler selecting 3 from 5 = [0, 1, 3]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 4 from 5 = [1, 2, 3, 0]
>sampler selecting 3 from 5 = [2, 3, 3]
generation =  0
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.461813242871
| | |-finished  1  forest. fitness = 0.684081913252
| | |-MSE =  0.443740460757
| | |-finished  2  forest. fitness = 0.692645269133
| | |-MSE =  0.454495739463
| | |-finished  3  forest. fitness = 0.687523498948
| | |-MSE =  0.567632259697
| | |-finished  4  forest. fitness = 0.637904708719
| | |-MSE =  0.524866263531
| | |-finished  5  forest. fitness = 0.655795215565
| | |-MSE =  0.56582705008
| | |-finished  6  forest. fitness = 0.638640135862
| | |-MSE =  0.51735334323
| | |-finished  7  forest. fitness = 0.65904227546
| | |-MSE =  0.451919271962
| | |-finished  8  forest. fitness = 0.6887435268
| | |-MSE =  0.622741985542
| | |-finished  9  forest. fitness = 0.616240911315
| | |-MSE =  0.597909499774
| | |-finished  10  forest. fitness = 0.625817669988
| | |-MSE =  0.574775484169
| | |-finished  11  forest. fitness = 0.635011155592
| | |-MSE =  0.585744158277
| | |-finished  12  forest. fitness = 0.630618750686
| | |-MSE =  0.478555003542
| | |-finished  13  forest. fitness = 0.67633601564
| | |-MSE =  0.499708592118
| | |-finished  14  forest. fitness = 0.666796206447
| | |-MSE =  0.43853350341
| | |-finished  15  forest. fitness = 0.695152387921
| | |-MSE =  0.564178078079
| | |-finished  16  forest. fitness = 0.63931339661
| | |-MSE =  0.45252449996
| | |-finished  17  forest. fitness = 0.688456545847
| | |-MSE =  0.439307684443
| | |-finished  18  forest. fitness = 0.694778476353
| | |-MSE =  0.644626584491
| | |-finished  19  forest. fitness = 0.608040761003
| | |-MSE =  0.432147912516
| | |-finished  20  forest. fitness = 0.698251899305
avg =  0.660959536022 max =  0.698251899305
|-spawn
selected for crossover -> 0.635011155592 0.687523498948
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.67633601564 0.698251899305
>sampler distinct selecting 4 from 4 = [0, 1, 0, 0]
selected for crossover -> 0.6887435268 0.687523498948
>sampler distinct selecting 1 from 3 = [2]
selected for crossover -> 0.67633601564 0.684081913252
>sampler distinct selecting 4 from 4 = [0, 1, 0, 0]
selected for crossover -> 0.6887435268 0.694778476353
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.6887435268 0.666796206447
>sampler distinct selecting 2 from 4 = [2, 1]
selected for crossover -> 0.67633601564 0.684081913252
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.638640135862 0.687523498948
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.6887435268 0.630618750686
>sampler distinct selecting 2 from 3 = [1, 1]
selected for crossover -> 0.692645269133 0.698251899305
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.638640135862 0.692645269133
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.666796206447 0.695152387921
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.63931339661 0.692645269133
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.698251899305 0.65904227546
>sampler distinct selecting 2 from 3 = [2, 0]
selected for crossover -> 0.637904708719 0.630618750686
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.637904708719 0.635011155592
>sampler distinct selecting 2 from 3 = [0, 1]
selected for crossover -> 0.63931339661 0.698251899305
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.638640135862 0.666796206447
>sampler distinct selecting 2 from 4 = [0, 2]
selected for crossover -> 0.637904708719 0.625817669988
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.638640135862 0.63931339661
>sampler distinct selecting 1 from 4 = [2]
|- mutate
generation =  1
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.466132532837
| | |-finished  1  forest. fitness = 0.682066578296
| | |-MSE =  0.450668968193
| | |-finished  2  forest. fitness = 0.68933714164
| | |-MSE =  0.455332901878
| | |-finished  3  forest. fitness = 0.687128009481
| | |-MSE =  0.581909470612
| | |-finished  4  forest. fitness = 0.632147425992
| | |-MSE =  0.576181712083
| | |-finished  5  forest. fitness = 0.634444615322
| | |-MSE =  0.588297027371
| | |-finished  6  forest. fitness = 0.629605157453
| | |-MSE =  0.669949825321
| | |-finished  7  forest. fitness = 0.598820386599
| | |-MSE =  0.429677961365
| | |-finished  8  forest. fitness = 0.69945821858
| | |-MSE =  0.44036102651
| | |-finished  9  forest. fitness = 0.694270381935
| | |-MSE =  0.549474455505
| | |-finished  10  forest. fitness = 0.645380113526
| | |-MSE =  0.572877539041
| | |-finished  11  forest. fitness = 0.635777404902
| | |-MSE =  0.552048075814
| | |-finished  12  forest. fitness = 0.644309938322
| | |-MSE =  0.552841797425
| | |-finished  13  forest. fitness = 0.643980604887
| | |-MSE =  0.456716433905
| | |-finished  14  forest. fitness = 0.686475402299
| | |-MSE =  0.477873589555
| | |-finished  15  forest. fitness = 0.676647858834
| | |-MSE =  0.469753993968
| | |-finished  16  forest. fitness = 0.680385972145
| | |-MSE =  0.554827899143
| | |-finished  17  forest. fitness = 0.643157998741
| | |-MSE =  0.58963911053
| | |-finished  18  forest. fitness = 0.629073601282
| | |-MSE =  0.56072037826
| | |-finished  19  forest. fitness = 0.640729764235
| | |-MSE =  0.511362586933
| | |-finished  20  forest. fitness = 0.661654594765
avg =  0.656742558462 max =  0.69945821858
|-spawn
selected for crossover -> 0.629073601282 0.686475402299
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.644309938322 0.687128009481
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.661654594765 0.643157998741
>sampler distinct selecting 2 from 3 = [2, 0]
selected for crossover -> 0.640729764235 0.682066578296
>sampler distinct selecting 1 from 3 = [1]
selected for crossover -> 0.68933714164 0.629073601282
>sampler distinct selecting 3 from 3 = [1, 1, 0]
selected for crossover -> 0.644309938322 0.645380113526
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.686475402299 0.634444615322
>sampler distinct selecting 3 from 4 = [0, 0, 1]
selected for crossover -> 0.645380113526 0.634444615322
>sampler distinct selecting 2 from 5 = [3, 2]
selected for crossover -> 0.661654594765 0.68933714164
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.68933714164 0.694270381935
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.661654594765 0.686475402299
>sampler distinct selecting 3 from 3 = [1, 0, 0]
selected for crossover -> 0.680385972145 0.68933714164
>sampler distinct selecting 5 from 5 = [0, 2, 1, 0, 0]
selected for crossover -> 0.629605157453 0.640729764235
>sampler distinct selecting 2 from 4 = [3, 0]
selected for crossover -> 0.640729764235 0.634444615322
>sampler distinct selecting 4 from 4 = [2, 1, 0, 0]
selected for crossover -> 0.629073601282 0.686475402299
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.643980604887 0.598820386599
>sampler distinct selecting 3 from 6 = [4, 1, 0]
selected for crossover -> 0.643980604887 0.598820386599
>sampler distinct selecting 1 from 6 = [4]
selected for crossover -> 0.694270381935 0.634444615322
>sampler distinct selecting 4 from 5 = [1, 0, 0, 0]
selected for crossover -> 0.629073601282 0.676647858834
>sampler distinct selecting 5 from 6 = [0, 0, 2, 2, 0]
selected for crossover -> 0.632147425992 0.69945821858
>sampler distinct selecting 2 from 3 = [0, 0]
|- mutate
generation =  2
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.58779634538
| | |-finished  1  forest. fitness = 0.629803691707
| | |-MSE =  0.584726918788
| | |-finished  2  forest. fitness = 0.631023546167
| | |-MSE =  0.459845780436
| | |-finished  3  forest. fitness = 0.685003863697
| | |-MSE =  0.483173850158
| | |-finished  4  forest. fitness = 0.674229794365
| | |-MSE =  0.587860656815
| | |-finished  5  forest. fitness = 0.629778183437
| | |-MSE =  0.448277556615
| | |-finished  6  forest. fitness = 0.69047538259
-+=> 0 <=+-
>sampler selecting 3 from 3 = [1, 2, 1]
>sampler selecting 1 from 5 = [1]
>sampler selecting 3 from 5 = [1, 2, 3]
>sampler selecting 4 from 5 = [3, 1, 4, 3]
>sampler selecting 3 from 3 = [1, 2, 1]
>sampler selecting 2 from 5 = [2, 4]
>sampler selecting 4 from 5 = [0, 3, 3, 3]
>sampler selecting 5 from 5 = [0, 0, 3, 1, 0]
>sampler selecting 1 from 3 = [2]
>sampler selecting 1 from 5 = [0]
>sampler selecting 1 from 3 = [1]
>sampler selecting 1 from 5 = [2]
>sampler selecting 3 from 3 = [0, 2, 0]
>sampler selecting 3 from 5 = [2, 0, 3]
>sampler selecting 1 from 5 = [3]
>sampler selecting 4 from 5 = [1, 3, 4, 3]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 4 from 5 = [3, 3, 4, 0]
>sampler selecting 3 from 5 = [4, 3, 3]
>sampler selecting 1 from 3 = [2]
>sampler selecting 5 from 5 = [2, 3, 3, 1, 3]
>sampler selecting 3 from 3 = [1, 2, 1]
>sampler selecting 1 from 5 = [4]
>sampler selecting 5 from 5 = [2, 2, 2, 1, 1]
>sampler selecting 3 from 5 = [3, 2, 3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 2 from 5 = [3, 1]
>sampler selecting 2 from 3 = [1, 2]
>sampler selecting 5 from 5 = [1, 1, 3, 1, 3]
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 2 from 3 = [0, 2]
>sampler selecting 4 from 5 = [3, 3, 2, 3]
>sampler selecting 4 from 5 = [1, 4, 4, 3]
>sampler selecting 1 from 3 = [2]
>sampler selecting 3 from 5 = [3, 0, 1]
>sampler selecting 3 from 3 = [2, 0, 1]
>sampler selecting 4 from 5 = [1, 2, 1, 3]
>sampler selecting 4 from 5 = [0, 0, 4, 2]
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 5 from 5 = [3, 3, 3, 3, 0]
>sampler selecting 1 from 3 = [1]
>sampler selecting 5 from 5 = [3, 1, 2, 1, 4]
generation =  0
|-act
| |-starting evaluation, training and validation
-0.0310210572893
0.509118785103
0.486862533439
0.68332048191
0.517937842593
0.533675849613
0.781728550101
0.44478627813
0.69691606979
0.678178386403
0.567359434646
0.224055269818
0.657018970514
0.38855689406
0.520951437656
0.513247538653
0.476766621636
0.407345658593
0.467499603091
0.296838016436
0.23061704534
0.248112476138
0.378058138156
0.460294870558
0.192592152285
0.334609652677
0.337896810791
0.162982065746
0.181168018375
0.341719969658
0.367079907136
0.333117608903
0.216147177591
0.229293036704
0.00847529658299
0.275701158991
0.152151904217
0.0991994526971
0.346286861788
0.0814871321517
0.279446251982
0.0539491410644
0.111246763902
0.0103404752466
0.0293562869199
0.31468721165
0.14692816694
0.15782332424
-0.0699068101568
0.420750046074
0.293133257298
0.0227434972578
-0.0800665938369
0.184253314879
-0.0304962350851
0.105432772657
0.0696548794942
0.0216254050032
-0.024717378819
0.19080728448
0.0974123526825
-0.0223655847214
0.290197142383
0.2625240433
0.147479267911
-0.0443404558131
-0.0409450534685
0.077238569934
0.178083060744
0.0861802482882
-0.0360234103306
-0.0513219833838
0.049352621011
0.175911195393
0.041187099961
0.353485619928
0.0950311705853
-0.0345200503567
0.0452033742796
-0.00596981286166
0.176918040973
-0.0852361803201
0.00892848767419
0.152246452578
0.0929251247564
0.245053467602
0.349720821341
0.00254379828558
-0.180932396594
-0.0282839929631
0.0193010394899
0.168908136184
-0.0560334354446
0.0820344341004
-0.00860852240376
0.0309177457615
0.0806915816236
-0.0501310192375
0.176652297518
0.15868807945
-0.00816175700181
0.308390083926
-0.0714794740196
0.0150280023481
-0.092594597572
0.0116929257135
0.0836332578337
0.00617725612714
0.0451114524918
0.246314480051
0.258410100155
0.292353143733
0.0190238577931
-0.0361767238802
0.0969705533283
-0.0665086942955
-0.0160626941008
0.151366877011
0.176993171946
-0.013903108664
0.0514811429231
-0.0701508493142
0.232762015036
0.126184008692
0.155680286064
0.0599360823351
0.278327796783
0.0764044768476
-0.121965285291
-0.00414828895159
0.0427206700472
0.21917925403
-0.0387130809419
-0.067747666283
0.0999885959097
-0.0640979118082
0.183894562894
0.11291622052
0.0359685744784
0.231390208559
0.236991721191
0.148042719921
-0.0554807527951
0.106853997794
0.181578405744
-0.076344922913
-0.0187963514999
0.125552788045
0.0424178277193
0.114817585727
-0.0894951679298
0.205084324894
0.0180513953661
0.0883878910069
0.209569320759
0.148084616706
0.165045314855
0.0250368562716
0.000539958191766
0.00189868664059
-0.125657163109
0.0384697381932
0.175393397701
0.154884769609
-0.105385988702
-0.0637995917992
0.182851188349
0.103235252183
0.0450320141952
0.0479630591729
0.284971876329
0.0117348562062
0.125887824239
0.072121502213
0.163316041132
0.0714126449482
0.0759560402095
0.117134000409
0.00992684826096
0.200505762006
-0.0491011204908
0.161642255035
0.0604034880772
0.178131132486
0.101958895487
0.253887819058
-0.0162345805265
0.00748391996494
0.0795707537908
-0.023705699957
0.315397972756
-0.204755426332
0.0169494441024
-0.174486470468
0.194515572591
0.0852080464827
0.12333989814
0.320681062545
-0.0572635995839
0.017083809686
0.132052081973
0.0957412113038
0.115122482585
0.11883440396
0.24551041235
-0.0487288447016
-0.0393458294775
0.00748555499889
-0.00470276077924
-0.0161941685123
-0.0306028931651
-0.00911728417801
0.107553145045
0.115488677653
0.349214425694
0.166449262533
-0.129645426277
-0.221823520585
0.147841020741
-0.0316045603307
0.22275159275
0.00496210522897
0.00054195388382
0.253084937734
0.146350609419
-0.00277441457723
-0.0116286777538
-0.0256638266996
0.178427503064
0.106560019877
0.0901609232264
0.00120040547569
0.216365736112
-0.0297395222075
0.115122063431
0.13598422967
0.0147982689065
0.136598231256
0.146174741669
0.22107489606
-0.0176405087255
-0.127980503379
0.029067434525
0.0341314622369
0.0183674850405
0.0175568391064
-0.133574883033
-0.110556570359
0.0421151874103
-0.145510082978
0.140352302687
-0.12706634784
-0.117651209881
-0.102514241822
0.0223221405129
0.00306100893804
0.388744344765
0.0120631371897
0.146141824341
-0.0216780346526
-0.0521967135936
-0.160744214301
-0.0205271458794
0.289578905908
-0.120361921447
0.08099488094
0.0844572242454
0.0682076614539
-0.0104543794673
0.0474451130546
0.0113620053161
-0.00783642000117
0.0922134226212
-0.0813350401257
0.0234391963263
0.0822910707408
0.0615009856458
-0.00690961927235
-0.0255984189711
0.19858932972
0.0308712828199
0.0418827979697
0.239341366772
0.276664617344
-0.0106180079448
0.243400456063
0.168906039423
0.102681063316
0.24355127337
0.0428028170227
0.204776673302
-0.0476385411448
-0.0505115035694
0.135873831549
-0.00779034767409
0.0218638950511
0.12777148775
0.0116724349382
0.267482873348
-0.034415518175
0.143567183725
0.200595666742
0.085382727914
-0.166271260177
0.0499409172111
-0.114818790063
0.131066332523
0.0425060817705
0.0944006000304
-0.0167645174704
0.0391241915358
0.228006597486
-0.0330099178528
0.131926138459
0.135835436015
0.05695519981
0.00397166275787
-0.0169787107591
0.0822055224179
0.17924338018
-0.0659777000463
0.0599844833934
0.103587762884
0.197371303649
0.10829673434
0.156061119447
0.0738133056165
-0.0165917907023
0.040856524049
0.0338993709442
0.0218598118275
0.14774498252
0.153323410375
-0.107094684553
0.202247316241
0.0807620417174
0.137512545267
-0.0926663529381
0.0255067615705
0.052874743413
0.0687025403538
0.391095139897
0.254362847026
0.0349836796159
0.0619971252782
0.00803753699914
0.0844571402257
0.0856841988706
-0.0230671207982
-0.0415000898513
0.0872866215355
0.0891496878281
0.0591862697366
0.146719702228
0.0895214395278
-0.0627659670236
0.138834171656
-0.0971451968469
0.0957686581258
0.374976545536
0.187646762088
0.126845793813
0.0222742413203
-0.0319985953438
0.0755540729148
0.267390310079
0.114092872542
-0.0393972060619
0.0965020886958
-0.171613169038
0.129592898728
0.136984483618
0.0536561995828
-0.000343507600699
0.0955875963611
-0.0328403350617
-0.108346427384
0.285318986814
0.200310117183
-0.0323927508445
-0.101116576828
0.0961096103587
0.216094155867
-0.0585162177607
-0.0918172483285
-0.109851047309
-0.0138692622073
0.0530538457896
-0.0441357190776
0.0220647072621
0.086755483229
0.210782673252
-0.0306849034141
0.164672284131
-0.132873285155
0.066522340654
0.200985345011
0.0510525749098
-0.0713590197701
-0.0167232167402
0.117669354083
0.0383121427945
0.262687165498
0.167269711668
0.0315409291128
0.109225010375
0.0127716838531
0.0143660060955
0.112600877619
0.0723456688065
0.152636466945
0.171116422045
0.252661026096
-0.259784650148
-0.163975364738
-0.154887942097
-0.0537889520233
0.0479525283001
0.0766534401448
0.13109890261
0.180415599241
0.0608613114691
-0.00223989986522
0.0116157288334
0.0693713937936
-0.120264384891
-0.0936000852303
0.0353953498803
-0.0631136604253
0.0979032412188
0.176375237424
-0.0535092890528
0.0594546338
0.0145336085058
0.0128098840019
0.0653525522637
-0.0145023780695
-0.036355581562
0.16955104267
0.117926179475
0.0524921852855
0.147381674128
-0.0493307700987
0.110333765298
-0.0860182907393
-0.102212770486
0.0737901709453
-0.0135891288996
0.0411644511273
0.0709152995715
-0.138378336101
-0.118413786486
0.136377195065
-0.0342139279222
-0.105732133324
0.0314606495268
-0.032449019066
-0.155326758415
0.17182104807
-0.0438182992577
0.0530722705041
-0.122885221658
-0.0235347379753
0.115160974308
0.138905492272
0.0360644402631
-0.0645327061214
-0.0237084287206
0.00761319522463
0.107067548931
0.0345031224107
-0.0425089669876
0.00844192682763
0.0785294966516
0.180625398749
0.0468371882685
0.0767343330366
0.26534556195
-0.0436609743877
0.0492711222052
-0.099868309279
-0.100425292627
0.0320738721089
-0.131257701802
-0.0124184023509
-0.115727334206
0.0520717309238
-0.154066816441
-0.123503918058
-0.0805302360949
-0.00127111246313
0.0355300595482
0.0338972985968
-0.0149237022649
-0.0163367178055
-0.154104747685
0.030762115768
-0.0805722774858
-0.106558376287
0.206788737287
0.165197436556
-0.0234880731665
0.191643221548
-0.0198418872147
0.0395030852167
0.0448886642973
-0.0593382740333
0.114455873585
-0.016765987798
-0.00563436237183
0.16856092626
-0.0347954225332
0.0249699685602
0.0640915996231
0.143546165425
-0.0970129351241
-0.180688130566
-0.184126917756
0.234037998457
-0.0315921308081
0.140804395003
0.101666302733
0.0512319330341
0.0691710016676
0.0397271595428
0.0628227288811
0.0464342015369
0.0385700123784
0.147414996417
0.139065733755
0.220687830418
0.134156204346
0.0754278116177
-0.0938864894785
-0.171253455698
-0.0454384985747
-0.0283827445946
0.0180707944209
-0.273462645913
0.0461118044465
0.101254046665
0.0465457157781
-0.162368743742
-0.164016741003
0.0832028631344
0.101540356204
0.116084438392
0.0664925349612
-0.106162343648
-0.0100018597137
-0.00012220782045
-0.0700372332857
0.0485336470375
0.22317410583
-0.00878941759383
-0.172278518824
0.0570922590985
0.0907314161602
-0.10109152557
0.0260687001158
0.0129839433432
-0.0665833302809
0.266247808525
-0.159475547517
0.0217270503631
-0.0949399351627
0.131149641563
0.047157404133
-0.119946006939
-0.0738872962257
-0.106016854658
0.109922691514
-0.0637334486286
0.214264138754
-0.0707660525832
0.132137385466
-0.158897537143
0.104442782067
-0.0608357246391
0.0727717203573
-0.0598587434041
-0.151280342334
-0.151701590172
-0.170468733449
0.0531140150459
-0.155355155638
0.172103946922
-0.174624020067
0.032347165005
-0.0253088454893
-0.101129370515
0.136668103615
0.137622110448
0.0163231967635
-0.0305972554778
0.0719490162185
-0.00743275176892
-0.0496154671618
-0.00825555665523
0.0227067319815
-0.0378858623868
0.0548563753052
-0.0636521401029
-0.0850362177423
-0.0581664478488
0.109348398446
-0.0533963157338
0.0657355410012
-0.00482822069298
0.0368011087338
-0.131475344687
0.154691576154
0.244868080084
0.235038635982
0.269231666189
0.0918358613166
-0.0897746148002
-0.0604946590668
0.0843028858169
-0.158084657877
-0.0343888146276
-0.0263307960258
-0.139956659246
-0.0373573816916
-0.0608053369094
-0.0154818796234
-0.0233447984432
0.230949742649
0.140718206108
0.0838824463207
0.15155801719
-0.0697887833024
0.0299280887754
-0.0542435784422
-0.08844816646
0.267497467467
-0.0644466924552
-0.0213367844866
-0.0585044865888
0.101900168454
-0.158210185825
-0.12731136195
0.11130941912
0.0587603587126
-0.149956158592
0.120909223696
-0.00476064976116
0.139098529179
0.121571967757
0.199086086549
0.101516704929
0.0533293366643
0.0596937290951
0.0684585945065
-0.0746803133297
0.0704583897413
0.019940516446
-0.165992535199
0.0900232062874
0.0137837441542
0.173128019954
0.130316935768
0.121208943546
0.0719824369866
-0.11035901282
0.200448842378
-0.0663851748828
-0.178830949304
-0.0995789978686
0.040539853567
-0.248822271611
-0.0370211622231
-0.104334920089
-0.0966224633018
0.0691194236724
-0.180632444026
0.135368732818
-0.0296266453361
0.161890818313
-0.236182387081
0.0506359116669
0.111361129427
-0.253977028819
0.0781718645647
-0.0709127693195
-0.157718427121
0.15781756606
-0.131181166693
-0.0909215734944
-0.125363546896
0.0882719545305
-0.114594059938
0.0359591976873
-0.0803744702491
-0.185160385383
0.119330524067
-0.0440930217426
0.0687632029149
0.0644841280614
-0.0743828539572
-0.275911856983
-0.114380699633
-0.200981610989
0.125519014964
-0.0578004939445
-0.144846587565
0.116780555379
0.043048641453
0.058614017463
0.00510094649058
-0.0130943835186
-0.161629601096
0.077954266933
0.0724631770356
0.171443628729
-0.170950323049
-0.0927513487318
0.245021703071
-0.101184854163
-0.134336944244
0.0598471692658
0.00880251879851
-0.191544970872
0.0432132925377
0.060791498007
-0.0959255544705
-0.130150795056
-0.0208675962157
-0.0405561380673
-0.0125403586708
-0.0191126041564
0.00931680989784
0.094728065038
-0.163887401866
0.0916465041217
0.130630166508
-0.163262650303
0.0990533795896
-0.102678294853
-0.0146818736801
0.132269794394
-0.187106974392
0.156083910991
-0.062398019655
-0.00318749331161
0.0448131098148
-0.185497985436
-0.0582187496508
0.118380817417
0.0516267029753
-0.235936451691
-0.12459297303
-0.16158493802
-0.0294972032108
0.0174070981985
0.142970580154
0.147558971914
-0.277642250336
0.173123097981
0.143210165011
-0.106281419324
0.116674183359
0.08774903563
-0.144690604758
0.12451669626
-0.156557131501
0.0106497939033
0.0410123758391
0.073854465534
-0.102308151926
-0.0622363800632
-0.0573767461587
-0.0451129590726
-0.00957254334158
-0.0740095321586
-0.100549274763
-0.187593201531
-0.142448032775
0.0300407042656
0.146107741952
0.168267723027
-0.0104369036294
-0.115315998986
-0.0921906759369
-0.212354959982
-0.123146349133
-0.111958350158
-0.0607592470438
-0.0739474519767
-0.195186740433
-0.18887759326
-0.0706972055022
-0.0889948286528
-0.0981278939535
0.0719210262163
0.0862134417894
-0.18855216771
-0.107091491552
0.072747175586
0.0584112960937
0.203367857565
-0.173542126307
0.115175961255
-0.100615149464
0.00336440819161
-0.00678689746078
-0.112784727635
-0.121961438334
0.0270733845798
-0.0946014331792
0.114934500607
-0.0205769835901
-0.0990791822115
-0.135080025431
-0.136224854677
0.0322325945858
-0.0716451233817
0.0985090160775
0.0354113811585
0.0264890865192
-0.14209151467
-0.0341900049214
-0.0510487083513
-0.0313608421541
-0.0510664327526
0.105863783783
-0.0138262008951
-0.0350495058019
0.0776756708319
-0.223215637521
-0.0244595885489
-0.116875959571
-0.0241008083115
-0.0373095400686
0.088081741298
0.0395042213276
-0.0910954925952
0.0455747357976
0.0879330112952
-0.13734371696
0.028577334219
-0.0996997635258
0.132859827769
0.0390639233964
0.113351017978
-0.166980468153
-0.114421056395
0.0930240154328
-0.208627726578
0.16275847867
0.0842635592695
-0.0973556620202
-0.0558533900869
0.0413512749061
-0.149613499855
-0.15710341943
-0.0457153198214
-0.0518158271298
-0.0562725681731
-0.00666827924388
-0.0135792872808
0.00221675528675
0.108508852367
-0.179611396184
0.0187553529645
-0.0747380927959
-0.0528196354195
0.153143998268
-0.175915237077
-0.0483729872484
-0.0585386040924
0.0867427593196
-0.0889648701203
0.103292179033
0.047093711895
0.0104194630507
0.0750275122941
-0.120301055786
-0.142573538434
0.0885919746787
-0.0132816381536
0.198725845896
-0.119315176904
0.0712812620145
-0.0999092820618
0.295784007029
0.0172323584192
-0.0845701753672
-0.191113598139
0.0685745386845
0.0236388165666
0.0804618200526
-0.306310314568
-0.0224751482108
-0.0551012249858
0.0388073842186
0.112767539602
-0.15279425785
-0.183001241773
-0.172623829794
-0.101646492264
0.151701700968
-0.194963147235
-0.0807500375739
-0.213942057829
0.0364241037426
-0.0292006553258
-0.0627586566641
-0.0867131129225
-0.166182608281
0.161585102826
0.141052510696
-0.235801762026
0.065495398957
0.152587739854
-0.220865606253
-0.0564757987359
-0.148952546551
-0.121523435745
-0.106584428207
-0.138026338535
0.0278237020937
-0.230772417405
-0.178496049598
0.0776172099552
-0.0467255075218
0.0523009837671
0.140601674894
0.0598878748268
-0.0186263789819
-0.110056685605
-0.153184914612
-0.0947355194985
-0.256981514326
-0.0915926759762
-0.118514957298
-0.164634537511
0.16668655994
0.0797979639452
-0.147101028412
-0.212328797518
-0.152891568358
-0.120323002601
0.118550674547
0.0212367991855
0.0237552781134
-0.25153092717
-0.143898714828
-0.0649971420503
-0.135311722399
0.0660506977244
-0.135987159612
0.149315869213
-0.0840505803179
-0.174918065499
-0.0312912427023
0.0107391843814
0.171917981973
0.149331844049
-0.0329234972572
-0.138962348472
-0.163362950971
-0.0727326908093
-0.0999961341288
0.000741380378613
0.130441485051
-0.0636350524383
-0.118488500534
0.000495959419098
0.0302238299366
-0.0510599865796
-0.220792373746
0.0650246430526
-0.0865728100755
-0.0864991547579
-0.108114277926
0.0655677020923
-0.152344961798
-0.052102959782
-0.19366056659
-0.124763391509
0.101212799011
-0.109079534165
-0.014439883229
-0.237418975
-0.0461320724934
-0.131726267924
-0.0492785484671
0.0671316482061
-0.0725229506348
0.105738693784
-0.149310702483
-0.199444351968
0.0402725841393
0.0901205287203
-0.0394814796179
-0.308452060015
0.0251029020556
-0.0115563154079
-0.0765095813637
| | |-MSE =  0.516259981638
| | |-finished  1  forest. fitness = 0.659517504986
0.0863860395119
-1.15662951334
-0.453573094446
-0.443732847948
-0.433769453053
-0.458406961643
-0.469808069194
-0.385385150974
-0.314479297103
-0.265966090739
-0.268437161486
-0.417809548736
-0.0722755743553
-0.407797887475
-0.40136235692
-0.0409287218342
-0.0608643949755
-0.35924977349
-0.355827492383
-0.209814118333
-0.257712311181
-0.281892078729
-0.272019108023
-0.33551629873
-0.248796638731
-0.269652336731
-0.341229019889
-0.277853209505
-0.0727049411693
-0.200793779805
-0.270106678774
-0.19823504106
-0.178936893667
-0.308123291358
0.071625513136
-0.00460691410441
-0.160417654579
-0.0113094284399
-0.172192695491
-0.241881540945
0.051438426674
-0.128339609493
-0.113939803415
-0.111966105322
-0.159352948789
0.0162067559315
0.0425631982818
0.0726906971709
0.119255307122
0.270295072959
0.305451371446
0.101564555707
-0.223165863011
0.0123057017004
-0.0403047491964
0.21351420059
0.0969218710702
-0.0111839690981
0.000272950579595
0.0345036941311
0.0106829652152
-0.0382359954171
-0.023433076691
-0.00984884723149
-0.0148051268607
-0.0509027893415
-0.00101357893801
-0.0959715280841
-0.168782537872
-0.0151060245447
0.0204304924289
-0.15950295422
-0.0150334009657
-0.155959963174
-0.0134446072182
-0.136184763577
-0.142695058965
0.0130268846824
-0.00197723044891
-0.0362093767444
0.0454033131948
-0.0826805867353
0.0452885871498
0.0205002703191
0.0156768845291
0.245310356288
0.244704713805
0.215550237122
-0.0534125903883
0.0616699556225
0.060401532267
0.0663337462322
0.0571405351449
-0.0297133148331
0.0603313253933
0.0472387641442
0.0622315684229
0.0700627861538
0.0645425117186
0.0719397450113
-0.0290201059942
0.0540151739232
0.258981429174
0.130158705977
-0.0640458819301
0.179889904757
-0.0367353170741
0.0567634463067
-0.019813085688
0.0390825162974
-0.0845703808774
0.037326400947
0.0627267097955
0.0592090373151
0.0583171319453
0.0572050393197
0.0516563407022
0.242240081499
0.238859209335
0.234535283163
-0.0367272802479
0.0427111788823
-0.0544530352387
-0.0425333267653
-0.00687632868013
-0.0622303905786
0.0258000022712
-0.0427687980619
-0.00694823462975
0.00574053200476
-0.00561644945092
-0.0484792960137
0.196523490063
0.150871387609
0.281232153697
-0.160220772344
-0.0627019323224
0.0759622024172
-0.0679296663528
-0.137457697935
0.0598622612003
0.139663230232
0.144047231476
-0.0580932992623
0.0993058818989
-0.127029725276
0.0860392941835
0.059347349459
-0.0915193186264
-0.10160233757
-0.12542950969
-0.205451043666
-0.183418195778
-0.144138978606
-0.162100701999
-0.245260496484
-0.0154666102347
-0.0907059943531
-0.0750506437107
-0.236255622182
-0.323864180608
-0.21350271492
-0.218220479992
-0.302311209219
-0.245525148659
-0.16853489257
-0.0384010605502
-0.212537795538
-0.370239640883
-0.0519717800764
0.159697366531
-0.115278641754
0.0716353660096
-0.348997425553
-0.305952366232
-0.392630576302
-0.397981725931
-0.335313076809
-0.10479980084
-0.186428558723
-0.192230670058
-0.188954978408
-0.387604667538
-0.260170940687
-0.220224927132
-0.293099645117
-0.412168028542
-0.439779913151
-0.300518182311
-0.358293586019
-0.0199848206365
-0.330895362429
-0.293381732721
-0.526727983361
-0.491205974899
-0.194418489583
-0.180346301173
0.0375650149647
-0.346757001769
-0.351701760417
-0.231579114682
-0.257051780375
-0.573001830778
-0.527407287832
-0.174304352461
-0.495996024328
-0.493326744193
-0.507442850488
-0.516530935885
-0.552680804641
-0.205752006726
-0.505083221377
-0.0833796166744
-0.0603711200038
0.127722242541
-0.232466792527
-0.11096931909
-0.275061839547
0.051972943676
-0.382093238242
-0.0314790938395
-0.526691903644
-0.438171441428
-0.328235193064
-0.149826174549
-0.220175460759
-0.487902219442
-0.510747243612
-0.45168769331
-0.0622027890796
-0.143229627071
-0.47218471085
-0.495929832678
-0.274696497896
-0.0422722838702
-0.440891844774
-0.480463591347
-0.52496547012
-0.268353201495
-0.451508737552
-0.455613094128
-0.541519182569
-0.364746449208
-0.529766502047
-0.527495393955
-0.496384199142
-0.352709240028
-0.383941645963
-0.322279015303
-0.55479700546
-0.563074763209
-0.502775242849
-0.508762089106
-0.547322938012
-0.512474424343
-0.497730430993
-0.512656010612
-0.49342887211
-0.0823036681124
-0.382726363799
-0.34224398325
-0.303518653101
-0.211657460502
-0.374248431839
-0.479764865689
-0.134956048173
-0.42583188066
-0.190633249626
-0.431733451922
-0.398077128407
-0.428552715758
-0.47054288337
-0.378877041895
-0.431696787338
-0.235144857907
-0.377655614019
-0.33569761838
-0.0398253736141
-0.117862316521
-0.164208768034
-0.358625810216
-0.302685226729
-0.315551283037
-0.10091456776
0.0769805114271
0.137941748662
-0.07991723968
-0.31437709552
-0.207456015697
-0.245812323179
-0.315711933625
-0.106366425107
-0.191291708115
-0.305978975134
-0.16066105023
-0.151578807285
0.0329002381232
0.00488675770675
0.0456003086303
-0.109793199902
0.103473820828
0.108477950431
0.0933583454987
-0.0632471927322
-0.225677388247
-0.0844583387882
-0.0256413027644
0.120410155715
0.130921321425
-0.056273389424
-0.14264918543
-0.160932335096
-0.0145303139027
-0.0450767294981
0.0136069824641
0.0112272363995
-0.00411770820185
0.0232399436465
-0.0200079956029
0.0380302171508
-0.0166127202976
0.0625174445163
0.0271996608925
-0.0329309671327
-0.0698122951532
-0.0270968920963
0.230323820976
0.262372228256
0.280314154569
0.0766426601728
-0.0893987255189
0.206492233188
-0.0879415411262
-0.0161869148604
0.115586102971
0.118398165875
0.0178826682196
0.0661303665569
0.0132868628465
0.117291204104
0.105935887186
0.180121824372
0.237285331151
0.203710289629
0.116717071254
-0.0633617489904
0.0336916139601
-0.00732539106496
0.0702758022955
0.0794875497646
0.123046943874
-0.0191478631415
0.0730487245558
0.111206332131
0.122629697914
0.0493295605297
0.118078759069
0.115636070577
0.00999131024786
0.103679305857
0.106382337701
-0.0150741660062
0.0768980665294
0.0930736260015
-0.0510915677905
-0.0176328255953
0.252489826517
0.179871860616
0.147890205101
0.0469701275884
0.173299890768
-0.138341249922
0.107012543734
0.215333969172
0.21650974168
-0.111925378672
0.00488370347092
-0.0594128521848
-0.0810351244824
-0.0123469336218
-0.0180730248476
-0.141321085941
-0.0816407723202
-0.15294459314
-0.0774920670832
-0.0818143770073
-0.0754171784786
-0.144278082473
-0.0885860737157
0.0983981663347
0.0272014946825
-0.113401562924
-0.131577819398
-0.0851220262935
-0.249889820642
-0.216310441166
-0.19334897945
-0.247656193298
-0.221520577797
-0.281851829808
-0.354848747532
-0.175481154505
-0.0717099780022
-0.149074121487
-0.268427113242
-0.328754957495
-0.347036339338
-0.401534497673
-0.0860832363242
-0.395954762592
-0.193539951004
-0.153525236013
-0.154495375708
-0.354517121994
-0.377848879461
-0.124350962271
-0.478381403206
-0.0489722998679
-0.138119105664
-0.156656028565
-0.491240178154
-0.411513998136
-0.259902808612
-0.4389243101
-0.428624963423
-0.237954810853
-0.452420389701
-0.523128385021
-0.176231223221
-0.527266311483
-0.0506204436443
-0.0435862418471
-0.332683734562
-0.515714377806
-0.475599659786
-0.452646998489
-0.153000420543
-0.232171803762
-0.166720332315
-0.50813008613
-0.505818618447
-0.190541891317
-0.0456049028286
-0.0260774537355
-0.00986869346504
-0.433423508578
-0.38240589668
-0.470011042278
-0.433913359462
-0.341922886208
-0.27453689095
-0.17574454143
-0.265977461602
-0.381677720878
-0.288043746436
-0.29155350032
-0.294511229042
-0.263404568543
-0.18950161496
-0.194776800597
-0.286997849335
0.0927317085763
-0.155330075367
0.073883834415
-0.204152849233
0.131516010221
-0.0886758676535
0.0484186486789
0.0570234466583
0.0880227523216
-0.0282497254562
0.16617955806
0.340946248329
0.368953892666
0.419621368951
0.223957623547
0.209780928681
0.378227387123
0.497519575688
0.523661181374
0.284379362249
0.379427264634
0.433673494752
0.455755342679
0.454304323839
0.488752892248
0.482204505864
0.436491539743
0.533319294804
0.431279242259
0.485977840339
0.56824267777
0.581441024546
0.567029799062
0.593692002252
0.717290675984
0.605377110056
0.651585887449
0.597183303946
0.624274723852
0.631935921473
0.550963497417
0.634011227366
0.630234311308
0.63077296576
0.515089650913
0.624502213204
0.611501053339
0.482104023285
0.593205718366
0.441453790978
0.582521076854
0.586676890703
0.399691261079
0.573102319403
0.542700926265
0.544506449217
0.535959769364
0.467977691397
0.589888913649
0.604780868076
0.570103745368
0.440835375731
0.424888961842
0.228216941559
0.340384591193
0.272191651526
0.318650438799
0.291674514649
0.288787025864
0.269690216
0.416295752306
0.380193895376
0.138104982307
0.0863818552423
0.268252153295
0.0979608378416
0.126851650858
0.0506757463565
-0.114344612059
-0.07266624885
-0.0864625625254
-0.220115821401
-0.0730372814273
-0.248004886276
-0.172097061166
-0.292672964196
-0.221347096932
-0.218984508762
-0.203378202671
-0.324556644312
-0.213548756555
-0.213797104667
-0.235115532454
-0.295123116107
-0.387448035265
-0.315157733778
-0.316711940715
-0.0985759834055
-0.389487918256
-0.377501764073
-0.348315909462
-0.37137685059
-0.292495558217
-0.465144790415
-0.23190709209
-0.381928452123
-0.0818179773813
-0.418837079314
-0.399494235756
-0.114708281786
-0.459232595895
-0.41075418907
0.0282278900436
-0.0856030449786
-0.445303977246
-0.373082743927
-0.317380906604
-0.407619016234
-0.427465333944
-0.156029397411
-0.129880671788
-0.243662283642
-0.294706547023
-0.177285599422
-0.26797041691
-0.237691969676
-0.360222844522
-0.244781219308
-0.31697726403
-0.192161782838
-0.143234422531
-0.295955479698
-0.282550936274
-0.275342139344
0.0733302209471
-0.100814458905
0.223811865162
-0.141745858187
-0.150854303455
-0.0471790852428
-0.0517425358887
-0.0188484091331
-0.00936096073557
0.00918813285258
0.372910438364
0.360107176906
0.124575740585
0.0603450126798
0.0565165396454
-0.00433855234915
-0.0226200209983
0.0196277362118
0.306836871824
0.281321513599
0.173243323182
0.153455692727
0.159826296932
0.164473978858
0.151541622713
0.0473048686914
0.182426324139
0.165623504079
0.198311011751
0.220256113947
0.07336308898
0.149717819997
0.0699767025258
0.0618926506575
0.0692818836213
0.182961655021
0.205143584028
0.252724430596
0.237360388085
0.257268826701
0.252773204496
0.281453449599
0.291146088634
0.293710247831
0.23744126392
0.13991161089
0.0808609987147
0.295470207392
0.384947560816
0.363262237915
0.329137733441
0.286084013533
0.183192672315
0.115790798333
0.297093536064
0.26833261336
0.130417964227
0.289966959502
0.208976134692
0.244972223496
0.0717414977813
0.229729070901
0.147779850849
0.122077824022
0.238319691092
0.0546707900421
0.138255502739
0.041784884845
0.0749938126399
0.228074612099
0.174719762046
0.208185427887
0.18587954557
0.294772143246
0.309046622252
0.128780654666
0.0947140954824
0.0757666768551
0.129654516859
-0.0595309118492
0.134330667512
0.19542533086
0.247025872182
0.279098475201
0.400487554693
0.308261739502
0.235854145731
0.0019073627802
0.0196633497021
-0.00324738360576
-0.15411218239
0.015926193666
-0.0417516712294
0.0692256014735
-0.130370158678
-0.1185917889
-0.107351716053
-0.252616134212
-0.17040283281
-0.264095218424
-0.174256460476
-0.231339876822
-0.0453752611472
-0.100912522479
0.164967830804
-0.21280298109
0.0709383251473
-0.24193721373
-0.0493829490878
-0.300401536823
-0.324583424559
-0.262595819275
-0.377504388322
-0.30178909668
-0.360834378485
-0.385007083087
-0.107874011026
-0.244561673255
-0.108786759773
-0.171460417005
-0.299407114461
-0.293123973935
-0.362558272785
-0.277890332716
-0.316006726663
-0.259713089977
-0.224960916847
-0.288265667152
-0.195322301496
-0.197214619327
-0.221980294075
-0.150419893757
0.00615540991699
0.0450440175073
0.130856124277
0.156373309441
-0.00742688924855
-0.0205757847918
-0.00614007502531
-0.0408576648641
-0.003316156256
0.106398388939
0.0264680146397
0.159217236005
0.143566935207
0.387618375438
0.366848639634
0.510293137606
0.378096985663
0.31325932556
0.439059722034
0.462577050383
0.600164544959
0.640442003008
0.674666030272
0.434158982712
0.587181077248
0.565937749447
0.589214381522
0.686210467571
0.719216447055
0.762003376378
0.748045529538
0.762733344567
0.719200771813
0.633577360696
0.671790780539
0.713326521595
0.674447774248
0.691368902069
0.683254246118
0.721532255367
0.717169648765
0.565252218516
0.773600011007
0.662625154472
0.774511109619
0.58572373956
0.43332305188
0.629853231287
0.585299105238
0.503447944472
0.513370012192
0.578873821772
0.739513297075
0.686364627059
0.431403799408
0.420638107313
0.334552169368
0.289533617384
0.301881184066
0.168310606384
0.170092563177
0.186015360497
0.130769196991
0.0979838013795
0.0265219699116
0.0150904085269
-0.148772498828
-0.056901029101
-0.199283153813
-0.223769627462
-0.23763534967
-0.256340078519
-0.206759623497
-0.338807912789
-0.212870717774
-0.286608314853
-0.283229537867
-0.312435332926
-0.237211762857
-0.230251992818
-0.213990144504
-0.297082806772
-0.180966396455
-0.148080375893
0.0825597579312
0.270168093403
0.180244230136
0.104072793573
0.190204323558
-0.0343141690788
-0.0377686781405
0.0807716358569
0.15450507283
0.162383140227
0.527770814451
0.590328942558
0.47781257141
0.270433385793
0.41197096285
0.55916570265
0.600757960639
0.63334390698
0.549960158731
0.572643930066
0.572668761792
0.518129646804
0.543965212195
0.562951931241
0.673593559439
0.695991834412
0.70620728353
0.678882949431
0.727133405519
0.682061839804
0.739736261177
0.799989830511
0.824018334094
0.819685144981
0.702616460529
0.729037053099
0.687741231229
0.732798606372
0.708497285149
0.622870581126
0.658708484415
0.682882126882
0.601310271301
0.623495775174
0.643087861142
0.630018540174
0.500530354702
0.577920526937
0.563073732702
0.525940885473
0.388757351768
0.413506603073
0.419746133179
0.418567979728
0.380087649906
0.353413707404
0.324962107727
0.267115434487
0.0441974276371
0.193056431594
0.175911817981
0.00135868405362
0.0497354361782
0.0686002775413
0.0539800546201
0.0145365996854
-0.00701948531758
-0.0260279857377
-0.043466403871
0.113621417938
-0.204386793928
-0.159086576039
-0.234249261533
-0.277635657558
-0.189666576216
-0.289978616283
-0.255690489829
-0.316450136828
0.020401743783
-0.0906733431552
0.206517537033
-0.0113350825657
0.0107926668254
-0.207460212713
-0.217927527662
-0.279574453563
-0.266401886038
-0.287383020442
-0.211970446237
-0.131572283094
-0.224390478491
-0.24352978245
-0.103830801595
0.116416752808
0.111148894635
0.130497539594
-0.0548180332129
-0.0521309397656
0.0495015730196
0.179653566918
0.0934099384873
0.236850311234
0.422965442335
0.397495066633
0.28408447501
0.238772830039
0.47198406594
0.479838848242
0.370608588115
0.341606244897
0.321937089961
0.210393176767
0.0752903588904
0.405747352518
0.31741906917
0.431912433072
0.138861994688
0.145466893327
0.45328369985
0.58712405963
0.444552570911
0.564316085779
0.108876229393
0.464739510082
0.28321690856
0.367535395253
0.490554891911
0.385104784586
0.344010751293
0.371331505067
0.361176305075
0.410500378304
0.519933552292
0.506198302099
0.507296688616
0.306380251259
0.429542417176
0.368005921887
0.327117377474
0.365056583177
0.418012167246
0.429614314647
0.391639494417
0.304854461551
0.303649776487
0.394932333681
0.552787493804
0.525943148989
0.51783157222
0.568881553114
0.5641177158
0.391166376087
0.409713198734
0.40793448035
0.375731154625
0.337819057884
0.289192392654
0.373857950513
0.362482042992
0.283671957633
0.253058694586
0.284089546524
0.339820568493
0.434164483727
0.48051685477
0.544268934596
0.438910707427
0.408563232566
0.142892700375
0.237590195733
0.402240081735
0.402375137226
0.30229866073
0.131480760811
0.171903249904
0.00689981684525
0.117921524194
0.103404890153
0.0977240854859
0.0439517514399
0.0819102255231
0.012709175688
0.0887000764089
0.15721733105
0.130117060403
-0.0148308259247
-0.0317808132729
-0.332233113567
-0.373863498536
| | |-MSE =  0.414019328482
| | |-finished  2  forest. fitness = 0.707203911473
-0.363116283105
-0.341548837091
-0.335008703428
-0.328929144399
-0.323113626873
-0.323113626873
-0.317463444493
-0.311921478816
-0.30645173525
-0.301030254299
-0.290270872476
-0.284913054673
-0.279561186026
-0.27421116492
-0.27421116492
-0.268860229635
-0.263506652642
-0.258149518536
-0.252788558509
-0.247424024161
-0.242056589734
-0.236687274677
-0.231317381517
-0.225948445282
-0.220582191774
-0.215220502873
-0.209865387101
-0.20451895477
-0.199183396619
-0.193860965682
-0.188553961014
-0.18326471414
-0.177995576963
-0.172748911033
-0.167527078538
-0.162332434126
-0.157167317709
-0.152034048468
-0.146934919378
-0.141872192525
-0.136848095024
-0.131864815641
-0.1269245019
-0.122029257489
-0.117181140389
-0.112382160996
-0.107634281253
-0.0982994191584
-0.0937161102194
-0.0803236484376
-0.0759841828881
-0.0759841828881
-0.0717097043412
-0.0633617133044
-0.0633617133044
-0.0633617133044
-0.0552912209777
-0.0513634482804
-0.0437293012629
-0.0437293012629
-0.0400253874795
-0.0400253874795
-0.0363984909613
-0.0328497502043
-0.0328497502043
-0.0293802701958
-0.0259911239412
-0.0226833547629
-0.01945797758
-0.0163159812584
-0.013258329985
-0.0102859654661
-0.00739980864617
-0.0046007612424
-0.0018897079587
0.00073248224648
0.00326495416343
0.00570686482662
0.0080573820474
0.0103156827786
0.0124809516187
0.0145523797163
0.0165291632003
0.01841050227
0.020195599968
0.0218836610463
0.0234738915024
0.0263576843039
0.0276496570877
0.028840619065
0.0299297719629
0.0299297719629
0.0309163157872
0.031799448759
0.0325783675649
0.0332522674532
0.0338203430141
0.0342817885956
0.0346357989863
0.0348815706276
0.0349614644422
0.0349614644422
0.0349614644422
0.0349614644422
0.034458982673
0.0340386934288
0.0335046982479
0.0328562606368
0.0320926619489
0.0312132041703
0.0302172130223
0.0291040408026
0.0278730699077
0.0265237161427
0.0250554324456
0.0234677127612
0.0234677127612
0.021760095958
0.019932170045
0.0179835765806
0.0137232475493
0.011411103676
0.00897748541698
0.00642237212673
0.00374582594301
0.000947996827301
-0.00197087184002
-0.00501043788966
-0.00817025471586
-0.0114497657707
-0.0148482988556
-0.0148482988556
-0.0183650605777
-0.0219991304809
-0.0257494555736
-0.0335939632211
-0.0376853270905
-0.0418872982197
-0.0461980789353
-0.0461980789353
-0.0506157071839
-0.0551380520625
-0.0597628090389
-0.0693094504577
-0.0742258240887
-0.0792335819781
-0.0843294995065
-0.0895101604757
-0.0947719560484
-0.100111084421
-0.105523551142
-0.111005169947
-0.116551565082
-0.122158174197
-0.127820252015
-0.127820252015
-0.133532875727
-0.139290951018
-0.14508921935
-0.156784533417
-0.162670325511
-0.168573827361
-0.174489115556
-0.180410174566
-0.180410174566
-0.186330913397
-0.192245183766
-0.198146799792
-0.209887261963
-0.209887261963
-0.215713739879
-0.221502873841
-0.227248621524
-0.238586320386
-0.244166794536
-0.24968097887
-0.255123589588
-0.260489568326
-0.260489568326
-0.265774104678
-0.270972657254
-0.276080972955
-0.276080972955
-0.286011422776
-0.290826633238
-0.295537780331
-0.304637798986
-0.304637798986
-0.309022498958
-0.309022498958
-0.313294786731
-0.317453428879
-0.325426446462
-0.332937873415
-0.336520540485
-0.339988345494
-0.339988345494
-0.343341917273
-0.346582053194
-0.349709690978
-0.355631751839
-0.358428494879
-0.358428494879
-0.358428494879
-0.358428494879
-0.357519894847
-0.355081037392
-0.352693681824
-0.35036325744
-0.34809532182
-0.34589552269
-0.343769558972
-0.341723141246
-0.339761952103
-0.337891606592
-0.332879957123
-0.330089502425
0.0659316254245
0.0659316254245
-0.326820847699
-0.326820847699
-0.325991238656
-0.325991238656
-0.325296949091
-0.325296949091
-0.324740583366
-0.324324316362
-0.32408792641
-0.32408792641
-0.32408792641
-0.32408792641
-0.324388837336
-0.324833225834
-0.325419997317
-0.326147588823
-0.327013978115
-0.328016695838
-0.329152841145
-0.330419100075
-0.331811767506
-0.333326771924
-0.334959703274
-0.336705843801
-0.338560201687
-0.340517547206
-0.340517547206
-0.342572451518
-0.3447193275
-0.346952472625
-0.351654450947
-0.354111707902
-0.356632174909
-0.35890176002
-0.35890176002
-0.35890176002
-0.35890176002
-0.355973905316
-0.352918190923
-0.349732231557
-0.346413654715
-0.339369438097
-0.335639447572
-0.327754009006
-0.323595327721
-0.323595327721
-0.31929096748
-0.314840045867
-0.314840045867
-0.310242039845
-0.30549681807
-0.300604669443
-0.29556632767
-0.290382991519
-0.285056339851
-0.27958854231
-0.273982264397
-0.268240667718
-0.262367405487
-0.256366612863
-0.244001299643
-0.237647314226
-0.231186821931
-0.224626083402
-0.224626083402
-0.217971704747
-0.197517292667
-0.190560183562
-0.183546494891
-0.176484206222
-0.176484206222
-0.176484206222
-0.169381407654
-0.162246267645
-0.155087002052
-0.147911844735
-0.140729020161
-0.133546717203
-0.126373065238
-0.112083804276
-0.104983967894
-0.0979242934666
-0.0839554281259
-0.0839554281259
-0.0770608183715
-0.070235513006
-0.0634863433486
-0.0634863433486
-0.0568199448109
-0.0437609968863
-0.037380704308
-0.0311076934935
-0.0249475768103
-0.0249475768103
-0.0189057613388
-0.0129874504359
-0.00719764654966
-0.00154115442871
0.00397741493143
0.00935364006301
0.0145832839583
0.0196622890746
0.0245867716866
0.0293530162407
0.0339574692322
0.0383967332077
0.0426675605623
0.0467668474218
0.050691627213
0.0580064503184
0.0613911931282
0.0645908163692
0.0676029515193
0.0676029515193
0.0704253328265
0.0730557928085
0.0754922573236
0.0777327417347
0.0797753467238
0.0816182552271
0.0832597293693
0.0846981081088
0.0859318053351
0.0869593083718
0.0883900456412
0.0887906187409
0.0887906187409
0.0887906187409
0.0887187506456
0.0887187506456
0.0882667166579
0.0875990753065
0.0867150177178
0.0856138302834
0.0842949008226
0.0827577251204
0.0810019148126
0.0790272055757
0.0768334662611
0.0744207088518
0.0717890988441
0.0689389669571
0.0658708207402
0.0625853577805
0.0590834789161
0.055366302286
0.055366302286
0.0514351780137
0.0472917035361
0.0429377391553
0.033607194001
0.0286357958039
0.0286357958039
0.0234643066258
0.0180961498363
0.0125351124844
0.000851463203615
-0.00526160614645
-0.011548439407
-0.0180031864626
-0.0246195402168
-0.0313907242847
-0.038309482001
-0.0453680679132
-0.0525582406632
-0.0598712588075
-0.0672978792558
-0.0748283590466
-0.0824524601796
-0.0824524601796
-0.0901594589886
-0.0979381591953
-0.105776909819
-0.121585827286
-0.129530650553
-0.137484909802
-0.145435130712
-0.153367603474
-0.161268438925
-0.169123630156
-0.176919118985
-0.176919118985
-0.184640866487
-0.192274927269
-0.199807525889
-0.214514550906
-0.221662973529
-0.228658074977
-0.235488068675
-0.242141769766
-0.242141769766
-0.248608646829
-0.254878863351
-0.260943307549
-0.272422141199
-0.277822009971
-0.282987026515
-0.287911666593
-0.292591015505
-0.29702070046
-0.301196811913
-0.305115815078
-0.308774454137
-0.312169650608
-0.315298398413
-0.318157656995
-0.320744244638
-0.323054732588
-0.325085341339
-0.326831839249
-0.32828944325
-0.329452720997
-0.33031549365
-0.330606233143
-0.330606233143
-0.330606233143
-0.330606233143
-0.329840592282
-0.328715918387
-0.327217806508
-0.325330178554
-0.323035145646
-0.320312874831
-0.317141466997
-0.313496855847
-0.309352738847
-0.304680553381
-0.299449512061
-0.293626711674
-0.287177329729
-0.28006491998
-0.272251815473
-0.263699642737
-0.244224900271
-0.23322813021
-0.22134555408
-0.208546278071
-0.208546278071
-0.19480347316
-0.180095208554
-0.164405205431
-0.147723479228
-0.130046846822
-0.111379283252
-0.0917321227009
-0.0711241091073
-0.0495813100004
-0.027136915285
-0.00383094652914
0.0202900957884
0.0451736200705
0.0707613442104
0.096989689502
0.123790157786
0.15108968452
0.20687279093
0.235190308728
0.263675373416
0.292236847154
0.292236847154
0.349211640743
0.377431032772
0.405339857152
0.432837961614
0.432837961614
0.45982484851
0.486200241598
0.511864673954
0.53672008742
0.560670431558
0.583622253008
0.605485263874
0.626172882388
0.64560273746
0.663697131952
0.680383462634
0.695594593484
0.709269183607
0.731794015125
0.740552898782
0.747592898535
0.752885122388
0.752885122388
0.756243072926
0.756243072926
0.756243072926
0.756243072926
0.752608619831
0.747201148888
0.74004147803
0.731157549656
0.720584366633
0.708363898131
0.694544950899
0.679182999673
0.662339974008
0.64408399668
0.624489070206
0.603634709632
0.603634709632
0.581605521838
0.558490730999
0.534383655838
0.48358295917
0.457091168016
0.430009474644
0.40244257599
0.374495513513
0.346273042814
0.317879030278
0.317879030278
0.289415882591
0.260984014508
0.232681354644
0.176840228315
0.176840228315
0.149481215245
0.122609522501
0.096304272682
0.0456844920358
0.0215019097664
-0.00185114188312
-0.0243242466322
-0.0458738956039
-0.0664638033744
-0.086065147901
-0.104656709312
-0.122224884818
-0.138763561489
-0.154273837511
-0.168763591027
-0.168763591027
-0.182246906222
-0.194743375254
-0.206277303289
-0.226573138746
-0.23539938034
-0.24339002493
-0.250579987604
-0.257003957572
-0.262695807132
-0.267688107157
-0.272011748201
-0.275695662141
-0.278766635704
-0.281249204151
-0.283165612936
-0.284535835384
-0.284879210624
-0.284879210624
-0.284879210624
-0.284879210624
-0.283744691287
-0.28214165844
-0.280077430825
-0.277558208465
-0.274589280374
-0.271175240061
-0.267320208139
-0.263028059135
-0.25830265023
-0.253148048082
-0.247568749793
-0.235157453614
-0.228338416683
-0.221120932506
-0.213514438099
-0.213514438099
-0.205529750745
-0.197179128516
-0.188476297946
-0.179436448714
-0.170076197362
-0.160413521971
-0.150467671554
-0.14025905357
-0.129809104272
-0.119140145759
-0.0972380052694
-0.0860525143381
-0.0747430852308
-0.0633341604562
-0.0633341604562
-0.0518501602863
-0.0403153518725
-0.0287537288489
-0.0171889029977
0.0172963410938
0.0286486157579
0.0398947119426
0.0510149143952
0.0510149143952
0.0510149143952
0.0619903203136
0.0728028594436
0.0834353066998
0.104095276508
0.114092590654
0.123849377197
0.133352597526
0.133352597526
0.142590006981
0.15155013151
0.160222241644
0.168596324279
0.176663052562
0.184413754614
0.191840380997
0.198935471901
0.205692123482
0.212103955095
0.218165075729
0.223870052245
0.229213877404
0.234191939695
0.238799994027
0.243034134652
0.246890768833
0.250366593303
0.253458572677
0.256163919658
0.258480078357
0.260404709684
0.26193567981
0.26307105122
0.263624424211
0.263624424211
0.263624424211
0.263624424211
0.262759367837
0.261491095264
0.259819052302
0.257742922352
0.255262646499
0.25237844635
0.249090851094
0.245400726728
0.241309309266
0.236818240567
0.23192960717
0.226645981956
0.220970468269
0.214906746739
0.208459123657
0.201632581903
0.19443283319
0.186866371059
0.186866371059
0.178940525487
0.170663517275
0.162044512559
0.143822226262
0.134242480827
0.12436790966
0.114213176733
0.103794180507
0.103794180507
0.0931280886993
0.0931280886993
0.0931280886993
0.0822333662644
0.0711297960705
0.0483818923088
0.0132644315882
0.0013970726446
-0.0105042418761
-0.0105042418761
-0.022409801601
-0.0342889565207
-0.046110243727
-0.0694501901853
-0.0809032585347
-0.0921676511831
-0.103210356065
-0.1139986454
-0.124500284883
-0.134683736496
-0.134683736496
-0.144518346809
-0.153974513213
-0.163023819701
-0.17979466342
-0.187465947619
-0.194629810088
-0.201264238729
-0.207348210004
-0.212861453342
-0.217784158703
-0.222096632568
-0.225778908864
-0.228810322333
-0.231169053179
-0.231169053179
-0.231967844516
-0.231967844516
-0.231967844516
-0.229707736357
-0.226550527905
-0.222449065977
-0.222449065977
-0.217351723986
-0.211202486445
-0.203941234122
-0.195504263296
-0.185825067512
-0.174835399083
-0.162466611498
-0.148651264414
-0.133324948271
-0.116428264835
-0.0979088791416
-0.0558400273214
-0.0322387748231
-0.00691437901924
0.0201233160777
0.0201233160777
0.0488483946256
0.0792183310726
0.111173679025
0.144637923157
0.179517433666
0.21570147881
0.253062274114
0.330718370865
0.370674175358
0.411128589332
0.451872599182
0.451872599182
0.492683230421
0.533325069429
0.613110252226
0.651739341159
0.689176430148
0.725158415671
0.725158415671
0.759425004642
0.791721569171
0.849430525182
0.874385371083
0.915462530678
0.931223227665
0.931223227665
0.943589776678
0.95243155036
0.95243155036
0.95243155036
0.95243155036
0.95243155036
0.950739205164
0.950739205164
0.940814247463
0.92708663592
0.909605254397
0.863729565387
0.835588639477
0.804201823307
0.769776708199
0.73255244293
0.73255244293
0.73255244293
0.692798202557
0.650810846906
0.606911757164
0.467238857797
0.419247351679
0.37116297445
0.323356433884
0.276189294759
0.230009746124
0.185148700396
0.141916067489
0.100597020791
0.0614481335653
0.0246934135687
-0.00947952305878
-0.0409226773264
-0.069529678953
-0.0952359550919
-0.118016583856
-0.137881667807
-0.154869450163
-0.169037757482
-0.180454592221
-0.189188769571
-0.195301399097
-0.195301399097
-0.195301399097
-0.195301399097
-0.194145852041
-0.187410271904
-0.177999044904
-0.165833385978
-0.150827408344
-0.0879958753985
-0.0308637117842
0.00221564519116
0.0381781613179
0.0381781613179
0.0381781613179
0.0768737145067
0.0768737145067
0.118109607223
0.161653785486
0.303303800844
0.353104439945
0.40359345964
0.454381342426
0.454381342426
0.454381342426
0.555241529589
0.604497256586
0.652430765381
0.698650708626
0.698650708626
0.742783424201
0.784478283981
0.823412230137
0.859293359913
0.891863509925
0.920899875563
0.94621576435
0.967660626153
0.985119523408
0.998512206594
1.00779194595
1.00779194595
1.00779194595
1.00779194595
1.00394811623
0.993045960333
0.978383798366
0.960115160184
0.938417669368
0.913491754622
0.885559141664
0.854861057876
0.821656099213
0.786217729876
0.748831414644
0.709791417164
0.669397329782
0.627950431028
0.58574999191
0.543089663311
0.500254079127
0.45751579519
0.415132657724
0.373345658562
0.332377292164
0.292430390309
0.253687376192
0.216309859537
0.180438489984
0.146192996503
0.113672365525
0.0829551401908
0.0540998564944
0.0271456548641
0.002113119086
-0.0209946110472
-0.0421904241074
-0.0615015204632
-0.0789674290506
-0.0946378265711
-0.108570251257
-0.120827815062
-0.131477019197
-0.140585763642
-0.148221622123
-0.148221622123
-0.154450427825
-0.154450427825
-0.159335191022
-0.162935346671
-0.162935346671
-0.160379840957
-0.160379840957
-0.156320657909
-0.156320657909
-0.151318991878
-0.145407173367
-0.138617263516
-0.130981649157
-0.122533568351
-0.113307549953
-0.103339755443
-0.0926682157334
-0.069376059484
-0.0568415329098
-0.0437752283435
-0.0302245921215
-0.0302245921215
-0.00186645676255
0.0128407497573
0.0584657493771
0.0740070201974
0.0740070201974
0.635119244351
0.635119244351
0.65470339908
0.152037690338
0.167394731149
0.182572210633
0.182572210633
0.182572210633
0.197532627054
0.197532627054
0.226662525733
0.240767317718
0.254525655474
0.267910322518
0.267910322518
0.30557957608
0.328411597838
0.33908941417
0.349254844717
0.349254844717
0.349254844717
0.367996333812
0.367996333812
0.376549508412
0.384544334197
0.391972156313
0.391972156313
0.398825266013
0.405096812067
0.415871600208
0.42036470326
0.424255827804
0.427541276582
0.427541276582
0.430217804412
0.432282577208
0.433733140084
0.433733140084
0.433733140084
0.433733140084
0.434380300607
0.433356469421
0.433356469421
0.431711389157
0.42944474698
0.423047713036
0.41417234964
0.408810055111
0.402835314518
0.39625214703
0.389065530794
0.381281512497
0.372907323768
0.363951502918
0.354424021384
0.344336413306
0.333701907529
0.333701907529
0.322535559889
0.322535559889
0.310854384498
0.298677482337
0.272924074083
0.245474409581
0.245474409581
0.231186676845
0.216568001965
0.201655034539
0.171106631442
0.155558285354
0.139889744075
0.12415119678
0.108395298814
0.0926770070421
0.0770533755884
0.0615833111168
0.0615833111168
0.0463272901321
0.0313470408528
0.0167051960425
-0.0113104410234
-0.0245577823843
-0.0372145330505
-0.0492189838589
| | |-MSE =  0.388854558846
| | |-finished  3  forest. fitness = 0.720017797134
0.0753360923925
0.0749839019849
0.0610788970983
0.0836503317748
0.0728844845741
0.0764459507794
0.0805883664667
0.0654739071136
0.0594915862388
0.0801060801459
0.0610477864928
0.0583203080978
0.067655377501
0.0771919309294
0.0505827403018
0.0758834413095
0.0185206097287
0.0605995081705
0.0448729534075
0.0662223337711
0.0763217827872
0.0771500423211
0.0662431363084
0.0590562304766
0.0598134738842
0.0628813270703
0.0634000638633
0.0745133292585
0.0750127665109
0.0572202351665
0.0391093716271
0.0495069773442
0.0674883547381
0.054168013193
0.060292431444
0.0588382595456
0.0591330330046
0.0390923339004
0.0802360433002
0.0764944714035
0.0757019120005
0.0600569323975
0.0963972779357
0.0285869112289
0.0583183096581
0.075992042318
0.0718363763408
0.0413456367773
0.0770827818152
0.0410066684475
0.0727721943648
0.0804375808469
0.0404152206613
0.0792103135482
0.0725108330023
0.0762583368174
0.0742095315182
0.0800316589171
0.0585044523
0.0743895957398
0.060250531609
0.0773234437313
0.0420354893962
0.0468361834477
-0.0549871309039
0.0695115659519
0.0687422267244
0.0446910110288
0.0708772206013
0.0744034139435
0.0494382667093
0.0589542854835
0.0479389929272
0.0649162031972
0.0727344960232
0.0730292011921
0.0391459560372
0.0674908161901
0.0634626307336
0.0567704918612
0.0411196788375
0.0640222335462
0.0416316564107
-0.221614419654
0.0526627525134
-0.0160070349854
0.065694045885
0.0772371593256
0.0784206792087
0.0629173375405
0.0418125156713
0.0588962302967
0.0737492054776
0.0769569649775
0.0429593006185
0.0590135791847
0.0796374962972
0.0226495177535
0.0391237060388
0.0591655018495
0.0752184807555
0.0797967402136
0.0924466454172
0.0704816333481
0.0409982056248
0.0510007988669
0.0715191354175
0.0583829549326
0.0682843531693
0.079082401096
0.0413789097204
0.0594249050299
0.0713262220255
0.0658809069812
0.080082637912
0.0748098939508
0.076028783841
0.0805839036496
0.0584125569194
0.0955137505713
-0.137234768705
0.0729718059911
0.0769002374097
-0.394994383311
0.0803232175095
0.0583997995249
0.0737575508753
0.0631255212447
0.062658557813
0.0454335785403
0.0729060441706
0.050552026224
0.0752122689275
0.0738144500498
0.0747618005218
0.0325863652483
0.0767402189499
0.0616638879855
0.0639960025461
0.0720645108548
0.0754945640326
0.0591763652739
0.0636861927267
0.0461700920477
0.0774782088286
0.0429307672557
0.0770020696098
0.0786482253447
0.0759391617913
0.0242810556535
0.0408244717941
-0.136043848721
0.0748680405766
0.0718208355492
0.0751758296923
0.073642858542
0.0742577119216
0.0597887682136
0.0723203653881
0.0417402924731
0.0599238138812
0.0759985880915
0.0805116094076
0.026459681798
0.0637290739174
0.0803574286379
0.056935535966
0.0725093067918
0.0700556532817
0.0771298139109
0.0412561574006
0.0525213670506
0.0751003716341
0.0705817542183
0.0554881639225
0.0309436693014
0.0612034540367
0.0588423231703
0.0537970885139
0.0429247774465
0.0794922299952
0.0391119863781
0.0555613808697
0.0625635606648
0.0760410034625
0.0801824988522
0.0722663888815
0.0584463232688
0.0773040042259
0.0437297227335
0.0637881050585
0.0734898657629
0.028019624118
0.0629762512146
0.0737907520283
0.080098046407
0.0686038935891
0.0693690615733
0.0583813601604
0.0725512085268
0.0752661628236
0.0438838471374
0.062101542657
0.0767351748047
0.0727602843695
0.0772063509981
0.0785898244114
0.0749483213921
0.0662362319204
0.0762863159154
0.0691917110688
0.0773357003439
0.0583269478589
0.0422955228126
0.0590300065887
0.0741844592336
-0.000460247296164
0.0436632059632
0.0592048971227
0.0584964588369
0.0776358990691
0.0804182585051
0.0725446750821
0.0734119085266
0.0605176967901
0.0767023545661
0.0969259980853
0.067417875002
-0.0136084517947
0.0804117311364
0.041316951557
0.0591254465118
-0.0788664288451
0.0783071116677
0.105730292711
0.0262558175549
0.0712742369889
0.077320371764
0.132664353003
0.0694173094254
0.0766584225786
0.0627110023785
0.0726884231122
0.0597403256145
0.0692540967175
-0.0541015140796
0.0427149050144
0.0451165963327
0.0624405779538
-0.0520178639781
0.0745060893542
0.0575112282633
-0.239918330678
0.0513594062837
0.239635687075
0.0796835291713
0.0293189458285
0.0756505773631
0.0760653316782
0.0798846221727
0.0698526389674
0.0584895480708
0.0711604903939
0.0518065476886
0.0805114815133
0.0755640887312
0.0621043781397
0.0804577226996
0.0598716888342
0.066300107083
0.0590554110459
0.0733428913331
0.0770299319667
0.0672845685477
0.0670122532959
0.0591369925828
0.0393668204673
0.0432037133961
0.0583500795359
0.0756683138412
0.0659574495493
0.0804476648665
0.0649126392896
0.0461215103186
0.0747720098612
0.0722348337976
0.0764239683728
0.104853974843
0.0719114814675
0.0614796129206
0.0467040211013
0.0564218779721
0.059493764802
0.078451389182
-0.0598888685154
0.0805941104503
0.0608385448124
0.0600803320556
0.0755863913048
0.0705223980754
0.0479880811073
0.068736237773
0.0586198762317
0.059175234883
0.0694666012273
0.0772338466646
0.041072679415
0.0675655795343
0.0390919903742
0.0583767677082
0.0747235093373
0.0562966016618
0.0769357946195
0.0397226924942
0.0752894749481
0.0573953737641
0.0680012123301
0.0561287576235
0.0566172300803
0.0779130375723
0.0798098795994
0.0740965022826
0.0770614806565
0.0803987676861
0.080592079501
0.0723139330213
0.0798433164486
0.080266751083
0.0593410639954
0.0407313634671
0.0805142697813
-0.0132974030348
0.0498675915856
0.0710495244751
0.0421469943331
0.0500180126618
0.0643778550778
0.0584941379683
0.0746017961214
0.0804809933065
0.0398284371991
0.0619017923104
0.073420063628
0.0706068682854
0.0618057849843
0.0613061484615
0.0679395124453
0.0584378805962
0.0565658124315
0.0576674984772
0.0410772908836
0.0698472606386
0.0788017774444
0.0716938399023
0.0120921904054
0.0559603516161
0.0804936053961
0.08033609909
0.0535565264601
0.0741740788053
0.0707141000828
0.0263200568585
0.050013398899
0.0601061648365
0.059085487974
0.0561842230464
0.0716555422154
0.0728604488517
0.0500094402435
0.0434064428487
0.0668199103342
0.069428379974
0.0678825036919
0.0624131303827
-0.0325788786739
0.066384276374
0.0782694161871
0.0590009867596
0.0490510968871
0.0415171780754
0.0709132645487
0.0805940887123
0.00637988461861
0.0629969373472
0.0805712799327
0.0609129184937
0.0660848574081
0.0356123839006
0.0710277955416
0.0756340436665
0.060671960684
0.0464938636738
0.0640892773999
0.0765346215737
0.0635613726397
-0.0412597474943
0.048876678246
0.068904310049
0.0799207425805
0.0588087616438
0.0587893168934
0.0687720937783
-0.0451161424023
0.0629738397665
0.0743969807561
0.0624976775936
0.0618567548944
0.0483883258367
0.07547614153
0.0546614737395
0.0481784456872
0.0622352502046
0.0614403787107
0.0748905577134
0.0678569675687
0.0514808327214
0.0797715463007
0.0590358590224
-0.0186782670424
0.0680692822507
0.0584998631285
0.10318258414
0.0391879528692
0.0719823130567
0.0647560773163
0.0651234663798
0.0765615253226
0.0792107859083
0.0691303950886
0.0776653131833
0.0645373813889
0.078045520534
0.0454769234954
0.0402197386178
0.040227682035
0.0805872825301
0.0717790704445
0.0773771950464
0.0786221054055
0.0781245209663
0.0765490179325
0.0788840607965
0.0583587205933
0.0754152386864
0.0610849883663
0.0724913372429
0.0754492939431
0.0720980130933
0.0772866385154
0.0627867442673
0.0591581838978
0.0584848889935
0.0711632279714
0.0660676913267
0.0728037743056
0.0399382439436
0.0677834727368
0.0586133077486
0.0770263647042
0.000460541135683
0.0583624271914
0.0781992175804
0.0750613063143
0.0529899567775
0.0574829143947
0.0738125313329
0.0609623587364
0.0385930367058
0.0803713792454
0.0656324025819
0.0401693962091
0.0670124824671
0.0786647352467
0.0795233321759
0.0673285328865
0.0668953022179
0.0767832715875
0.0778225172903
0.0585893994969
0.0658285848157
0.0803314300909
0.0676476980203
0.0650975700157
-0.0207792528848
0.0412257017227
-0.0350943868592
0.0705164431576
0.0584247344634
0.0710531423669
0.0802339091013
-0.0330772564418
0.0687009407981
0.0584788599235
0.0756964799641
0.0634860549631
0.0712753274481
0.0650799097603
0.0602839806966
0.0766466165891
0.0534119478536
0.0220494582213
0.0464313068001
0.0616244506643
0.0587127319155
0.0626349941709
0.0636483574105
0.0676547232319
0.0590509840745
-0.0860837004707
0.080577333357
0.0414332619918
0.0638032753887
0.0700858882728
0.0805351464412
0.0759765354839
0.0736180794428
0.0804099310967
0.0536923397194
0.0805936237195
0.0448856158937
0.066801027769
0.0787651629181
0.0772939124678
0.0594235414907
0.0583437529354
0.0757760300671
0.0735585489816
0.067608440815
0.0458077769459
0.0608491440118
0.0795255413617
0.0609267594751
0.0798300261717
0.0667183719284
0.0759892321015
0.0628729436656
0.0638537547084
0.0734570450692
0.0392189395097
0.0585011887635
0.0402269412215
0.0771982859226
0.0734467930184
0.0680699683633
0.0704074158002
0.0800021653353
0.0608225644359
0.069323936546
0.0765671441458
0.0613430859834
0.0619114544985
0.0766914513497
0.0397435454269
0.0649359891206
-0.0569069538045
0.066062990807
0.060382070836
0.063509902242
0.074358541663
0.0682165430801
0.0794602866238
0.0127273256317
0.0772213569705
0.0625665993895
0.0696129446477
0.0805720485814
0.0804179377275
0.0762738554289
0.0632309575724
0.061099086214
0.0401491438583
0.0627358823407
0.0581029934336
0.0763636799167
0.0735974623961
0.0608289184276
0.0800367907329
0.0585467568067
0.0591528418738
0.0647286543612
0.0429464620963
0.0735169128131
0.04216819544
0.0798776956754
0.0773318439046
0.0436297751944
0.0734069375947
0.0611725868873
0.050736017327
0.0613867577652
0.0720704157709
0.0630393517577
0.0706143576532
0.0642342694502
0.0558816756468
0.0507823887861
0.0756665207686
0.0739106069302
0.0610647940831
0.0554194780918
-0.0425307249199
0.0623539809367
0.0744204599653
0.058323326627
0.0730194844789
0.0411429316581
0.0784310096169
0.0423366859483
0.0460477695027
0.0669512596095
0.0614681449358
0.0674560527703
0.0699532746852
0.0772853608187
0.0621297014772
0.0586352794451
0.0761403422893
0.0509837069319
0.0469885425129
0.0618262535353
0.043176787965
0.0583198251758
0.0665488449944
0.0448328192614
0.0748150392336
0.0748990522294
-0.0587835317432
0.0431218180859
-0.0590100437519
0.122685254519
0.0751856004379
0.0586559548985
0.0672840479001
0.0542960740569
0.0586245886743
0.0670422223671
-0.0246640422332
0.0391576315611
0.064632270715
0.0632502438925
0.0770646677209
0.0745845961037
0.0702802211914
0.0773061760769
0.0491115954944
0.0534701809803
0.0733236880499
0.0772268459684
0.0525844856139
0.0769336101154
0.0597216533091
0.0802136668077
0.071310709374
0.0701491197626
0.0636809533717
0.063478991864
0.0617970556002
0.0354544546048
0.0397391887274
0.070202197712
0.0613515287035
0.0760401963062
0.048634509015
0.122934042255
0.0658595693652
0.0804442427238
0.0370881630722
0.0419195363992
0.0693959668603
0.0583630040027
0.0696522953149
0.0646907150881
0.0768297138563
0.05857939218
0.0714389747395
0.0769849715655
0.0427032198562
0.0746536952803
0.0743840789565
-0.0530388381213
0.065768450853
0.0538175692354
-0.0026280822047
0.0435853566462
0.0739588775725
-0.0647775427493
0.0802759085878
0.0764426817384
0.0785660871659
0.0398509912618
0.0790726926241
0.0750801346449
0.0429860151433
0.072324696671
0.0621555190867
0.0761480787394
0.0583468434064
0.0656946350937
0.0753250209082
0.0781954074857
0.0473523986243
0.0605310047107
0.049102048963
0.0708798094464
0.0718868733953
0.050022201249
0.0478224615358
0.074097476779
0.0769825137741
0.0738258521345
0.0771583664145
-0.25539306755
0.0491202237878
0.0534211548055
0.0687478307333
0.090845279768
0.0586421145885
0.0801985824372
0.0754099157629
0.0690180068422
0.0623618662595
0.0670723740001
0.0390990779796
-0.081492497847
0.075703914191
0.058682734748
0.0667865630686
0.0615026163354
0.0791062160343
0.0700742596848
0.0700664812276
0.0671539370526
0.061208666884
0.0605252433516
0.075264068011
0.0643518175938
0.0783256220367
0.0773266285467
0.0604022309824
0.0769958804048
-0.0211180688289
0.0795078937415
0.0753974936946
0.0748023360585
0.0689562532411
0.0589211954069
0.0697752527302
0.0796424529641
0.0643096889528
0.0605449517786
0.0409068468099
-0.0543433472843
0.0506447283837
0.0743988251179
0.0728617297772
0.080405804887
0.0771215739211
0.0799553998068
0.0402403027585
0.0756363715457
0.0591698338311
0.0587263873572
0.0778178423036
0.047275402545
-0.111095144534
0.0634178374215
0.0657349826216
0.0603269142038
0.0760687557483
0.0584864332162
0.0393591567918
0.0727676915599
0.0760894878852
0.0804367491252
0.0720176841679
0.0486056568373
0.0598053396643
0.0725171333838
0.0391001705154
0.0218936913762
0.0803140312429
0.0714952889763
0.0650670048789
0.0539257843001
0.0415377504492
0.0483724337955
0.0444505804353
0.0753076713111
0.0756495797064
0.0489047876302
0.0653370352235
0.0391032257241
-0.0339600349012
0.0394536838195
0.0736196921071
0.0601433759623
0.0621051956073
0.0595531993943
0.0647875019955
0.0693590458398
0.0800979209682
0.0757582410658
0.0796394698465
0.0601359360665
0.0607957890767
0.0583945534495
0.0622846736151
0.0609933021661
0.0639387757536
0.060077228782
0.0767805937717
0.0635390031794
0.0709102105791
0.0747306855171
0.0591669864199
0.00657891687644
0.0770716504785
0.0801400177864
0.06361665013
0.0726291560137
0.0728393697056
0.0753065900688
0.0792567245245
0.0431446586322
0.0583686420957
0.0470112021739
-4.96017094241e-05
0.0590328206532
0.0565694830057
-0.0952583802427
0.0779540850157
0.0782934549893
0.077327678786
0.0717329625517
0.0483115455009
0.0747944225115
0.0771697532169
0.0453200135626
0.0651342096684
0.0765996532612
0.0769678599657
0.0711935557825
0.0762395580852
0.0413975613122
0.0611628293199
0.0583611329783
0.0748145971445
0.0739105386335
0.0691099416766
0.0781601258178
0.0587287430762
0.0607389486023
0.0780280098756
0.0630278812191
0.0545103662692
-0.0102962813581
0.0793009921526
0.0727177362138
0.0220235849671
0.0583307208206
0.0732673981909
0.028800892431
0.077151560979
0.0597282135438
0.0794714166844
0.0695704493992
0.0392010176193
0.0779126926395
0.0659527436026
0.0423075418044
0.075452868002
0.0593125062736
0.0611649245614
0.0800509031488
0.05945696287
0.0610463364827
0.0623143627528
0.0403648497147
0.0755999745416
-0.134517364108
0.0691941061804
0.0685189967309
0.0759208121023
0.0584090891076
0.0624370544548
0.0417909303178
0.0584931740687
0.058339990379
0.066140673318
0.0655610403724
0.0374219561387
0.0669264318065
0.0583547055058
0.0802857126084
0.042484603752
0.0583692877429
0.0410771871705
0.0614339684168
0.0618117372883
0.186048599978
-0.0164682789241
0.0406707920819
-0.00648483839721
0.0803981511216
0.0718569380318
0.0598538456193
0.0802856122214
0.0692402573542
0.0742435556514
0.0587037673842
0.058444070903
0.0590515779763
0.0621267996731
0.0509515122374
0.080513600171
0.0682790082052
0.0776943090919
0.071403681329
0.0798110488809
0.0670815690164
0.0803020619918
0.0661682399424
0.0691740237662
0.0799095200473
0.0631564411514
0.0803872372181
0.0428800977812
0.0689748954294
0.0798235684299
0.0798317717091
0.0410052846051
0.0644493183827
0.0805447972123
0.0797559306977
0.00118304106617
0.0768138352089
0.0452536726876
0.0583242410023
0.0768528634847
0.0793553709709
0.0769417809778
0.0613831792484
0.0765452320204
0.0394569623988
0.0588590656607
0.0801368824389
0.0754861747792
-0.207043806985
0.0587698794819
0.0621603473638
0.0618097542708
0.0802329595415
0.0793327014099
0.0631252559847
0.062558347367
0.0583875941969
0.0799841959702
0.0736720813489
0.076169715112
-0.0582717576869
0.0563854882826
0.0651709823307
0.0746597247735
0.0502091676274
0.0755408773915
0.0414835169547
-0.10435720194
0.0601593150533
0.0546061550679
0.0794727332945
0.037796190243
0.0424696596282
0.0457069440071
0.0595812877372
0.0745417975835
0.0472300795966
0.0663822901883
0.079843710228
0.0752261214463
0.0756713833095
0.0494076957455
0.0688739230915
0.0648336013725
0.0583182679225
0.0430009803494
0.0805680961325
0.0587269026346
0.0570703835561
0.0769276455878
0.0393246043529
-0.190067263852
0.042911356528
0.0722572544873
0.0644211703388
0.0485751796516
0.0616916594131
0.0768696147494
0.0773882936769
0.0583198717366
0.0796387151763
| | |-MSE =  0.536737170242
| | |-finished  4  forest. fitness = 0.650729363072
0.0921794222758
0.0922370095613
0.0326167259643
-0.0603656146636
-0.102280010987
0.091750953386
-0.034422612367
0.0471421320151
-0.0133946539102
0.0612382800073
0.078712919823
0.0922834789986
-0.0229644686836
0.0805939997302
0.0716327719573
0.0537698075085
0.0898104443784
-0.106315422936
0.0845572674106
0.0757206640709
0.0205208697095
-0.0583313904824
0.0838021493636
-0.0250814298605
0.0874016743381
0.0373477151578
-0.0268795708224
-0.0325244810752
0.039439176857
-0.104344169391
0.0333921192241
0.0683410585493
0.0847244990244
0.0437246190819
-0.0226369202514
0.0796683548309
0.0901419430167
0.0697719922832
-0.0533495712446
-0.0938855896029
-0.0511235713466
-0.0464286061343
0.0819388782934
-0.0859112059415
0.0393456303239
-0.0316113557825
-0.124709287702
0.0641919774413
0.0270830390115
0.0890361434083
0.0650602289505
-0.0828922890085
0.0719547946534
-0.0767626931
0.0735814098341
-0.0295502054795
-0.000383450641627
0.0414060613973
-0.0333192163236
0.0111970965074
0.0912388523003
0.0905196877014
0.0885501550915
-0.0162103428384
0.0829207450577
0.08462201605
0.0903566547368
0.0625553896226
0.0866788525986
0.0592226399724
0.0784527890637
0.0863072657066
0.0796781698413
0.0917086998524
0.0735232940186
0.0670747497795
0.0107895157345
0.0390401782426
-0.0994515282437
-0.0324253046013
0.0440525445554
0.0899168274468
0.00788582049884
0.00545858991675
0.0711396258888
0.0920925730235
0.0616009267335
-0.0562409124745
-0.0140827221922
-0.119800245972
0.0154661953486
0.0687517514148
0.0282791762462
0.0818815578333
-0.00703144638422
0.0719790420105
0.0107842630075
0.0571581608526
0.0856968595429
0.0313158351669
0.0652766034858
-0.00435642076838
0.0893905838409
0.0916875658561
0.0225367606494
0.0538860183253
0.0684197743902
0.072485191754
0.0852095097773
-0.00290077900008
0.0812376952679
0.0458797141359
0.0783007035739
0.0912966902237
0.0685345503526
0.0461528457316
0.0556514781022
0.0767714289937
-0.0259546110431
0.0563252918769
0.0508060013457
0.0909507883957
0.0916533713374
0.0905629739236
0.0559549955737
0.0425938683164
0.0529231581513
0.055311364729
0.0896696507462
0.0749101369664
-0.044562256716
0.0848734672679
-0.0427135399899
0.042480661558
0.0353459291932
0.0392769723551
-0.0167761841905
0.0217980445157
0.0508800855273
0.0825664685586
-0.0525404169306
0.026556193458
0.0921346648204
0.0507362424026
0.00694424731238
0.0847118115806
0.0920148789541
0.0240008728727
0.0828703536125
-0.0394246866885
0.0918844436259
0.043221736947
0.00529897329113
0.0740722164775
0.0801554988018
0.0862359906152
-0.0622163351407
0.0299812222674
0.0870986001928
0.0646447516135
0.0543125241206
0.0856436448741
-0.097543647199
0.0575580598546
-0.0429096529283
-0.122261509579
0.0776493753148
0.0458577899503
0.0922805456292
0.0895036049347
0.0896153497348
0.0919274891178
0.0748515925807
-0.0279886231457
0.0824214310391
-0.0575433584169
0.0665488991852
-0.0433592142744
0.0921167144415
0.0770807974057
0.0398051222772
0.0555622929113
0.0779652047379
0.0723792194363
0.0873777039472
0.0352964516504
0.0226510464639
-0.10820810298
-0.00279335148242
0.0916068066593
0.0862111152607
0.033462451437
0.0599632984738
-0.141004595631
0.083858609468
-0.0197939413759
-0.068546861074
-0.0630472188454
0.0907156327513
0.042557928198
0.0911125462807
0.0903507664955
0.064298829213
0.0917199116178
0.0890501632782
0.0793600280726
0.0815233864824
0.0722556613375
0.0817987144939
0.0876700159661
0.0873848224587
-0.0167561390063
0.0914404096221
0.0280285814714
-0.0398208624182
0.00373463258749
0.0502860987385
-0.0588795257582
0.092239736903
-0.0472401362173
0.0664182691551
0.0250496330767
-0.016265049749
0.0921220749729
0.0657000876662
0.0881586174289
0.0745620083681
0.0148839771555
-0.10488830436
0.0848933898751
-0.098772015423
0.0559428650618
0.0922958038465
0.0867688020897
0.0809843324455
0.0595043349061
0.0398753360855
0.0784692907338
0.0848629734162
-0.111665693884
-0.148522317926
0.0480268834711
0.0504141389362
0.0347100083706
0.0515168873416
-0.0537271491318
0.0524818987891
0.0571218871238
0.0053103558517
0.0807492865168
0.0709470467389
0.0828295098168
0.0838950076138
0.000258073014613
0.06779997217
-0.0616241784755
0.0861709278313
0.0863644091687
0.0773440594398
0.0457780496425
0.0840997515291
0.0443236791307
0.0884529355527
0.0721629414295
-0.0139030057534
0.0615488248218
0.0629701504958
0.0552883650125
0.0212362747203
0.0915150167907
0.0405463585796
0.0468366624832
0.0747945476893
0.0859034468442
0.0211939774459
0.059612660766
0.0894236316647
0.0828952111664
0.053637472652
0.0911637331121
0.0506946898216
0.0882999871769
-0.135399289514
-0.132325954838
0.0922247788046
0.00764006874011
0.0250422853303
-0.0110196900597
-0.040155252723
-0.024615416436
0.044600786468
0.00495274856397
0.0902678657209
-0.0476313247985
0.0922338411093
0.0825613049551
0.028806702521
0.0858822313733
0.0774914897156
-0.00603210939209
-0.0824010546508
-0.0513451904981
0.0815706793055
-0.147674632362
-0.0857125619232
0.0588523714299
0.00788663817213
0.0918086150744
0.0422412951567
0.0221599516835
-0.0984615939138
-0.143997058355
-0.0153270143998
0.0781133054753
0.0577413459498
0.0889203935587
0.0349377526183
0.0622165333211
0.0614601041239
0.0919132476002
0.0189682287217
0.0770186836403
-0.0740220368882
0.0783423881443
0.0478926523147
0.0888194653505
-0.0367755793275
0.075246799624
-0.0270195816541
0.0809008640677
0.0716161778888
-0.0858474669624
0.0435871195613
-0.0389868833484
0.0878875190188
0.0916109000954
-0.102788781138
0.0911971050793
0.0859287849366
0.0595974320708
-0.108618731772
0.0920760904805
-0.0807917893108
0.0769734222594
0.0113448045466
0.0397971782027
0.0763746036949
0.0529030019163
0.0733260152187
0.0756506516029
0.0308776274869
-0.0726757252991
0.0869083409284
0.0850962446043
0.0769229087596
0.0911927142063
-0.00163978284369
0.0475673502978
0.0406368629524
-0.0631380318945
-0.0566969350111
-0.171113005645
-0.0526563671401
0.0650283581485
0.0625993230073
0.061673495687
0.0557956781748
0.0426249600636
0.0909464295396
0.0194060649022
-0.0613882866027
0.0405353693779
0.0704163048863
0.0888786427192
0.0807191930617
0.0661199249473
-0.0104976059143
0.0919753559196
-0.0408589278435
0.0920961830709
0.0692013330355
0.0184221481353
0.0351542302158
0.0896614962657
0.0294057181555
0.0922830882395
0.0333414717935
0.0921536541439
0.0643410668826
-0.00106611551418
0.0900708173909
-0.0792618611261
-0.118291762867
0.0894781316363
0.0731557401726
0.0922940163578
-0.0227395173869
-0.0713134872642
0.0122161673642
-0.0152251744606
-0.215317435298
0.0191227411917
-0.000241948562205
0.0523389418481
0.0670388316644
0.0732787250347
0.0889829198952
0.0057145088467
-0.0228667429861
0.0153443813854
0.0400271936575
-0.0488118890518
0.0434315091318
0.00445682583426
-0.0567883383091
-0.00641920249444
0.0102597465081
0.0541003834504
0.0913279928043
0.0793373263208
0.0354741388968
0.091072829616
0.0460368093519
0.0863709085528
-0.11653607387
0.0453450134585
-0.0582628941003
-0.0243416826905
0.0581498903026
0.0923007344561
-0.122093726408
0.0870715318397
0.0789433218781
0.00270285021397
0.085006490642
-0.034941315937
0.0770502882619
-0.0147875550734
0.0785457621482
0.045822517416
-0.195814922824
0.0329565481632
0.0617020340063
0.0810023802896
-0.144993887878
-0.0514826471729
0.0905732220846
0.0475771722969
-0.049243856824
0.0853974688706
0.0529818991866
0.0770248489054
-0.0674836839295
0.0863608886149
-0.0277304499897
0.0703693611787
0.0338392680189
0.090307321844
0.0896468860991
-0.10593238257
0.075563918309
0.0843109470768
0.0583635933473
-0.00889654067144
0.0270596144589
0.0118264013133
-0.110060272044
0.090747376966
0.0216772054917
0.0116097539898
0.0888035021867
0.0673614729606
0.0814195544699
0.0129408458117
0.0603703446923
0.0918469657049
0.0243824490624
-0.0936494968039
0.0800776978897
0.0787831668772
0.0921669799116
0.0870494723458
0.0714547461801
0.0901031321107
0.0159812082529
0.0828274366162
0.0339229056042
-0.0947188772793
-0.0650983324636
0.0889679057683
0.083656539602
0.0297569196361
0.0909405906201
0.0707202003406
-0.0491931559312
0.0672228206434
0.065109862044
-0.0715511834684
-0.0276335303795
0.0747721558903
0.0265503980079
0.092295473828
0.0655142676636
0.0100340732892
-0.156301428756
0.0492098285078
0.0538297381611
0.024510648705
0.075666522681
0.0255197425547
0.0609260290597
0.0682151777558
-0.0141620956738
0.0687241089702
0.0922434804518
-0.0135342226127
0.0278904358061
-0.0345066414301
0.01948193551
0.076487652724
0.0837705490875
0.00437748825118
0.0873445302763
-0.00101639577837
0.0295812479986
0.0779213430981
0.0832005118543
0.0577880717862
0.0380804934652
0.0756019083911
-0.109602853281
-0.133208980246
-0.0871883683732
-0.201055063008
-0.0799400232004
0.0865031619117
0.0610004200816
-0.0287851074426
0.0230506242776
0.0449047930117
-0.0434187509925
0.0917983885444
-0.0489646926109
0.000727573122655
0.0902989543828
-0.0687656502006
-0.108640540149
0.0922436745227
0.0913365216327
0.0760116083338
-0.0215028909658
0.0776547766416
0.049248730719
-0.104920937357
0.0897861638125
0.0512666741606
0.0708359646491
0.0782145517531
0.0808731230517
0.0165420788097
-0.0451756062924
0.0813197199582
0.0592802472409
0.0271399663074
0.0184659230741
0.0839668779776
0.0751094857132
0.0567280186185
0.0908153979007
0.0917934992437
0.0300232295467
0.0461981125206
0.0714064406532
-0.111325590895
0.0448737019526
0.0842105106483
0.0411917534832
0.0847621217992
0.0827682832848
0.0823234789162
0.0450015356157
0.0920725971725
0.0796968736014
0.0796632467818
0.0862088527891
0.0815601123556
0.0802924914652
0.0306098343178
-0.0879462400413
0.0863965628423
0.078862756582
0.0437066894683
0.0545463340103
-0.111273208782
-0.0470962903282
0.0796516188247
0.0692530391639
-0.048868729726
0.0485212031358
0.0513772642864
0.0296503780147
-0.00978785888012
0.0902489888941
-0.11215189424
-0.0851365496227
0.0851936208596
0.0840825871882
0.0250447345748
0.0542528449343
-0.0455532424627
0.091423315279
0.0639076996501
-0.00964154546878
-0.0779091159605
-0.0823709329043
-0.0702079174912
0.0423193648984
0.0811465554066
0.0428145082889
-0.0500245561038
0.0914002965454
0.0232189094673
-0.0413256508041
-0.0464183907983
0.0750058717741
0.0917435776614
0.0889131549627
0.0895216018266
0.0899436561594
0.0129562127986
0.0523309710623
-0.179222801514
0.0700236691686
0.0664871585413
0.0920789001603
0.0482046019298
0.0854564554984
-0.0520390668296
0.0912558605259
0.038132576905
-0.0469695567772
0.0810322608913
-0.00329036547819
0.0788856074947
0.0730871980533
0.0833849369926
0.000709808274049
0.0643002219529
0.0447081138034
-0.0048963100049
0.0905178779514
0.0918190844405
-0.0654595636155
0.091028920822
-0.0735744154887
0.0604940424002
0.0486654894572
0.0781897709685
0.0222252216918
0.0544876006435
0.00333020295914
0.0258711659815
0.0729118670178
0.0839576165437
-0.00175127103993
0.0862689626074
0.0106518488494
0.0173332364864
-0.0881813910342
0.00139435179295
0.092146765438
0.0915528967652
0.016064423062
0.0493381688066
-0.00112396299428
-0.0993220372463
0.0918453400716
0.00503062663974
0.0900447242777
-0.0659617469448
-0.023422495971
0.0298277300626
0.0874906567084
0.0764291383443
0.0883376496356
0.0920275583074
0.0891617142285
0.0923008700087
0.0887411009853
-0.0711695553079
0.0899070494502
0.0789678283973
0.0833675033328
-0.0608738667714
0.0918870813559
0.0799175287751
0.088477949264
0.00405122141063
0.0764532733148
0.0834030460169
0.0915784759699
0.0911196043581
0.0354389280422
0.0726177198123
-0.00418726080674
-0.0221428791592
0.0739707375483
0.0827627497099
0.0791374533557
-0.077095125441
0.0823322965692
0.0166040102179
-0.0207136033963
-0.0568162526534
0.0845295449542
-0.0527979832782
-0.0191972063595
0.0858369963723
0.0862995616571
0.061643147047
0.0918160370818
0.0321781943583
-0.214882683155
-0.124284970412
-0.0624216300423
0.0270009140748
-0.00193164401181
-0.035935973663
-0.087771676229
-0.066611870534
0.0346998911645
0.0907381032791
0.0911822792193
0.0919785819628
0.0901662613493
-0.0405491463602
0.00636831819006
0.0290552969695
0.0758317920327
0.0920167372565
0.0923013474201
0.0797476513919
0.0819515525654
0.0591373061407
0.0898363548555
0.0922041817819
0.0637965021133
0.0922448624394
0.0273534227227
0.0226135333908
0.089599544126
0.0819482733628
-0.0776719245745
0.0359459975681
0.0869285576298
-0.01984621956
0.0220122210368
0.0919817645213
0.0890160211652
-0.000873848979422
-0.028625124788
0.0905560796132
0.0855280999265
0.0872253971451
0.0823429386935
-0.0274380041412
0.0317754105916
0.02114687348
-0.0835219269735
0.0223642759927
0.0922904686687
0.0585807636914
0.0900370522952
0.0527338187367
-0.0685347271934
-0.0756928839398
-0.0317743313398
0.0869311411873
0.0275792513671
0.0852247749074
-0.130035929308
-0.11511313207
-0.0302737822901
0.0851755628534
0.0922368211029
0.0873282216559
0.0342751221571
0.0921872207608
-0.190603745105
-0.110799917005
-0.0461126457042
0.0624578266652
-0.0467007552958
-0.0291000702449
-0.0878178533702
0.0521705739016
0.0242568733944
0.0915278178376
0.00343843402939
0.061179073282
0.0631051521034
-0.0739341772304
0.0821211049142
0.019903205804
0.0911494740584
-0.0795260745655
-0.10035153015
-0.0383650718526
0.0456276669834
0.0762077427138
0.0765045381
0.0613729008206
0.0920097972939
0.0522121757109
0.0847981273217
-0.0326063977199
-0.109470068397
0.0861317220445
-0.0823768305514
-0.031776423162
0.0779309959833
0.0816162568098
0.00072468276076
0.0802237412133
0.0500503945492
0.0609276627483
0.0757461356453
0.0516383844336
-0.104184275764
0.072687929223
-0.0138105795049
-0.138196570933
-0.112933884568
-0.18579777269
-0.0567950073303
0.0877333627199
0.0162061542854
0.0892158867193
0.0065144649694
0.0700681954152
0.0888030415229
0.0243017497862
0.0693416034169
0.0502550120439
-0.128381149505
-0.0498402093984
-0.0268218731998
0.060320162694
-0.0373859192182
0.0885159971483
0.0258691752981
0.0369133400049
-0.0467162720081
0.0654246595652
0.0631495218899
0.0914054858169
0.0473158998975
-0.0903834162454
0.0589742631732
0.0919978237157
0.0922788755943
0.0378675970927
0.061578433397
0.0895880299222
0.0889916987142
0.0801962315622
0.0921706185982
-0.0495123290707
0.0906166112133
0.0281326059607
0.00472106335579
0.0369297976015
0.0162255285128
0.0850271157339
-0.0745979471986
-0.132227358419
-0.128353077949
-0.0156681491523
0.0821692028052
-0.1561561868
-0.023584361562
0.0579255533859
0.0651035509682
-0.0624492563385
-0.0442622403089
0.0471011796331
-0.189444015127
-0.082732063435
0.063546092399
0.0917553780563
0.00730268622872
0.0866137765748
0.0266626645277
0.0898364507236
-0.0542644656868
-0.0233778225981
0.0853404277931
0.0472914193909
-0.0957053415771
0.0887307003684
0.0636215366633
0.0259414770935
-0.164997925098
0.0907949287145
0.0921951207875
-0.0108912800657
0.0916466376749
0.0864766840632
-0.0539024403747
0.0594753440723
0.052163591391
-0.0329351897653
-0.0453988917186
0.00669359912183
-0.00721557514341
-0.0289255820369
0.0922365472874
0.0217866352124
0.00624273416053
-0.0487536992882
0.0922666103114
0.0774835705129
-0.153793405627
-0.0234159653909
0.0580038938518
0.0620256173909
0.0911322088247
0.0566754577156
0.0839045294724
0.0160860683788
0.0705928269782
0.0305050846482
-0.0216034283361
-0.173073584076
-0.0756799468135
0.0917037692318
0.000383263956248
0.00230337088289
0.0174823461435
-0.0132636521966
-0.00314384774709
0.0512693509657
0.0061608479154
0.0031473654226
0.0620435089465
0.0863016865065
0.0846066516232
0.0838399923876
0.00674371234787
0.0540310114393
0.0831406292098
0.0904224943202
0.0609346836088
0.0141498055931
0.0058829734209
0.00697762078879
0.0731503881012
0.0145175165355
0.0267446091041
0.0877747568698
0.0304433307129
0.0289893019601
-0.0977975986728
0.0777075844549
0.0911306384105
0.0801453955976
0.0921211020172
0.0714738978202
-0.0318450243937
0.0749569304212
-0.0212453749518
0.0875388272745
0.0903763151305
0.0777828895713
0.0832630051411
0.0867135249802
0.0790198918184
0.0920058146496
0.0919575717313
-0.0724932591372
-0.171726729718
0.0421904784456
0.0804510440085
0.0522736366273
0.0893333624926
0.09180494157
0.0892000981097
0.0743810053742
0.090707826072
-0.0926764899041
-0.0589031749595
-0.0233310945667
0.0236804435522
0.0901186228934
0.076657899051
0.0910465589525
0.00504876224312
-0.0916824273746
0.020775522599
0.0919442186778
| | |-MSE =  0.531127404487
| | |-finished  5  forest. fitness = 0.653113514309
0.328056227153
0.12634907242
-0.0554662349876
0.712777387065
0.267231483984
0.636487260036
0.582216787787
0.4833593857
0.79077539244
0.196500864506
0.69765360169
0.449107981137
0.219976242479
0.262775035998
0.398146826382
0.315376427094
0.176890151198
0.248914513997
0.372966042782
0.297368714797
0.679623539113
0.363258672645
0.291985991506
0.843227994543
0.607247835079
0.42629458946
0.708029830797
0.67319643847
0.962632753469
0.241694017205
0.584154118074
0.197281504709
0.64583945647
0.617473175325
0.29564213551
0.665545526237
0.6434236495
0.830925995395
0.729714927668
0.981777055339
0.648143354551
0.848503115406
0.643845770147
0.956634840805
0.511612926835
0.55324912837
0.286188728689
0.423941509418
0.357019155449
0.557061333137
0.359926832417
0.639009036457
0.40563904617
0.322594693045
0.719342467464
0.60489520874
0.548143829409
0.806805301356
0.532851783571
0.936644517245
0.382261881291
0.301217441047
0.604024475377
0.891376366708
0.368522416595
0.365983683952
0.635267706126
0.291695019074
0.599518376172
0.520858861443
0.39801282451
0.34311581204
0.898919852756
0.209121549373
0.29040193463
0.464065820815
0.221212902224
0.795330626851
0.231171082911
0.361469166186
0.30777664998
0.340140482539
0.687939128971
0.972401379959
0.587005040841
0.310667853355
0.689079475638
0.679877859433
0.420680934147
0.953913030648
0.647911360263
0.308654103711
0.272139085105
0.286505031855
0.792942168963
0.369668770793
0.454030235874
0.341870004806
0.208331231485
0.39322560908
0.812204338449
0.425315617427
0.624721277374
0.582962139117
0.242031630132
0.704171401617
0.244585125085
0.454380896444
0.191974309009
0.479930270064
0.388940215615
0.568052011147
0.270779999981
0.252485263753
0.598662032353
0.653168598308
0.200977360709
0.504410770325
0.569120561689
0.468273187965
0.207089922615
0.501516220333
0.557678309308
0.709186594177
0.344971918582
0.782714176232
0.555661704358
0.304271650148
0.672683526059
0.570311148889
0.508648685515
0.372971962247
0.672734826844
0.271080030197
0.411345101129
0.276287518981
0.227216698951
0.757523978793
0.596612500094
0.530784217367
0.252588230682
0.382626317004
0.601228265999
0.503124575909
0.154945478526
0.13734031943
0.202214395779
0.13239321339
0.726784897924
0.140205325849
0.485437366105
0.22474347017
0.226747595474
0.294751002381
0.249180290651
0.737501112076
0.445428668998
0.151809871211
0.161819214862
0.290007556948
0.227323429448
0.153384354855
0.205033355831
0.564604340052
0.199970516937
0.32319971728
0.345943624677
0.489039196973
0.601871705868
0.551376866308
0.457617677743
0.581738287863
0.137729007422
0.183760935862
0.418772229992
0.107973874861
0.266269942442
0.390431134286
0.284174171182
0.423577248402
0.0421393519066
0.406886979269
0.455138730476
0.125997199799
0.417705217627
0.607667644269
0.498320882975
0.240396166162
0.192276654864
0.240897609337
0.119753795442
0.275857687111
0.198979253413
0.6709782178
0.737162104963
0.426239024838
0.540117813227
0.289630192614
0.390871302581
0.0511774410838
0.216688959777
0.587933810511
0.327809478695
0.361466640668
0.237055360395
0.151223844715
0.484772337766
0.363448291424
0.114281622101
0.155761337383
0.294648260167
0.435177275937
0.257858714882
0.165580017922
0.0723115799493
0.211106667905
0.173671587509
0.29717517582
0.181436342408
0.598604995363
0.427587425331
0.133023961283
0.285617588613
0.222052477052
0.181278615081
0.103085898476
0.167057173772
0.0659051859065
0.418500200941
0.298919908317
0.0436444668549
0.0588516342286
0.302482430285
0.115993454702
0.321737370733
0.485708048367
0.380624316938
-0.00288431867694
0.229288678566
0.251082157194
0.384730852337
0.341063603395
-0.0227607235041
0.134161198045
0.259389773969
0.119572451255
0.0393187623937
0.144430206255
0.332110333626
0.395495127111
0.0972050128229
0.171712792373
0.198896432653
0.246938298023
0.171079743226
0.44463038657
0.309137646246
0.00154010714772
0.178779906806
0.48538583991
0.36562427443
0.315989556134
0.36001841266
0.0161337233673
0.0658896868884
0.0714493165089
0.374057805884
0.393690045777
0.310378043406
0.135642639304
0.417576681563
0.404011670953
0.213421733464
0.402004368943
-0.0469106345601
0.207810126272
0.245771013612
0.122584040342
0.104098062932
0.248042410005
0.186376619293
-0.0513568038853
0.23438339809
0.106281869804
0.232443893656
0.0446927427468
0.00548978983828
0.250180255278
0.114388420756
0.0712248477171
0.0297851364207
0.341234527531
-0.060894945176
0.363037545577
0.105188631004
0.0211559617374
0.0524995455812
0.140390698175
0.254093734851
0.161756434568
0.258899486475
0.179945341518
0.459020352717
-0.0951979899645
-0.0430418474715
0.0513861036299
0.147708454674
0.192200459406
0.0434966969207
-0.0148680909021
0.0480900523964
-0.0116586610846
0.246617882643
0.118974434889
0.372190209251
0.240936327502
0.249589354687
0.123566595262
0.0053150695074
0.371139207028
0.0748949267661
0.0479826118499
0.358796160764
0.110198599645
0.00360645695701
0.110664114915
0.00509807660506
-0.0916253815823
0.267041505774
-0.0576614934771
0.199757523964
0.25938543766
-0.0588284604155
-0.0201480643405
0.21807101839
0.252781356255
0.414793484942
0.269882971974
-0.0600257368269
0.0935872253652
0.332688101189
-0.0554245916986
0.0469740917356
0.221090900706
0.409464533598
0.329075897536
0.204230794213
0.151354777695
0.0497852386673
-0.0815433393909
0.279822509452
0.16598765048
0.0440738014445
0.0793063888303
0.0502718976685
0.0467415698182
0.0143469249444
0.0832406220551
0.302944937805
-0.0427284104792
0.0607685424679
-0.0316689199832
0.385310907528
0.0707157280354
-0.0266892392733
0.0326600956783
0.23781830962
0.254468382838
0.0467722302618
-0.00838894392816
0.281252450064
0.225513108495
-0.0888702470505
0.376121384418
0.122509925751
0.0135812124495
0.161106855898
-0.0515403716063
-0.0396146472396
0.261664357293
0.0733993304455
0.167077412201
0.0457177793008
0.150070718671
0.109233127686
0.209665597715
0.173229573877
0.0625973643519
0.0902060716768
-0.0700900956916
0.188240405951
0.0180948941552
-0.0838432538005
-0.0426387408713
-0.0891099651717
0.026346193962
0.107795913205
0.268232052752
-0.0541491070578
-0.077771227352
0.137303718214
-0.125954580734
0.0105576806809
0.203778441282
-0.0987127744418
0.165135189782
0.00176325692319
0.0150779303959
0.0999505130851
-0.0954137650989
0.175937018421
-0.00163644629403
0.198848767723
0.116811181791
0.282358188605
0.120961012544
-0.100848108569
0.174170511197
-0.00649451691878
0.211510077767
0.128978537283
0.230259327147
0.174282571317
0.168844211477
-0.0791351658641
0.117725796952
-0.145566998063
-0.0432369272039
-0.0629779141981
0.295037835514
0.122736207047
-0.0765475074408
0.148451692397
0.284723788206
0.245222815969
-0.109021312497
0.264797274208
0.0541891514577
0.23761913797
-0.0879539353334
-0.0239388623419
0.125761989313
-0.00164149353697
0.0658373407469
-0.0180224376997
-0.000458667862395
0.0829295771301
0.00324402126691
0.0313104194745
-0.133153269129
-0.0807105702865
0.157358217035
0.0935898021846
0.100445875564
-0.083851619564
0.20964325944
0.0936064061829
0.12344612228
-0.117376531133
-0.129623656198
-0.035032803805
0.189535768533
-0.0511747475178
0.194643932774
-0.126701609797
0.0812294778202
0.0397558384623
0.104803288167
-0.0127683958553
0.283817704616
-0.0503697832524
-0.126900247292
0.28492193652
-0.0257476691689
-0.125786584362
-0.0517888278288
0.180102148897
0.168872424694
0.128769293656
0.259687390997
-0.00558858097682
-0.0924431519888
0.0355316321725
0.00310621219913
-0.0655787417188
0.198952526235
-0.00314145942249
0.050341427958
0.00555198199563
0.223620753892
-0.0135252716472
0.0872314511971
0.0976547339786
0.166824357095
-0.135382440634
0.00695066076523
0.165007499874
-0.13819616531
0.162694341552
0.137646915337
-0.00826548922941
0.0578339025068
-0.0677890212238
-0.089084796404
0.0947969972906
0.0266893867392
0.0747347235769
-0.163988208864
-0.00890242072188
0.193999961237
-0.0604931932342
0.0477453084942
0.0180541711922
-0.0703193602964
-0.101386515334
0.155123578673
0.18745881421
0.0987504209982
0.198269262228
-0.0469771251066
0.0202214432338
-0.14749283953
-0.08338614924
-0.00900651456051
-0.115645536031
-0.0493396587736
0.106137807379
0.0609733489304
0.104205842725
0.0663792199453
0.11779864265
-0.0919281933207
0.0169977669637
-0.143120383686
-0.0349225169447
0.100702985223
-0.175102470358
-0.0561229201243
-0.0395096758691
-0.0349642976439
0.135912695657
-0.0781573430447
-0.0397888822405
0.141028065398
0.057252119142
-0.0970144298872
-0.0603546404178
0.114405149088
-0.089637450048
0.0567141567403
-0.148267688659
0.0997090108471
-0.129336738847
-0.100029107938
-0.183788640025
0.109649174607
-0.086345406767
-0.0391901219906
0.0681430993268
-0.103439970166
0.144611459225
0.078265715217
-0.120641083616
-0.0112909576473
-0.041188090961
-0.155716820872
-0.126267816096
-0.19172660698
-0.211628721279
-0.118224928761
-0.0276136678777
-0.191510078411
-0.127802935575
-0.214733162071
0.0499713876607
-0.117086763253
-0.0649067940245
0.0493757104315
-0.0502693203934
-0.176149404932
-0.214528141591
-0.0650480018078
-0.159538380459
-0.191706508457
-0.0593995758015
0.0242401939335
0.0314648110851
-0.0706556148113
-0.0768970154951
-0.162925287614
-0.0269947807491
-0.110498727736
-0.101271997736
-0.242702945224
-0.00309470602621
-0.024193640305
-0.0638592258213
0.024519244508
-0.235912850043
0.0617594879325
-0.0486619893374
-0.0298377146453
0.00406547468425
-0.182242110143
-0.00649524824072
-0.131672061432
-0.109906538637
-0.163078293815
-0.0697959160389
-0.169046395263
-0.15288499341
-0.0493090311567
0.0310743138176
-0.15244675912
-0.175414302642
-0.0867126371142
-0.198338902864
-0.184714779959
0.0356866144003
-0.023123757519
-0.15444599686
-0.0868611006977
-0.0646412867689
-0.0924304846582
-0.0147087880055
-0.0626830821812
-0.247422992974
-0.160786291443
-0.0773073090531
0.0586760611776
-0.0937544746203
-0.0322553671326
-0.179750260466
-0.0996644947334
-0.0770952391978
-0.150731692427
-0.118805047826
-0.00415898123342
-0.125516291222
-0.0389614408663
0.0260009698665
-0.069506507253
0.0623426552201
-0.16962957278
-0.148923297753
-0.101751789439
-0.0946274748838
-0.114205155271
-0.0927652212031
-0.128428037655
-0.115884408447
-0.0880705991957
0.0737591693876
-0.122772577537
-0.132974666371
-0.134684214064
-0.105121876056
-0.154447413011
-0.00957316260657
-0.149737514037
0.0149854238856
-0.112563389551
-0.19651305267
0.0316818182005
0.0718535570208
-0.115797270339
-0.151056542315
-0.0863687520361
-0.196085643373
0.0100773777522
0.0909302948023
-0.203138594483
-0.0285128963094
-0.103015024317
-0.167836494735
-0.0855444144243
-0.164650781163
0.0660544171605
-0.00749199396347
-0.0198901161065
-0.172957255911
-0.0486926389073
-0.0237764430508
-0.102629720367
-0.0933702166478
-0.118751732925
-0.0825903628016
-0.147925515076
-0.156083713173
-0.150119884706
-0.0624771055415
0.00609446684375
0.0288490170758
0.0520020546613
-0.0499900262115
-0.10569384998
-0.0822376854635
-0.0816654848593
0.0763720533405
-0.124492995599
0.137155414493
0.0120368453682
-0.073864201294
-0.16452533438
0.0209433741787
-0.0815261650106
-0.00722486573163
-0.181356964096
-0.0709887970513
-0.102202679023
-0.147297698967
-0.126035461417
0.0889056288275
0.0048181527493
-0.140637199415
-0.100754378979
-0.149701101962
0.05428016595
-0.0893656926708
-0.0635954669517
-0.00399353671409
-0.0663176588725
-0.0481871030242
-0.0210087200548
-0.127670935822
-0.0266186414526
0.0545362990105
-0.0866321685589
0.0974839882448
0.108548929939
-0.131147036764
-0.0442920692766
-0.0964742499639
-0.035537772133
0.0364571893552
0.0390824165243
0.0668067505206
-0.0810111240764
-0.0786599738354
0.0214592821244
-0.120609353821
-0.0955845808237
0.000229992878407
-0.0150745813807
-0.0754715542445
0.0641715326949
0.0501083808774
-0.0868106353941
-0.0780162910516
0.169516485033
-0.040161572281
-0.112927166114
-0.137215119826
-0.0214321284516
0.152993529502
-0.0371043712712
0.16266524569
-0.125733774057
0.00138787188671
0.0735944404007
-0.0201301130859
-0.136109427601
-0.109534072512
-0.0172683380206
0.0320383816898
0.0473798859429
0.104581769164
0.0896148338349
-0.0508747596465
-0.0344359399942
0.0760827842309
0.00471328767114
-0.126738447973
-0.141253305574
0.00314952739226
-0.0966847352991
-0.0730605707515
-0.0525316057355
0.167158965024
0.00339005380884
-0.00314576461261
0.0373769285222
0.113183148493
-0.267546714677
0.088741643373
0.127675085201
0.108730632852
-0.0323070574839
-0.139277951657
0.0639460594897
-0.092407490862
-0.120963038856
-0.0439965137416
-0.0756233855308
-0.229358582699
0.0580107832989
-0.0276840794706
0.0736009022831
-0.00626466117873
-0.154787123669
-0.125742635891
0.126689570975
-0.16682816206
0.020292472598
0.032680777862
0.0710712058974
0.113974577581
-0.000613223532513
0.0109030965556
-0.181097987714
-0.0165889371493
-0.202610966938
-0.080966464058
-0.136383121683
0.017144232423
-0.191637788987
0.00976705642828
-0.00287303473943
-0.243860183665
-0.0254217574665
-0.222895644856
-0.138964366617
-0.180204890935
-0.0389711581779
-0.177331400445
0.0211873757316
-0.211399882938
0.0519481275267
-0.363844229053
0.0380373266116
-0.231278046666
-0.203137842405
-0.128332417327
-0.0815418459654
-0.153517322536
-0.240618177237
-0.079234694868
-0.136255458641
-0.33719425483
0.0103832742117
-0.216630293021
-0.15704880913
-0.145585785201
-0.250306326204
-0.0471459690928
-0.123501425528
0.0206652934509
-0.296124935019
-0.297132529222
-0.231127779328
-0.134520594841
-0.153975304844
-0.173557157387
-0.247046048227
-0.305671701761
-0.345238840351
-0.464266302224
-0.331387658875
-0.228780214379
-0.284779172388
-0.181590840574
-0.155146100517
-0.318139412052
-0.159156618162
-0.0783341559519
-0.174915265603
-0.42587150631
-0.174512855409
-0.128058333763
-0.20798600652
-0.368246430609
-0.126202314035
-0.229450741593
-0.506741337331
-0.625940303413
-0.60858244776
-0.322584418273
-0.337483409694
-0.560186825897
-0.237931261435
-0.583511561068
-0.654367104519
-0.374549593784
-0.595742246252
-0.384187197474
-0.278256138393
-0.573013520761
-0.281327437276
-0.280389468672
-0.266081052305
-0.503174012924
-0.232455642002
-0.303581855702
-0.622264896319
-0.158920456774
-0.4260335638
-0.475438980345
-0.210720549445
-0.178931021761
-0.394646902405
-0.691611452259
-0.708783843177
-0.601936823831
-0.402628755448
-0.453263357182
-0.330111688536
-0.554288161571
-0.710244563703
-0.540404282077
-0.269538483734
-0.285093950766
-0.465048166146
-0.202485012231
-0.287478816365
-0.310515372533
-0.177472330224
-0.685482157563
-0.257549267412
-0.317665590081
-0.483272431423
-0.2237773592
-0.344781656508
-0.341861444143
-0.402597555082
-0.336168966268
-0.268543563197
-0.545840055968
-0.286418675649
-0.517019661019
-0.383110316811
-0.399819341615
-0.510397789925
-0.285540692725
-0.108509691172
-0.538724397218
-0.23683168464
-0.591869151889
-0.760296070081
-0.202726132902
-0.486903468232
-0.450201025163
-0.409366368685
-0.29584594711
-0.42976953141
-0.465533564717
-0.520244185689
-0.422140648322
-0.692152771728
-0.650849605787
-0.660926565805
-0.478409762874
-0.24358843529
-0.216942204839
-0.199259981916
-0.723462170452
-0.601065432451
-0.161775784838
-0.268855720965
-0.0684242674165
-0.664027498573
-0.601946115221
-0.669395838591
-0.921767621452
-0.917714090906
-0.825225373689
-0.220505187639
-0.120386048763
-0.222416217556
-0.465758503068
-0.536288801252
-0.241267862603
-0.296522443322
-0.532292131927
-0.314841713046
-0.716884176153
-0.0844980182032
-0.353080618717
-0.360630654939
-0.26113933471
-0.211818231272
-0.316831468461
-0.684114977951
-0.107805861796
-0.213334224468
-0.75893052802
-0.142339646839
-0.568652602695
-0.47656116835
-0.616897420224
-0.313910536118
-0.400818964917
-0.767575110079
-0.0965905841396
-0.478117162824
-0.450963577975
-0.338468705457
-0.590891266348
-0.577374380927
-0.791998037744
-0.541362698342
| | |-MSE =  0.471059930174
| | |-finished  6  forest. fitness = 0.679781958225
0.0507894660298
0.526266132368
0.530568568883
0.401461355165
0.544067618617
-0.0297574554537
0.0379537390506
-0.0183348391623
0.396523887373
0.468758082308
0.612010752683
0.344000843873
0.511445833096
0.729252363127
0.446129332793
0.584124663122
0.0667039235247
0.129045527679
0.126604738047
0.139153361964
0.160761036834
0.391160656178
0.136345561847
0.512633703552
0.52276953663
0.39360441037
0.415051618158
0.376796185741
0.336523049523
0.594719465962
0.451515430165
-0.0198310435012
0.46197314227
0.740550312325
0.562273503404
0.445754063141
0.469683479969
0.501727248957
0.274682628376
0.750970124972
0.311791318765
0.641834932384
0.549859456561
0.417256555989
0.602486550154
0.33124832369
0.438250097997
0.690291202234
0.656821259086
0.566605676186
0.720372626711
0.773581818862
0.538145538466
0.759615619065
0.760516096777
0.765141391266
0.746042895989
0.499871293311
0.476795963328
0.550915866338
0.637428196944
0.185914557618
0.359005532893
0.622757100093
0.671507570099
0.577498373978
0.550624908864
0.579026066027
0.781173203391
0.798804514929
0.546180660331
0.625485440327
0.780202540907
0.358783234822
0.392276051143
0.538788736015
0.493617363487
0.623538873459
0.659139947027
0.364968675998
0.58983707542
0.794628030596
0.561577647195
0.511071170481
0.725531592935
0.494709020789
0.672981889043
0.778376465614
0.771807632071
0.556626606861
0.502013674934
0.760142624504
0.518488824193
0.509379694582
0.596937818751
0.558769646588
0.65689362781
0.550292156458
0.288650482841
0.411072982365
0.550333201247
0.537827074052
0.442405526271
0.744970678007
0.711376952865
0.591958079089
0.746186880314
0.646262678549
0.786848802533
0.0775221283557
0.67751797562
0.28532439832
0.530210807691
0.200500014025
0.793716718495
0.625770914241
0.461610234768
0.457200895457
0.552331259215
0.747288518778
0.604222443835
0.601749853889
0.467137171517
0.747781893218
0.723433258703
0.485202086169
0.537795033952
0.594348149064
0.550509275537
0.626566166699
0.452506215081
0.751148341116
0.500265978735
0.123102908029
0.730915257493
0.673735432124
0.714739225594
0.488304864484
0.385691020838
0.575880720753
0.702082856128
0.562308705958
0.511492354449
0.717884832309
0.50482165389
0.230592076585
0.570832439259
0.528274980931
0.455545974822
0.167909475585
0.710224809323
0.257693992163
0.564977781913
0.613482629505
0.593670608673
0.364839556191
0.706010944404
0.503056883932
0.331928920746
0.371656193807
0.299009044119
0.441006888164
0.400324638393
-0.0531001196793
0.125833103726
0.00742586664957
0.706339515871
0.721826294291
-0.0576636676942
0.291532446887
0.694080563178
0.439676754753
0.281047440443
0.645510660561
0.542198475746
0.426588367658
0.342064945019
-0.122811036883
0.671254182871
-0.115661420642
0.124431961398
0.00168738224214
0.384279635968
-0.115104006531
0.598784035033
0.46472419088
0.491849739588
-0.151847491193
-0.0966237472306
0.359547659302
0.704384109549
0.000405591600657
0.444522844797
0.623396939456
-0.0325899833671
0.419127923243
0.162153152491
0.260681275668
0.204581173768
0.669514242082
0.332235705751
0.18570898468
0.464531052249
0.215603808701
0.553330698581
0.135920300862
0.255996261733
0.378585866173
0.0249653810458
0.0522710148147
0.195809342669
0.293589991115
0.394476939868
0.601692310058
0.279896304559
0.704085830575
0.401226993383
0.219842150057
0.250855280792
-0.0434558850831
0.375606298434
-0.104839563208
0.502418616458
0.147136682234
0.219412853257
-0.0918015675193
0.317886125995
-0.163485957141
0.573983787048
0.308134638006
0.451484712186
0.472249423588
0.265822046346
0.61622286678
0.255226529079
-0.145110642015
0.272693623188
-0.173462973848
0.275708529066
-0.0734211926067
0.0352442202833
0.35979604895
0.460106062505
0.301035123971
-0.125989576808
0.109949879742
0.214646159932
-0.152834314457
-0.0352027772583
0.456275348072
-0.123093078412
0.484029161943
-0.0248430220575
-0.0841074258191
0.172979089621
-0.118342902884
0.16020028638
0.22334788934
-0.0354991616525
-0.193405781178
0.240976473165
-0.138556981607
0.245267374808
0.458756081514
-0.184912714304
-0.210103311986
0.457833091739
0.232299259973
0.292460148371
0.166065841817
-0.162933810701
0.589762349033
-0.00141531915095
0.199514979133
0.442698191148
0.403048966682
-0.010333499939
-0.127739495198
-0.206642557089
0.434123868124
-0.159216508708
-0.11211359062
0.175267118119
-0.0227109954167
0.575828931119
0.520343711456
0.418579671918
0.529270035015
0.168924398954
0.208511709271
-0.154028029644
0.516738450592
0.206817093727
0.250350712163
0.161609588579
0.515533692281
0.265674725
0.174469769563
0.563325439765
0.162856712998
0.554073296265
-0.0278553674011
0.291061768561
0.0283440416062
0.58072299121
-0.106869649286
-0.0212903371189
0.354671792677
0.402398216797
-0.23505269569
0.154784088817
0.462186057727
-0.0228742959753
0.0992471297804
0.369316378129
0.111827375137
0.559013139799
0.523618515506
0.367884104956
0.280885401371
0.130833213261
0.0558248533332
0.521088719749
0.135416248232
0.0441862902392
0.171999720997
0.0735281111649
0.478325345323
0.185307834028
0.105761621777
0.364499992759
-0.00639656795271
0.307340904697
-0.249348832176
0.431916346112
-0.0580370203897
0.504248329019
0.263949751077
-0.0310398919274
-0.00282563990138
0.0364962072736
0.510623815526
0.104904632352
0.558114708438
0.276333435136
-0.114411026444
0.37663360625
0.325195772289
0.441349666385
0.12173099275
0.062852014192
-0.0732520130373
0.14397351476
-0.108530934028
0.263993371215
0.0685512921405
0.283772613763
0.487013757611
0.207079598558
0.460694999873
0.511154122588
0.421640295533
0.367526850286
-0.0489474711077
0.447872779723
-0.157026149254
0.0816730317897
0.320710047105
0.490400652428
0.169390391237
0.29288968129
-0.167641517001
0.0342716420058
0.54208604427
0.0450909771967
0.00543523273538
-0.16525947906
-0.226535199748
0.361538986511
0.118757401828
0.511851514015
-0.0850539843462
0.425580792229
0.132355283291
0.288641800439
0.295950237578
-0.126979288682
0.107399963666
0.446005332098
-0.0544480371795
0.0584511467202
0.122099927621
0.479227180621
0.192057927973
-0.226793658476
-0.227116935977
0.112722651523
0.523318172639
-0.18901724508
0.148260169495
-0.102471228359
0.120739927479
-0.218606937979
0.0710981962978
0.109022773315
0.161196850736
-0.0148329129383
0.0752891488465
0.060424129547
-0.0540688628471
-0.149085183869
-0.151511166998
0.236274726669
0.0164712356282
0.46786145233
-0.295584887511
-0.10682049632
-0.273592863781
0.0201692208028
-0.0713976993205
0.117684461681
0.148399723086
-0.0931315414643
0.0468404237561
-0.278775115715
0.440338132777
-0.164292249225
-0.279377397246
-0.124093580089
0.227518961487
-0.210918412108
-0.0121180402384
0.0733830883172
-0.0252765058163
-0.306411708208
0.0468571536751
-0.1005881886
-0.259085096758
-0.196081077218
0.0613109527779
0.00850312885678
-0.022473992564
0.0517623708274
-0.204180882434
-0.271339200444
-0.268400979793
-0.280836494222
-0.0590870461845
-0.164264333835
0.314929558817
-0.231794573936
-0.299365054744
0.390172633348
0.238673836453
0.283572275988
0.0253846460606
0.40064892444
-0.281748175294
-0.229536021273
0.486376585014
0.326161674382
0.361484238426
-0.148422579199
-0.019129136872
0.419964732952
0.385268304306
-0.334437705096
-0.361889536958
0.40978252473
-0.172055039939
0.181479539343
0.00545997729612
0.470889298416
-0.0124038366454
0.0735496690098
0.065755855629
0.532011514521
0.0931828899995
0.393204652047
0.0497672683614
0.090428694996
-0.0979584010414
0.203701813818
0.549787953387
0.190436937854
-0.00966654950983
0.407349378165
0.557965818014
0.299518864895
-0.266848305142
-0.0109356603522
0.171475695324
0.521192890148
0.356827575223
0.539529241078
-0.00629838235908
0.114587188559
0.478094783306
0.397887455637
-0.101340915687
0.525888893904
0.398529985882
0.444552921368
-0.0457724211322
0.211982489262
0.0559610670575
0.371858156946
0.518768630717
0.514516234715
0.534943052379
0.536419397805
0.532726364391
0.526895595506
0.522344446697
0.0176827142501
0.0424655538976
0.202430169165
0.485731257165
0.304746009798
-0.230752845455
0.0731062968592
0.528260024236
0.257276090695
-0.0980989963919
-0.0559607437808
0.412458426857
0.417897195831
0.332017688692
-0.173486505085
0.151154798505
-0.0759138644288
-0.0397015757275
0.234384829719
0.130902812354
-0.341379648269
0.0187452960374
-0.127066409852
-0.0813427111648
-0.12752253361
0.264745025288
-0.291554771572
-0.119580502934
-0.423846084768
-0.204346942774
-0.150087613032
0.354892549278
-0.14347689084
-0.11115767302
-0.513882172564
-0.376576658925
-0.170623448788
-0.266208593552
-0.468587707373
-0.17422741594
-0.262163898338
0.223914562157
-0.16433904587
-0.125292486404
-0.312112366142
-0.261841359936
-0.466015851602
-0.0130343171488
-0.226291131827
-0.350092576038
-0.378958865667
-0.528010718699
-0.415843976525
-0.123408789884
-0.0583699513579
-0.465020808531
-0.470551939194
-0.566247133812
-0.174248818154
-0.52821415001
-0.243624871712
-0.23650104072
-0.489282485101
-0.376507528916
-0.535314717156
-0.457216531389
0.0507666468825
-0.471438886374
0.0664641159847
-0.288327479444
-0.452444799584
0.0373488941426
-0.487783299682
-0.484464786943
-0.429814348645
-0.130215738636
-0.230888122631
-0.263552267795
-0.528495844004
-0.0110616213194
-0.595739548584
-0.657810896849
-0.59017123434
0.204578519277
-0.465409520047
-0.49025380857
-0.143172026249
-0.587812118123
-0.607099228945
-0.612004561219
0.0685437616753
-0.435014026555
0.269290487723
-0.124703687944
-0.463429182652
-0.579884812738
-0.318182458019
0.21836775641
-0.43362376533
0.138732297314
0.289302838608
-0.325557930787
0.266382756652
-0.224472864807
-0.0825435679013
-0.518303441755
-0.457795434629
-0.585798877746
-0.43197007953
0.305850638984
0.189275380845
0.143975612133
-0.0889059255455
-0.366618446556
-0.465899239014
-0.260161367049
-0.355738080026
-0.194757084373
-0.249412845194
-0.517055457196
-0.41405464558
-0.374386766025
-0.0285424982518
0.149623987065
-0.491272334144
-0.528256692436
-0.328640643389
0.273143222986
-0.303998263996
-0.385453290785
0.273629744783
0.0743046719423
-0.635913910136
-0.623920252685
0.0426177331612
0.240925953157
-0.552710009953
-0.322896441454
-0.198840467542
-0.136162457443
-0.512999419247
-0.121825944541
-0.444363094051
-0.159978456701
-0.0299812387216
-0.593777530821
-0.637945068796
-0.267601578956
0.0167269192879
-0.472529289312
0.382088386053
-0.458316915125
-0.327185327443
-0.51991488526
-0.395395151831
-0.269951277505
-0.320643121469
-0.632223347455
-0.544676788646
-0.264325186205
0.376757621788
-0.340371537011
-0.272015216494
-0.444014045901
0.439178671396
-0.330963897998
-0.167434124187
0.208655845807
-0.343577137704
-0.439394523503
-0.323264042853
-0.636140084901
-0.144843030812
-0.397714418254
0.032145402699
0.186611363813
-0.123463593901
0.200777608693
-0.178919322991
-0.333922728577
0.126184981096
-0.268426657264
-0.375760130023
-0.535625839663
-0.48576178565
-0.368102229023
-0.466993911761
-0.175816951025
-0.473820438993
-0.681219020457
-0.203394061802
-0.544006876249
-0.261298013305
-0.523750474527
-0.572196632294
-0.464305903313
-0.195704162306
-0.681899388059
-0.565493354174
-0.428856897429
-0.230564440095
-0.479426403967
-0.557727641102
-0.0139057890202
-0.284553809281
-0.438860888828
-0.289011057305
-0.3327044664
-0.553546145179
-0.645005712597
-0.544524856424
-0.0965737652453
-0.445742197939
0.216488907314
-0.319575394337
-0.219915006901
-0.00117742899869
-0.097152736568
-0.0283323284523
-0.522907821529
-0.320437156008
-0.244046183933
-0.493287551748
-0.523505693205
-0.29249611561
-0.136060303178
-0.183557853596
-0.208635752434
0.306646273054
0.0511955988019
0.335281549113
-0.183472798684
-0.340388769402
0.273342562076
-0.213103782288
0.426944547657
0.325611476627
0.464120751945
0.293467516335
0.469260272196
0.0714011807588
0.389766521124
0.347026877594
0.058272182031
0.253405254046
0.47766562149
0.341415777308
0.00015214603455
0.392474818194
-0.211432425683
-0.0920724726362
0.271994785196
0.401517717148
0.45245799131
0.134538132172
0.497412515913
-0.136411048219
0.481957228621
0.19581366036
-0.197216141759
0.201527382878
0.110616749089
0.0716537371807
-0.0697747228857
0.0834174664547
0.0619365785748
-0.0696649125436
0.323616368521
-0.25204531437
0.364709239926
0.159511917965
-0.267166181257
-0.40422113687
0.013142761619
-0.189721573303
-0.28558218469
0.060985135514
-0.153050491632
-0.588789797798
-0.40973436071
-0.2305350763
-0.532133832602
0.0809314312683
-0.32010838615
0.228594267399
-0.151528334832
-0.449009099994
0.0703072733471
-0.654808750969
-0.491448583783
-0.57963089229
-0.246579625855
-0.472492903958
0.0530482894379
0.146914096872
-0.673954259082
-0.101892716602
-0.169307981658
-0.0272777686591
0.379814501407
-0.437650594661
-0.18332399037
-0.0658143749327
-0.305527990918
0.0420113605804
-0.274565261116
-0.185946228795
-0.274895483781
0.486580880449
0.175658559492
-0.503907289079
-0.390709007143
0.287530377592
-0.194046477771
-0.0660847414798
-0.0287434229912
0.137766435198
0.421002519139
0.127303846825
-0.0232700057396
0.138125084127
-0.19115200257
0.312701495571
0.430531132353
0.335630375395
-0.271801703097
0.0948737029214
-0.180070786178
0.357147792305
-0.0483423174612
0.467575384773
0.0977066621678
0.363035413961
0.209421213164
0.1201558653
-0.0937426906433
0.328154199528
0.207406371845
-0.296420341708
-0.26914392873
0.442441068798
-0.0693278420622
-0.37328333811
-0.509830030594
-0.646740803064
0.0705096482371
-0.126551746773
-0.295126997929
-0.0185477740892
0.313431786927
0.233461702608
-0.181414620126
0.250091541097
-0.6099135561
-0.714909405486
-0.745310875276
0.195293258829
-0.475591666325
-0.555430763576
-0.339265817047
-0.220528933086
-0.588612133009
-0.260898712115
-0.401774381551
-0.475584081596
-0.512333795179
-0.282113074053
-0.791730912
-0.273494003721
-0.608685030092
-0.425685165502
-0.312290667496
-0.791447583676
-0.378289427125
-0.801888242882
-0.920143517777
-0.634374336757
-0.445404929658
-0.477489197847
-0.664493071473
-0.467641444628
-0.496505532627
-0.391876556965
-0.62323877778
-0.888172204849
-0.787940402037
-0.839556149223
-0.87457781401
-0.940502234805
-0.974464330426
-0.787355505112
-0.550192629218
-0.44882423078
-0.48913591078
-0.785184666613
-0.87007890527
-0.488891890417
0.1147316265
-0.532745132324
-0.616469078216
-0.235723914751
0.0952413066119
-0.084169487948
-0.439256484984
-0.230507118947
-0.3002058077
-0.905726711687
0.0240649464467
-0.609520874638
-0.546239284726
-0.565015771709
-0.511614431808
-0.0659985733785
-0.633443166272
-0.994009476904
-0.38394473431
-0.745394894375
-0.280193919074
-0.403791042438
-0.484662387058
0.111251064752
-0.492668279658
-0.549449673669
-0.803675251279
-0.0651875819211
-0.561425648914
-0.889185656199
-0.257121482748
-0.570661001126
-0.522471556127
-0.351657334713
-0.0950454287409
-0.556671989849
-0.250070702294
-0.673549473923
-0.658257252029
-0.525020924945
-0.466955869007
-0.295875390333
-0.581826034286
-0.512455136886
-0.649721903295
-0.634981124831
-0.580557384406
-0.485292235568
0.352634640361
-0.296922445603
0.488892953523
-0.368063306801
-0.148630189853
-0.654999104887
-0.762834969631
-0.358293164073
-0.556271485411
-0.777070391422
-0.0254829540051
-0.969579486019
-0.262222749092
-0.802353388018
-0.509172946243
-0.494426551076
-0.774055798355
0.257866586009
-0.312906239323
0.0696484864542
-0.970731544311
-0.542659425026
-0.847301924562
-0.493135900812
-0.473622815246
-0.166052588069
-0.498097747178
-0.513680199967
-0.818566138442
-0.332900643855
-0.816223822771
-0.372584073745
-0.8624966671
-0.269477052684
-0.447925441089
-0.687345386562
-0.26642773788
-0.251607738397
0.420963757854
0.516205207992
0.401258219644
| | |-MSE =  0.415630939276
| | |-finished  7  forest. fitness = 0.706398802297
0.0356079272297
0.109005817519
0.109005817519
0.00953961494952
-0.000325885572557
-0.000325885572557
0.0356079272297
0.0356079272297
-0.0302184399265
0.0995304858067
0.0382362657442
0.102097575899
0.00458837350183
0.0356079272297
0.0237045229336
0.057057109398
0.0237045229336
0.0139480153139
0.0139480153139
0.0356079272297
-0.0572256904189
-0.0572256904189
0.0286181269641
0.0356079272297
0.138823932545
0.084192177028
0.138823932545
0.0356079272297
0.0100381049884
0.0587026407108
0.0587026407108
0.0199163528862
-0.0478788566001
0.0203679906671
0.0507432232908
0.101269526243
-0.0377671290426
-0.0184274732827
-0.00288063320983
0.0692544321472
0.0356079272297
0.00144020750729
0.0356079272297
0.0356079272297
0.0636234115419
0.0298969526402
0.0298969526402
0.0257990428728
0.0356079272297
0.0356079272297
0.0491624993373
0.0394132605674
0.0394132605674
0.0356079272297
0.0356079272297
0.110887998427
0.00537341507867
0.00537341507867
-0.0739392626584
0.0356079272297
0.0356079272297
0.0917966871556
0.0269800606157
0.0917966871556
0.0337505664204
0.100213686357
0.0337505664204
0.0690560141494
0.067224202455
0.0690560141494
0.0356079272297
0.0356079272297
-0.0477061551423
0.0983312247121
-0.0477061551423
0.0240543159125
-0.11563191724
0.0356079272297
0.0356079272297
0.0530459632024
0.0530459632024
0.0644561528943
0.0694572593769
0.0356079272297
0.0694572593769
0.11471362065
0.147745821586
0.019145315255
-0.0636683578413
-0.0636683578413
0.0991602725777
0.0356079272297
0.0356079272297
-0.029825978506
0.0222255550371
0.0222255550371
0.0222255550371
-0.0394524550849
0.0356079272297
-0.0372457257553
0.0377279660515
-0.0372457257553
0.111142238064
0.111142238064
0.111142238064
-0.0399097323258
0.0356079272297
-0.0399097323258
0.184300327053
-0.0399097323258
0.0356079272297
-0.0120515563405
0.138904579878
0.112296235472
0.0356079272297
0.00799636871604
0.0628780155623
0.00799636871604
0.0356079272297
0.00799636871604
0.00800510547928
0.00800510547928
0.0580846236806
0.0356079272297
0.0605302006296
-0.0355062553088
0.0108723458506
0.0356079272297
0.0695537462917
0.074239071355
0.0248801213735
-0.00371171224615
0.0356079272297
0.0356079272297
0.074239071355
0.0907857461854
0.00898851596424
0.0907857461854
0.0356079272297
0.116586563483
0.0624515671621
0.0356079272297
0.0518013220296
0.0356079272297
0.0518013220296
0.0356079272297
0.0248327320157
-0.0774107866399
0.00236406381131
-0.0774107866399
0.0356079272297
0.0356079272297
0.111176518405
0.111176518405
0.0356079272297
-0.135457399612
-0.0340842657092
-0.0340842657092
0.128567123697
0.0787581816894
0.0356079272297
0.0787581816894
0.0686868551666
0.121352912656
0.0686868551666
0.00202533915801
0.0252771343161
0.0458905255824
0.0788348882256
-0.0541266253644
-0.0705326237451
-0.0705326237451
0.0303724337122
0.0356079272297
0.0356079272297
0.0884429541289
0.122658032991
0.122658032991
0.0704437601969
0.0356079272297
0.0356079272297
0.0356079272297
0.0938600344237
-0.077220346607
0.00906090158984
-0.0516619891384
0.117421404073
0.0356079272297
0.0356079272297
0.0356079272297
0.0356079272297
0.0131791701005
0.0131791701005
0.0456809521076
0.0677920263738
0.0677920263738
0.00195494039951
0.0331188417228
0.0331188417228
0.0663001055329
-0.00195699486148
-0.00705228120573
-0.00705228120573
0.0306082374994
0.0311174850358
0.0356079272297
0.0337761416809
0.0356079272297
0.0337761416809
0.13697368694
0.139541847972
0.13697368694
-0.0706072246026
0.0199304581441
0.0199304581441
0.0707894991776
-0.0172904541541
-0.0894880677817
-0.0343598550764
0.0356079272297
0.103429476713
0.113614000624
0.0494226510376
0.0460395859811
0.0390064225826
0.0356079272297
0.0509878812511
0.0356079272297
0.0476070489791
0.0068824893688
0.0476070489791
0.0623888583124
0.090456355623
-0.0286094622713
0.0356079272297
0.0356079272297
0.124232524777
0.0626270132847
0.0469553073964
0.0469553073964
0.0197483372522
0.0356079272297
-0.0892925885246
0.0356079272297
-0.0892925885246
0.0356079272297
-0.0892925885246
0.123518548342
0.0284329135948
0.0284329135948
-0.0634862352923
0.0402046665819
0.0402046665819
0.0976133379279
0.0931145333138
0.102823699898
0.0455244026145
0.0356079272297
0.0846527158972
0.025646635479
0.101634373831
-0.135386118844
-0.0708707993249
-0.00677268436382
0.161307000878
0.161307000878
0.0356079272297
0.0356079272297
0.0614768634961
0.0614768634961
0.0385618504805
0.0356079272297
0.0124232491861
0.058551338186
0.0744086964167
0.0356079272297
0.0124232491861
0.0356079272297
0.0409274947872
0.0409274947872
-0.0220648125558
0.0356079272297
0.0356079272297
0.0356079272297
0.0356079272297
-0.0314430112397
-0.0314430112397
-0.0314430112397
0.0356079272297
0.0676298811704
0.0676298811704
0.0266761728654
0.0356079272297
0.0516483799354
0.0922052338496
-0.00596491079724
-0.0224777247961
-0.0224777247961
0.0743170394123
0.0743170394123
0.0306564626969
0.0356079272297
0.0875728165155
0.0791818370864
0.0356079272297
-0.0359520508642
0.0177815309475
0.0177815309475
0.0356079272297
0.0352052146254
0.0129023425782
0.0352052146254
0.0356079272297
0.0540636317967
0.0356079272297
0.0319537687015
0.0356079272297
0.0646517154737
0.0356079272297
0.0682563974618
0.0356079272297
0.0166809236705
0.0356079272297
0.0356079272297
0.0233411768477
0.0858442028174
-0.0293964916817
0.00861236821567
0.0115325944887
0.124858028602
0.150809427439
0.0356079272297
0.0336410957939
0.0336410957939
0.0356079272297
0.0356079272297
-0.00818974433035
-0.0102007529087
-0.00818974433035
-0.0208280025126
-0.0208280025126
-0.0208280025126
0.0356079272297
0.129476431659
0.123585447793
0.123585447793
0.0295246698592
0.0393746106394
0.0356079272297
0.0393746106394
0.0318347954636
-0.0294409624224
-0.0333467853167
-0.0294409624224
0.01826229983
0.0356079272297
0.0356079272297
0.0528181347769
0.13769787864
0.103550026001
0.103550026001
0.000145249076972
0.0356079272297
-0.0549011447144
-0.0549011447144
-0.0549011447144
0.0356079272297
0.0356079272297
0.0356079272297
0.0356079272297
0.012224142275
0.177326501864
-0.00816366840531
0.0154606481742
-0.0412975226655
0.146391883933
0.0929385248129
0.0249698206146
0.0249698206146
0.0796081693724
0.0356079272297
0.0161799482282
0.0356079272297
0.0356079272297
0.139988874116
0.0295670524253
0.121250522563
-0.0598262641446
0.15418892485
0.00430652360334
0.0968670585151
-0.0744071383002
-0.00068891918793
-0.00068891918793
0.047370578525
0.0237821676579
0.0237821676579
-0.0174074468532
0.047370578525
-0.00532902184122
0.0356079272297
-0.0290050682917
0.149154385762
0.0154252605274
0.160003706723
-0.105713639079
0.168517469506
0.0356079272297
0.168517469506
-0.125166207725
-0.00789211985967
-0.00789211985967
0.147196500761
0.0356079272297
-0.00491519697631
0.0324667775505
0.0356079272297
0.0592011077536
0.0191321767352
0.0191321767352
0.0356079272297
0.0427105279689
0.0356079272297
0.0427105279689
0.0531680599892
0.0427105279689
0.0531680599892
0.0356079272297
0.023049572665
0.00523872805217
-0.0435103483766
-0.0123356887772
0.0106756503564
0.058095383921
0.0356079272297
0.0128887427238
0.0356079272297
0.105617006556
0.102551800685
0.0835171339293
0.0324625653494
0.0356079272297
0.0356079272297
0.0511426084267
0.0356079272297
0.0480186048933
-0.0331003540133
0.0511426084267
0.0356079272297
0.102245178802
-0.060154243395
-0.060154243395
-0.060154243395
0.0556661133845
0.0356079272297
0.0556661133845
0.0194567546517
0.0556661133845
0.0810359382242
0.0516416221531
0.0810359382242
0.0359668713613
0.0810359382242
0.0356079272297
0.0076196512491
0.00798351690999
0.0507310044121
0.0356079272297
-0.0162159289587
-0.00745841470476
-0.0162159289587
0.0356079272297
-0.0235481378535
0.0284714463764
0.0356079272297
0.137186456236
0.0356079272297
0.0284714463764
0.0031117712866
0.105878982387
0.105878982387
0.0356079272297
0.0356079272297
0.0356079272297
0.0461607327497
0.0461607327497
0.0623731249083
0.0518921188544
0.0356079272297
-0.00977083968269
-0.00977083968269
0.00687613415535
0.0521583264759
0.0521583264759
0.0356079272297
0.0145261007551
0.0145261007551
0.0521583264759
0.0351585933422
-0.00959631373616
-0.031191494186
0.0217135513596
0.0658207005669
0.0658207005669
0.0356079272297
0.0785296177717
0.0785296177717
0.0785296177717
-0.0219445387121
0.0356079272297
-0.0219445387121
0.0306313638634
-0.0270738583199
0.0356079272297
0.0799338987895
0.0799338987895
0.0750457287694
0.0356079272297
0.0356079272297
0.0317146529054
0.00230169139943
0.00230169139943
0.00625179157408
0.0356079272297
0.0604685674555
0.0645784054193
0.0604685674555
0.124247292249
0.0314474235877
0.0356079272297
0.0356079272297
0.0431595891185
0.0431595891185
-0.0487842098922
-0.0155921050119
0.0356079272297
0.0356079272297
0.0521541386842
-0.0225486580119
-0.0225486580119
0.0356079272297
0.0588596118839
0.0588596118839
0.0356079272297
0.0826158157471
0.0826158157471
0.102573888457
0.0396557778638
0.0559132556172
0.0192011216341
0.0356079272297
0.0065655841979
0.0356079272297
0.0356079272297
0.0811760381229
0.0230735309197
0.0230735309197
0.00916146775452
0.0602373757242
0.0552444143324
-0.00733370412605
-0.0124915358384
0.00704280812521
0.049687701421
0.0418510754466
0.027721850695
0.0356079272297
0.043465888312
0.0356079272297
0.0144714093627
0.027721850695
0.0660874305632
0.0790510501664
0.0224076171115
0.0890532231199
0.0890532231199
0.131740743015
0.0356079272297
-0.0608456080523
-0.0608456080523
-0.0590202967883
0.0356079272297
0.0373383482016
0.0509198625908
0.0373383482016
0.0356079272297
-0.00436446563615
0.011244566973
0.0509198625908
0.0356079272297
0.0356079272297
0.07363219958
0.132162676008
0.132162676008
0.0356079272297
0.0151195613299
0.0252577351827
0.0356079272297
0.0456499456851
-0.0646827099766
0.000367641295321
0.0356079272297
0.0877265905101
-0.112037304412
-0.00990258224797
-0.084217785037
0.167092128438
0.0283071632616
0.142268676141
0.0356079272297
0.0511740395349
0.0356079272297
0.0356079272297
0.0170302276183
0.0327286291625
-0.0529779963417
-0.0250989440421
-0.0250989440421
0.059391849758
0.0356079272297
0.1430828596
0.0356079272297
0.0799936484822
0.0321522276392
0.139744613876
0.0995799339975
0.0356079272297
0.0356079272297
0.0321522276392
0.0356079272297
0.040300633436
0.0120652658291
0.0120652658291
0.0356079272297
0.0356079272297
-0.0403619007141
0.0379760228811
0.0658898286058
0.138633003145
0.037623824466
0.037623824466
0.037623824466
0.0433143539865
0.0356079272297
0.00743124013424
-0.000411328928473
0.00533687652936
0.0335422757689
0.0335422757689
0.0345439632582
0.0129847774935
0.0345439632582
0.0356079272297
0.0356079272297
-0.000574386127757
-0.000574386127757
0.0039554378987
0.0356079272297
0.0356079272297
0.0356079272297
0.023412122443
0.05609935219
0.0404258351602
0.0681261351729
0.0356079272297
0.0356079272297
0.0851503771423
0.0851503771423
0.110367006141
0.0286610753976
-0.044256214978
-0.037030207686
-0.00472886984843
0.0667670393253
0.0667670393253
0.0356079272297
0.155660924526
0.155660924526
0.159345174039
0.0394260205758
-0.194728333296
0.000147347206301
-0.127111019203
0.0986187190361
-0.0888529508244
0.0356079272297
0.09557745203
0.09557745203
0.09557745203
0.0356079272297
0.0356079272297
0.0356079272297
0.0356079272297
-0.0659254383459
0.10472757327
-0.0659254383459
0.0599604099026
-0.114959985736
0.123850812886
0.0739609374849
0.0739609374849
-0.00177987410946
0.0356079272297
0.0356079272297
0.0356079272297
0.0251184051978
-0.00742440925097
0.0356079272297
0.00323812858271
0.0356079272297
0.00323812858271
0.063884920687
0.039497444651
0.063884920687
0.0109072987922
0.0356079272297
0.0109072987922
0.0356079272297
0.0161141380239
0.0161141380239
0.0161141380239
0.0902584049735
0.0902584049735
0.0902584049735
0.0356079272297
0.0859513813505
0.0859513813505
0.0327605683705
-0.0423435928154
-0.0213326162246
0.0331793274448
0.0581977199178
0.0356079272297
0.0356079272297
0.0331793274448
0.0356079272297
0.0817441055281
0.0992209018934
-0.00780470682546
0.0533868030346
0.0356079272297
0.140946528731
0.0356079272297
-0.0473405931411
-0.0473405931411
-0.0473405931411
0.0356079272297
0.0838852025438
0.0356079272297
0.0838852025438
0.0356079272297
0.0838852025438
0.0356079272297
-0.0665656890194
-0.0665656890194
-0.0665656890194
0.0356079272297
0.0356079272297
0.0356079272297
0.106748372006
0.121832010767
0.106748372006
0.0356079272297
0.0356079272297
0.0733596717451
0.0515712363134
0.0580435489884
0.0134580951142
0.0575374404406
0.0356079272297
0.0356079272297
0.0134580951142
-0.0380726957344
-0.0153062533287
-0.0153062533287
0.0356079272297
0.171306606422
0.171306606422
0.195680872918
0.060834261928
-0.154400659433
0.0356079272297
-0.183142064627
0.0356079272297
-0.148060974193
0.0356079272297
0.0664281203993
0.090353314045
0.0664281203993
0.0356079272297
-0.0205290068153
0.090353314045
0.090353314045
0.170430295205
0.0305783543559
0.0305783543559
-0.0540703921611
0.0215002137761
0.0215002137761
0.0215002137761
0.0221847596064
0.0221847596064
0.0221847596064
0.0196892743475
0.0196892743475
0.0196892743475
0.0356079272297
0.0734313070024
0.0356079272297
0.0734313070024
0.0389839659561
0.0860068567238
0.0389839659561
0.0450076028286
0.0261679939905
0.0450076028286
0.0261679939905
0.0450076028286
-0.0283169849819
-0.0561099394959
-0.066049248723
0.0740476998633
0.109356312877
0.136938450815
0.049938243908
0.049938243908
0.0215188715779
0.0356079272297
0.0496075016281
0.0356079272297
0.0356079272297
0.0259029271835
0.0673641303734
0.0796525233883
0.0630578514333
0.00781198802292
-0.0048791213011
0.0290076829302
0.056534723016
0.056534723016
0.00692544564497
0.00692544564497
0.0356079272297
0.0639221278392
-0.0214528075039
-0.0510545973956
-0.0510545973956
0.0784180841348
0.121418376061
0.0784180841348
0.0430799097586
0.0356079272297
0.079241201877
0.0718762828766
-0.00126669258829
-0.00244751932359
-0.00126669258829
0.0754965383497
0.0356079272297
0.0754965383497
0.0184868131386
0.0598115578926
0.0184868131386
-0.0117498947147
-0.0117498947147
-0.0276841508513
0.0200669792315
0.0200669792315
0.0356079272297
0.0966695926328
0.0966695926328
0.0543029706728
0.0356079272297
0.0451715209608
0.0356079272297
0.0451715209608
0.0356079272297
0.0876780203582
0.0829675057197
0.0829675057197
0.0829675057197
0.0356079272297
0.0302997453403
0.0221689810834
0.0302997453403
0.0274974621541
0.0436886571958
0.0274974621541
0.0356079272297
-0.0862233860267
-0.0775655555105
-0.0775655555105
0.0188813669553
0.0188813669553
0.0188813669553
0.0356079272297
0.0402044234582
0.142593863389
0.0402044234582
0.138144606048
-0.0456167240625
0.138144606048
-0.0456167240625
0.113957457172
-0.0456167240625
0.0861219017491
0.00690445643496
0.0861219017491
-0.0832799576265
0.0356079272297
0.0224830989118
0.148463797708
0.0224830989118
0.0356079272297
0.0224830989118
0.0356079272297
0.0356079272297
0.0317072111741
0.0317072111741
0.0317072111741
0.0297938954842
0.0297938954842
0.0297938954842
0.0356079272297
0.0356079272297
0.0356079272297
0.0356079272297
0.146938234786
0.0145049936945
0.0419021194942
-0.104210838797
0.0627500651527
0.00812753420322
0.0627500651527
-0.0361018996075
0.0627500651527
0.0268792198858
0.104199591282
0.0347198125781
0.0434175115042
0.0356079272297
0.0686190529532
0.0356079272297
0.0356079272297
0.0356079272297
-0.0118704401545
0.058916812283
0.0257684819072
0.0356079272297
0.0356079272297
0.0356079272297
0.105004781104
0.101814911926
0.101814911926
0.101814911926
0.0356079272297
0.0485489111465
0.0485489111465
-0.0395965896758
-0.101106349307
-0.0531655403332
0.0356079272297
0.0801563240027
0.0356079272297
0.061902279523
0.061902279523
0.061902279523
0.0360601661238
0.0360601661238
0.0360601661238
-0.0120364782122
-0.0120364782122
-0.0120364782122
0.0959755514822
0.0356079272297
-0.0488572373476
-0.114198657817
-0.040970116196
0.0431457736909
0.0431457736909
0.0356079272297
0.0626640839104
0.103552232573
0.103552232573
0.0769010532622
0.0192240843366
0.0356079272297
0.0356079272297
0.0553501260203
0.0391115019914
0.118994264655
0.0356079272297
0.0356079272297
-0.0188043031926
0.115586637489
0.119480575207
0.0926348429374
0.0543801560362
0.0504021715777
0.0504021715777
| | |-MSE =  0.53212520797
| | |-finished  8  forest. fitness = 0.652688171174
0.00564312405223
-0.0687174653617
0.0705170933846
0.122696300994
0.0549889440555
0.000772888804812
0.108779190641
-0.0809790406796
0.149204193382
-0.0800824900616
-0.0793066041366
0.041887137901
0.0764499237519
-0.0796206381199
0.128515682476
0.0136304677837
-0.0700743951734
0.149588824321
-0.0210820031625
-0.0656208234457
0.00893126907749
0.0107260096784
0.143268899551
-0.0809408255368
-0.0267727195477
-0.0772142712988
0.0630528492312
-0.04804397498
0.0297814179806
-0.0722825714708
-0.0597089872985
0.00640229513536
0.0784860723181
0.146014052383
-0.0721443233957
-0.0283245364869
0.133564229707
-0.0757229992603
0.0653632948734
-0.0768389318453
0.148997921549
-0.074699443233
0.149703661375
0.0350839260816
0.065668891206
0.112263016323
0.143886235248
0.232568356412
0.0058959765193
-0.0761868695577
-0.079798272503
0.0289720513184
0.149385792024
0.0789494259738
0.0138151801287
0.080691529283
-0.353032089102
0.265204403033
0.0298745820537
-0.0559993367202
-0.000489303098387
0.0911020246487
0.0664938909146
-0.0797449600427
-0.0755941696924
0.138133539272
0.135118614723
-0.0809812513314
0.149489849735
0.00830360769971
0.149788719438
-0.0731646631296
0.143639254065
-0.0361788994046
0.0939344892145
0.0952951604732
-0.0654949588475
-0.000376961647755
0.144815050881
0.120634565998
-0.0160038149652
-0.0531408476998
0.129287033519
-0.0266890824725
-0.0532398098981
-0.0102359493409
-0.060390916971
0.117566843702
0.146019642569
0.0764294699329
0.00341035950921
0.144173839116
0.0371067973824
-0.0715416532169
0.129033997186
-0.0125361451005
0.127431290978
-0.0462927492942
0.146701332597
0.0430415166411
-0.0661974591713
0.143290447333
-0.075341430392
-0.0687851576593
0.149903688157
-0.0771938906412
0.132629491629
0.0997208279357
-0.0189567137667
0.136407215995
0.0867748107198
-0.0810648734216
-0.0636508374707
0.149658245795
0.0122730852998
-0.0709034370304
0.0701641599186
0.0782227678157
-0.0572745073389
0.0124710411813
-0.00215097219423
-0.0785544191126
0.100826591537
0.135075298774
-0.0799734010057
0.091733550291
0.0161175401452
-0.0759955824162
0.108791597895
-0.0344601619585
-0.0747598248684
0.0447149025111
-0.0728616114018
0.149219269289
-0.0351425579236
0.141995643665
0.12956685286
-0.0724110476218
-0.0456819969092
-0.0368891656101
0.139664413508
-0.0741888884983
-0.0104549482944
-0.194299367095
-0.0799908428244
0.0432478942103
-0.0407434943297
-0.0778871233788
0.0381233849843
0.1449473499
-0.0808753239877
0.135078159433
-0.0788283811092
-0.0743001887078
0.100832331453
0.128465804012
0.000360260458436
-0.0489917741617
0.103278060296
0.147448876301
-0.0773515885182
0.141947170403
-0.0380591067709
0.117410293294
-0.0319645359886
-0.0518947898499
-0.0773937967712
-0.0734402647853
0.0893872029961
-0.0381104578617
0.0653057924029
0.00169362638578
-0.0030453052425
0.148364532099
-0.0486338744985
0.149834015237
-0.0810671205716
0.0596746988316
0.0246056168843
-0.0810656946171
0.13052697859
0.0173825211315
0.0898250954179
-0.079758154472
0.147358603236
-0.0675991639953
-0.0451143333477
0.11174928666
0.0322271884584
0.0260992052479
0.120840972914
-0.0575780170581
-0.0579441927889
-0.0611699327647
0.149094371411
-0.0798741425253
0.122222835328
-0.079092318062
0.148196403435
0.227774592215
0.00894014194345
0.116549022166
-0.0765448048924
0.116316854467
-0.0714022526341
0.10141679672
0.0894684518663
0.119909136418
-0.0300125983506
-0.0681946639028
-0.0776862560448
0.0823482062871
-0.0140912965012
-0.0443368189696
0.138539875341
0.121707162503
0.119233181102
0.148649323508
-0.0509534378071
0.0770050540396
-0.0761909265808
0.143426793907
0.0787269199861
0.01161791049
0.0522123667381
0.00715508340591
-0.0395327849809
-0.0714881953307
-0.00655019568311
0.00997645294941
-0.0100652109855
0.117275956227
0.147259719006
-0.0214168797093
-0.0797970762603
-0.0670289220178
0.141885823965
-0.0134429850619
0.0351863767934
0.0182944211153
-0.078083176654
0.0202605867333
-0.0810579915327
0.134162847951
0.103058791454
-0.0795862100834
0.085758234749
0.128041861528
-0.0809030566528
-0.00850335967406
0.140413424885
-0.0521873469684
-0.071398030135
-0.0358251187137
0.049532014241
-0.0305541925815
0.135531366009
-0.0810688286128
0.104110811436
0.0582278412361
-0.0555742643759
0.0156124371905
0.0516304445826
-0.0718482338632
0.0886576886237
0.0838830916701
-0.081064586481
-0.0784965601826
0.136774228599
-0.0602547837577
-0.00925792494504
-0.0638003906734
0.147801972343
-0.080973558715
0.135008327491
-0.0746859019372
-0.0810482738245
0.141436228248
-0.0809054805235
-0.0793155576346
0.149595587346
-0.0769934590018
-0.0367227578718
0.148660488726
0.129220036116
0.127528362741
-0.0780343626479
-0.245171452531
0.0272550476377
0.0860725605899
-0.0806296282499
0.0365833968065
0.0899640370253
-0.00618973962273
0.00678003883977
-0.0789794399272
0.0468245951146
-0.0768401877611
-0.0331532562172
0.0682070474694
0.0883157639331
0.0303563989151
-0.0462606648235
0.113301519993
0.137051348735
-0.0794183349967
0.0824023775244
-0.0205883806898
-0.00347106793909
-0.174427870742
-0.0810386305401
-0.00520403986882
-0.0193657702625
-0.0630532338133
0.141107572709
-0.00468943538554
0.0420078703818
0.123872987122
-0.0216737574516
-0.018166989391
-0.0424164861436
-0.0810657960468
0.008828845998
0.103614820212
0.096571261081
-0.024599481166
-0.0558606916592
0.0114655675323
-0.0400456039262
0.14989205945
0.0311608612232
0.126109786724
-0.0509823981642
-0.0783563459659
-0.0805915627707
0.141615613993
0.0117260332383
-0.0292066018998
-0.0612343112781
0.140390337166
0.06039298761
-0.0692833227887
0.028822015901
-0.0336955407684
0.093270683875
-0.0810470302893
0.102386656833
-0.0612219583155
-0.013986947998
0.149493266911
0.0159777148109
0.0108495028726
-0.0692866180963
0.0831654011784
-0.0757266104827
0.129525173659
-0.0810298259768
0.149905675071
-0.0654375235858
0.104740901292
0.0791100100726
-0.0640624214248
-0.0038373837107
-0.0525420824819
0.135774811217
-0.0166156396906
0.0434985216301
-0.0559966415735
-0.0558591502745
0.0466653274494
-0.0602474519632
0.148448735831
-0.0801386440454
0.123697479311
-0.0810358061501
-0.0211420152048
-0.0576603019351
0.119016505077
-0.0808042829882
0.0550320556922
-0.0766680393465
0.0862011884452
0.0140600878358
0.0869819022647
-0.0804601935
0.0241322590853
0.145660173928
0.0496920009935
-0.0129548953771
-0.0643943501595
0.116269115811
-0.0791399295581
0.133266774078
0.00376811304071
0.00270872492267
-0.00472638250453
0.105949670381
0.0613664087817
0.143862334268
-0.0474404199006
0.149116507328
-0.0764789443255
0.107408889367
-0.00390432587853
0.0476484456626
-0.0379738672764
0.0469660535397
-0.0333897237088
0.0132300335325
0.0107641040857
0.143357041338
0.0876153767103
0.0415309825639
0.147381666449
0.143814692082
0.0776918653906
-0.00135423455839
0.129218110447
0.147563554193
-0.0802138157265
-0.0720555360923
0.136205581255
-0.0194554364077
0.00180227005421
0.059309311942
0.117644138975
-0.0267152841896
-0.0241962008157
-0.000338034311408
0.00438342613069
-0.080891094784
0.0107850611327
0.0450128724515
-0.0324634657106
-0.0202157670223
0.110104681892
0.00650847190355
-0.0699368776277
0.134198750704
-0.0806982719109
-0.015306612845
-0.0734003900546
0.128213989612
-0.024630192217
-0.00614574468927
0.0958374958755
0.106701918365
-0.042316000555
0.134916539889
-0.0278269667959
-0.0785898394896
0.147953876417
-0.054156691616
0.0491474383714
0.127093861221
-0.0521345618757
-0.00428788414463
0.105032042166
0.00659460940542
0.0306351312531
0.0593340549658
0.0890855783575
-0.0727502183582
-0.0549951505832
0.127217009615
0.149876575061
-0.0446218673867
-0.0808832035305
-0.0565457339308
0.0482342959095
-0.00224768482456
-0.0139535893619
0.145795687208
-0.0796887559835
-0.02893222645
0.0939846530003
-0.0731941611634
0.0501434249233
-0.00075976459876
-0.0800892805358
0.121482202955
0.14835439898
0.0512068896529
-0.0759482102685
0.0928495216622
-0.0648743842141
-0.0543502204873
0.107185948602
0.0561582449009
0.0998086323191
-0.0224748872462
-0.080486274511
0.148456195257
-0.0149406443447
0.118635953178
-0.0789381605845
0.0624835519919
0.14902796505
0.132718347375
-0.0430801489247
-0.0554472482823
0.0379261767352
0.0279162524629
0.101995576592
-0.0797469939112
0.144255616945
0.106844371152
-0.0107776030478
-0.0808971324906
0.149887146864
0.0479672967114
-0.0356185468602
-0.0574360307102
0.0375537107545
-0.0808192439007
-0.0118379153906
0.117833258567
0.0475025274018
0.013952147722
-0.0133361687376
0.0606293329905
0.146665296691
0.115479455697
0.118740217249
-0.0534388383611
0.143387579216
-0.0804131651828
0.132160751237
-0.0810650249506
0.140825466259
-0.0740746348869
-0.0398223034905
-0.0684129343176
0.142445500178
-0.0723273639617
0.136921146361
0.128712358401
-0.0407922533046
0.0567750451544
-0.0699948162052
0.0879271355474
-0.0263323993414
0.0414721885695
-0.0684076819751
0.115146624503
0.0151210673848
0.119341456263
0.0165658901283
0.148722308023
-0.0306453084548
-0.058072349559
0.00367558873218
-0.0247249339214
-0.0290442586031
-0.0959360149553
-0.0579014596937
0.0722293660954
0.0509844493126
0.120760367233
-0.0741388481152
0.0423188677284
-0.078510799395
0.0926899660171
0.12072416923
-0.0761819331881
-0.0555930795908
-0.0536897528154
0.141167520889
0.0653962609655
-0.072129501118
0.116605897741
-0.0681490531552
0.00229414452517
-0.0578916811169
0.139985869293
0.0180391621988
-0.0798482700669
0.149548256093
-0.0410344829845
-0.078946383917
0.133413019152
0.146016944303
-0.03381149862
0.0247512652681
0.00100713159882
0.13033230829
-0.076553303882
0.0490649734062
-0.0511860773919
-0.0193137515687
0.131924356014
-0.0762376619212
0.146502072739
-0.0692684467539
-0.0614040491814
0.0311155967694
0.12619506235
-0.0810491671623
0.14474442136
-0.0759880137446
0.131125780416
-0.080884100336
0.141089347462
0.0452311364909
-0.032464577609
0.115856542261
0.0588429579396
0.122938735632
-0.0639353162354
0.119505413351
-0.0307461332771
0.112172997897
-0.0739045249611
0.13064928304
0.0178255690813
-0.0810571381831
-0.155988581042
-0.00137784746211
-0.0632776980125
0.149491848002
-0.00545198847877
-0.0417779704147
0.0229265515167
-0.081043750246
0.0809080040909
0.0518186848466
0.00260044641337
0.0539862883189
0.070155567317
-0.0700318419759
0.0837328019294
-0.0803925526665
0.148236074496
-0.0190440040012
-0.0653598175281
0.139149439465
0.0393143120617
-0.0808332928818
0.140409234228
-0.00436206959956
-0.0793016944387
-0.0243042761765
0.149290082192
0.0428188386676
-0.0430798556115
-0.0786738389092
0.0732531847029
-0.0412667902961
-0.0630908141378
0.146692382295
-0.0616759722692
0.0279932233572
0.0632749258434
-0.0235390747617
0.101164771683
0.123646158606
-0.0202130299012
0.0817416021707
-0.0731247152572
-0.052885560469
-0.042169721139
0.0213697746332
0.149905343647
-0.0557646114881
0.0866596236353
-0.0530998895672
0.00856027047653
0.00430214520063
0.142088346194
-0.0541954953739
-0.0279822966403
0.0789991887589
0.134066246468
-0.00446864517971
0.0913312434696
-0.00334782254621
0.0593729313395
0.0690501936967
-0.0515760590787
-0.0127604089628
-0.0680959198945
-0.0668374494935
0.059464463634
0.00707075468911
0.0454071857071
0.130701969255
-0.0804624226964
-0.0709721945209
-0.0770160833438
0.133499247497
0.0725446205724
0.148654603865
0.00678078402772
-0.0798321621535
-0.0707089012281
0.144437371528
0.107775644861
-0.0291406146009
0.0302260245111
-0.0789037801452
0.149902647297
-0.0780285727948
0.0743479809744
-0.00766532788083
-0.0600285637438
0.133906483472
0.0071120253299
-0.040656249402
0.123628958786
-0.0805537647212
0.142271744442
0.0806959880088
-0.0598012726857
0.140064278033
0.376188169608
0.149873787682
0.136547498977
-0.0549326855392
-0.0793444988595
0.113338614751
-0.0765634883595
-0.0325799114982
0.0938173853266
0.0686148159488
-0.0187950523093
-0.0745775200812
0.130202491257
0.0527153585017
0.0256557279696
-0.0287170092184
-0.0705937835817
0.0788574369542
0.134052964651
0.149401903251
-0.00552145893455
0.132782221335
-0.068863746718
0.0671076669282
-0.0684286260338
-0.0519434221133
0.0697131634391
-0.0408687755401
0.0282257507976
-0.062683395607
-0.0192221760308
0.0457650985466
-0.0335804269827
0.142070275901
0.0392845317262
0.120481955724
0.101148526024
-0.0137094126526
-0.00862084125102
-0.0807991522787
0.149714858982
-0.0194898786681
0.0270482646654
0.0799070939122
0.0953291374276
-0.0219837747365
-0.180045777932
0.0137696402963
0.148628237096
0.102815147957
-0.081027247591
-0.0476700740815
0.142057161789
-0.0729391197616
-0.0784316859007
0.115024031182
-0.0747927787783
-0.0769316600809
0.148096537017
0.115110076188
0.0511853956692
-0.03709871737
-0.0364684343775
-0.0770277360736
0.114826984908
-0.0797638586916
-0.0079095236518
0.0590208918461
0.149863857081
-0.0510040150826
-0.081009466051
-0.0222922154664
0.0249112091697
-0.0733531006604
-0.0740745407623
0.148646027186
-0.0798031332816
0.145890542461
0.090711303431
-0.0771820704253
-0.0642879203619
0.149906453923
0.00327539011453
0.125009950964
0.011115687866
-0.0155083772224
0.019687336572
0.113054833431
-0.0740753183468
-0.0750282474495
0.00547813633979
0.137915927659
0.0351127348626
-0.0809268758416
0.141086251197
-0.0487975535566
0.0244535273023
-0.0716752034167
-0.0753697518021
-0.0270752688607
0.109598462292
0.0696816603628
-0.13347723744
-0.0808843128495
-0.0559963308484
0.143097737784
-0.0785117416653
-0.00725939233933
-0.0202701011339
-0.0810456104725
0.0633822490301
0.001662271676
-0.0418933581088
0.136980105584
0.30481012374
0.112624868546
0.0249259632527
0.131537298352
-0.0641652979679
0.0997519135816
-0.0475236947872
0.0835811613275
-0.0755534667041
0.0440820272739
0.10136539742
-0.0727796339125
-0.0388745290602
0.0368251664371
-0.0619187021496
0.0668008054136
0.120517821414
0.139334380511
-0.0810550435007
0.0784120797205
-0.0701759313617
0.141306465873
-0.0643739527698
0.145023435237
-0.0603119097464
0.0902282216858
-0.0369146093816
-0.00321683867215
-0.0738747290959
0.124146804663
-0.0171398846768
-0.0787293721935
-0.0543817806742
0.0983082295081
0.13713607755
-0.0809635785669
0.125374682943
-0.0578447372683
0.143937960495
0.0127315999477
0.0544677035913
0.0399691330511
-0.0808152863678
0.115759211937
-0.034881764689
0.149366178714
-0.0525632263152
0.0971678607
-0.0432780048059
0.148863699502
-0.0373449790628
0.116930066036
-0.079796297846
0.116946487289
0.113546177048
-0.0174714538615
0.0929986043612
0.054620228705
-0.0727246608547
0.0872067610322
-0.0808082143067
-0.0804890485389
0.101904184081
0.104941110872
-0.142448705984
-0.0621777419005
-0.0083544437386
0.0474424387734
-0.0641795015837
0.146450893596
-0.0715538066364
0.142906806429
-0.079930369583
0.143206851578
0.0845111563996
-0.0313066648105
-0.0136372458205
0.0441251738819
-0.0350182706973
0.139165179741
-0.0774023943553
-0.0369472895
0.127099254985
0.215659104524
-0.153498607041
-0.0275769330871
-0.0793896337857
-0.0726788828344
0.149516288571
0.109885350763
-0.0801984379581
-0.0652294417788
0.144589095328
-0.0180830951517
-0.0777510143887
0.136533748888
0.132627931632
-0.0615819246022
-0.0797475132986
0.107611691243
-0.0601415931048
0.106740114739
-0.0574336844081
0.0323670616266
0.131937784346
0.0119363409813
-0.0266332545205
0.129737069097
-0.0268065685594
-0.045770619285
-0.0486944903001
0.127737969104
-0.0810666882457
-0.036968726212
0.0779650870309
0.0155577316776
-0.0754568657006
-0.0707695337427
0.055908975382
0.0483602663399
-0.0103223418616
-0.0268920526371
-0.0678134344767
0.0919896083749
-0.0624222177432
-0.0795173608611
0.00367823414572
0.139746085431
-0.0788688693649
-0.0752243909479
0.148353417353
-0.0415964569605
0.131538951589
-0.0807869904482
0.0333236620417
0.0887973505727
-0.0444493311
-0.0127915458124
0.0589228224679
-0.0552382350443
0.0276105799141
-0.0718913200822
0.109000941637
0.118376825334
0.0235848522598
-0.0382057482962
-0.0606286443718
0.145381693195
-0.0330710621379
0.128931876598
0.15690002792
0.0916314091046
0.0555340728851
0.00175823415519
-0.0054605849963
-0.071770635208
0.148285699433
-0.0676888696497
-0.0722696586621
0.00087516251088
0.123769163829
-0.00368207372084
0.14636304379
0.0367148941199
0.0170955319181
0.00204551248436
0.0915545367877
-0.0211544851661
-0.115813299014
-0.0680424790145
0.139695973233
-0.0734526186989
| | |-MSE =  0.532447029934
| | |-finished  9  forest. fitness = 0.652551103214
-0.517271985682
-0.598012178012
-0.298799789459
-0.258890901976
-0.0297004208335
-0.459021891956
-0.412080039862
-0.373075692925
-0.396749176325
-0.0370374558393
-0.197247301463
0.0474963624635
-0.303099484632
-0.0124059389265
0.0605865512615
0.0895371056905
0.091763719379
0.0469787183588
0.0574639115714
0.0783633580395
-0.265623668203
-0.140131310989
0.100080664923
0.0639673884775
0.146418455112
-0.0200679401278
0.034010148814
0.111754659901
-0.00117438864007
0.182351036673
-0.273702360581
0.120082822094
-0.194319741628
0.0368701459619
0.142159198312
0.155713781142
0.0512376740319
0.113529012978
-0.101550199
0.0309618219556
-0.0176599535995
0.193999033954
0.125192906029
-0.145957776169
0.0899169251206
0.164231066029
0.1066738678
0.0444385644144
0.191477358604
0.020987135822
0.14687848921
0.0131209333123
0.196390335324
0.10809307103
0.0999031197542
-0.0829805378783
0.0150194439866
-0.00130344161556
0.192457118453
0.136261705731
0.0508184665421
-0.0296825519918
0.100977115315
0.100309908826
0.0808103213197
0.168071345649
0.0657078779556
0.110012813709
0.128368409714
0.0911955499391
0.0730844307862
0.120683561972
-0.223587512431
-0.0970039517283
0.130828063468
-0.020755777491
0.130203823795
0.0904707790198
0.072188828425
0.0835077892841
0.136907134743
0.0854635776841
0.107685519383
0.12402505913
0.0703735744853
-0.158450237431
0.0651436514178
0.135779540264
0.0787668707694
0.130319938774
0.117400360232
0.171511279867
-0.00732888803913
0.00553490021792
0.154081695101
0.147177954983
0.106701349276
0.0521043122886
0.170595249827
0.146422503476
0.127262044688
0.191032802196
0.158522630181
0.0218529614608
0.0759118136021
0.0732296559154
0.173769697741
0.100568924733
0.100659655871
0.0294991253102
0.0641950852622
-0.0650465379211
0.108626821269
0.0960387561988
0.180043632809
0.166768050479
0.150727080396
0.154282308921
0.0751073976538
0.161306070351
0.0755302914387
-0.013643893665
0.12958391798
0.0709448725941
0.195879242666
0.0584084697241
0.135374378446
0.180471776224
0.0433555460168
0.152626419831
0.194796828249
0.208095905346
0.0738513894318
0.180492406314
0.11830658127
0.0241067884267
0.180649934561
0.0757421883828
0.056335282547
0.12026727693
0.130828534194
0.0935621857555
0.123759367361
0.111841836733
0.0831898831477
0.190550374704
0.0239338098464
0.179206421145
0.146012678232
0.194760728751
0.128758369735
0.0575490890974
0.0858413937608
0.0968967027902
0.186906070589
0.0667417885573
0.0653299042958
0.154068099276
0.0844496251327
0.098685644478
0.0940667549979
-0.00337587272951
0.100540801487
0.162333435228
0.0945064832551
0.0883713321595
0.147601913712
0.0637512328323
0.186671527791
0.157701659659
0.0202772704091
0.205768700708
0.0800377808291
0.134277180327
0.170440053063
0.17721251241
0.119021169787
0.0813154926368
0.0709539019504
0.077039254518
0.129851492442
0.153233537233
0.135029654952
-0.0146671303475
0.0523940535874
0.172949245169
0.0505674563811
0.0881365513425
0.0949312484626
0.192040870623
0.167668710463
0.14266889605
0.117306469904
-0.100832207522
0.08652333776
0.151643467822
0.123646471717
0.0785214363169
0.0907591646827
0.0685400561385
0.159076267754
0.0760447713895
0.160442403392
0.150601248269
0.157772303982
0.0541719419329
0.160377599397
0.0322125643124
0.132498587018
0.110737338657
0.195361962528
0.178424240851
0.140822341336
0.117177126463
0.180622031277
-0.0398789280738
0.156761101477
0.129572322768
-0.184946203019
0.174929200469
0.148913251426
0.0827290836729
0.0760121839141
0.0717192296332
0.189267254326
0.0806157293174
0.0550944629339
0.18360525282
0.147129489693
0.197061154542
0.170296573668
0.179311477228
0.0882205491596
0.0447427693242
0.160785930795
0.111028413307
0.101737824466
0.0783222236393
0.176405073853
0.177825254303
0.152348056173
0.188458338446
0.18865182242
0.139236039167
0.15254099021
0.208346772106
0.227112692001
0.109036096335
0.11087561291
0.140405076604
0.0704634306999
0.187210714218
0.0641040888269
0.149962793522
0.182882895052
0.0864610723845
0.0709434407327
0.187363037373
0.0953898737583
0.153947925884
-0.0353405529331
-0.153331811922
-0.0221225593121
0.139084797519
0.0595420223375
-0.312548313075
0.126770246207
0.0912196606861
0.0902399516992
0.0886177802969
0.184879679883
0.0983307696563
0.0856720857041
0.0771244177504
0.0979642619541
0.188410031939
0.181111932821
0.156630133026
0.0200485648787
-0.185943754897
0.131892692337
0.122906257184
0.163785710977
0.180780316314
0.0840125386772
0.0872427725932
0.170378735514
0.0116696775244
0.0999176595579
0.0761941522995
0.186735099177
0.0620136643763
0.166934453605
0.142246694177
0.165958430833
0.126763549382
0.202838983133
0.0811371146862
0.190858501134
0.0181243421944
0.147025164543
0.136960666513
0.162826001247
0.0949762883123
-0.115155017122
0.195720136717
0.159879479151
0.163374806053
0.124674833122
0.0917114473514
0.0867677757495
0.129270685641
0.0668849209948
0.195521146215
0.198061667136
0.119682107976
0.107849734744
0.115901615447
0.194217841115
0.17601115565
0.119178315652
0.139876022809
0.11098317883
0.157357328472
0.196013644342
0.0772508252333
0.0945977594747
0.107903632589
0.160004720343
0.0850844566551
0.0868886124208
0.146272669093
0.121721391509
0.075267542386
0.162868064953
0.196444553998
0.147692342491
0.100671931541
0.0958707882793
0.170078230594
0.10043394491
0.120329811033
0.0820730348647
0.150638295731
0.0885315045113
0.140576459965
0.138663227803
0.0869079849156
0.0809165848965
0.087494853856
0.0726888917003
0.136901792964
0.0333283577373
0.0940625546519
0.0968440820823
0.19160686365
0.201721298953
0.181692367161
0.0727715168093
0.111915136622
0.164079520598
0.193770026124
0.127845503832
0.152620400915
0.166953566262
0.194290021538
0.138219987985
0.132587997349
0.117580945674
0.0809065394985
0.0720524024356
0.0888314203967
0.0728763104656
0.145487043341
0.0811829439452
0.219860104766
-0.102827542532
0.106892499003
0.195676588517
0.150482945307
0.199347310429
0.0988199414506
0.0915354221994
0.100176660867
0.146655096314
0.0631228824954
0.192267113481
0.19457049338
0.122998940326
0.192790754156
0.168274056375
-0.0475840381426
0.0765984660579
0.0760950414751
0.101300232627
0.106477176414
0.085313513198
0.131171180736
0.211371520513
0.1965081539
0.125805407621
0.0790065648425
0.110119649473
-0.128408393298
0.130957050808
0.144780645574
0.0951497220162
0.21932386655
0.0713970506099
0.182189559355
0.10265487749
0.134432129418
0.155486062886
0.161111065649
0.0850906824294
0.0914615688418
0.0869014655608
0.1201868828
0.121829893684
0.12627619917
0.15413398421
0.163016566256
0.152021184554
0.16186220052
0.119406332862
0.0991572270147
0.136581758101
0.134107816604
0.123689558064
0.148148666736
0.16710445804
0.0874079993029
0.143837594302
0.173241355738
0.187456811571
0.163507139756
0.15357691695
0.09004836674
0.184647192027
0.13518756123
0.132229565718
0.0989699850066
0.140493234089
0.110648410727
0.0506723810392
0.069856318113
0.0722311851322
0.0927127213593
0.11164883721
0.125714498318
0.0793124431326
0.104078061801
0.181413981645
0.0635416141968
0.122585001132
0.133751316595
0.056407373976
0.155554696277
0.0865267822046
0.0755449395149
0.19726657182
0.0985887533938
0.185006490431
0.117857795573
0.0958677507124
0.171895090909
0.106599467725
0.109120717247
0.131406230476
0.227135181799
0.0885581221855
0.109422516674
0.100703863764
0.1931488418
0.0567115904911
0.198048319337
0.101169161807
0.0755961660786
0.095937029503
0.192152894745
0.114754737394
-0.360182109664
0.108149227531
0.197310108735
0.125838695478
0.147241088139
0.127128232852
0.0821678841435
0.220073536737
0.136776632221
0.140842214518
0.0870862376531
0.0884349092718
0.183378942517
0.0887591651502
0.157121665385
0.150632536505
0.11288497767
0.172014699836
0.167998239381
0.0746516003847
0.142662014558
0.0791894510934
0.101341253064
0.0962921403606
0.154561931429
0.19884157901
0.0907683431292
0.140671784948
0.0844640792305
0.0799905003528
0.169118887989
0.0918493379079
0.142166690899
0.184939801596
0.139956847459
0.106101405264
0.148571397364
0.152016814403
0.0583761850216
0.157982522315
-0.116453270091
0.112277473834
0.166842779411
0.0879995486909
0.112224004513
0.0856711221534
0.0703085489062
0.146116128625
0.10264412121
0.149139479808
0.129010211049
0.173872453329
0.191976303017
0.178165364949
0.10079134796
0.0874295957094
0.0767290583265
0.0884245534266
0.127334018804
0.111633979927
0.135686970663
0.0839503918764
0.12509835474
0.160848297859
0.0513028780917
0.158971475486
0.138669672974
0.175416741708
0.0772116922233
0.0675931473775
0.185725018658
0.139949870919
0.0951917400888
0.146633271562
-0.122826420459
0.110966980608
0.0249143138994
0.168600739884
0.0861074341322
0.0654544211635
0.167381626539
0.166930648593
0.170897519522
0.152229302894
0.199697579031
0.104903653781
0.191567484452
0.0216927743574
0.091521537984
0.120338354394
0.146168834314
0.170391620939
0.0824408606989
0.140870188501
0.0735528400177
-0.232894329284
0.0944056804577
0.198406514176
0.100512427119
0.0253176949101
0.165231469232
0.0969902838679
0.144009642897
-0.379981799934
0.107538434784
0.160053607671
0.124591850541
0.165725110024
0.100586958883
0.178860641973
0.122389572117
0.159996686817
0.160810146756
0.148160149747
0.122836712908
0.123842050738
0.0954937916351
0.192741028208
0.177100011606
0.0877733100334
0.0546410208602
0.186963711043
0.182339981683
0.175918258757
0.189666098
0.081883354147
0.183300939481
0.0975620654847
0.204892124388
0.0538298625582
0.182690139413
0.0946688412
0.13893937136
-0.0110679747409
0.0750517655712
0.172266958637
0.167266665222
0.0743035937308
0.143311720544
0.191164372719
0.09057741107
-0.0141147100962
0.0830936835567
0.0799604755211
-0.216826237577
0.152545008437
0.154140847345
0.178276399851
0.192166760296
0.20839854742
0.166315964228
0.116630941767
0.196937114456
0.185638343573
0.141258729782
0.0548674539591
-0.110182658351
0.0865189547143
0.160118458492
0.0988856465527
0.151413199084
0.0345802881122
0.13935321286
0.059380953241
0.109111997839
0.00510116053544
0.0333601961811
0.146149004015
0.174435577183
0.153952039165
0.0794681291945
0.0871892398853
0.154575992492
0.150422335382
0.0190257597059
0.180814452068
0.185786913903
0.0276650861598
0.174641563842
0.187884146251
0.0452884047074
0.141947369838
0.0877986155742
0.0863720094457
0.154193462365
0.0459645461869
0.193499230537
0.117330077977
0.110897861209
0.19649965491
0.12699170509
0.143191152313
0.0530007227293
0.162671808686
0.00917691507377
0.0580279988372
0.0779712973144
0.160189332937
0.099035639768
-0.393645494405
0.0699564724774
-0.0782862416541
0.131482578742
0.0160934389554
-0.137447011642
0.119499106252
0.0380444096306
0.0540540211236
-0.122608368683
-0.384751645737
-0.119409365651
0.102725997302
0.156448126149
-0.153569935447
0.0830071478197
0.0584429779095
0.0658783040926
0.116297993958
0.108896219674
0.0934993307301
0.14719383682
0.0822355079587
-0.166089315207
0.171115088597
0.116916745301
0.181781378422
-0.0283081464625
-0.0982271426583
-0.0769190670054
-0.250244562506
-0.188722937457
0.0757740475932
0.123243338788
0.18441379335
0.118559967985
-0.225598563657
0.0367259366574
0.0792079830079
0.171340501367
0.0699080861128
0.0903812617954
0.107273038635
0.183908022322
0.195961377739
0.108071806488
0.0837083766642
0.167572348598
0.100710831622
0.0941396964361
-0.214656846383
0.0999966765588
-0.185867372641
-0.0866931737137
0.0722149531018
0.13333129471
0.167648060456
0.16152844476
0.17878331111
0.0499982218759
0.126529081786
0.0874004883518
0.0901842572693
0.175635672013
0.171188534926
0.0413645085944
0.0958102139348
0.124561952891
0.0503285008607
0.136905177955
-0.183380379305
0.129938482095
0.124448902703
0.0887676477271
0.19562744414
-0.0541111121927
0.107216168188
0.173242127324
0.0856593316598
0.0172996359203
0.162411516166
-0.153321270966
0.00511270332669
0.141072553943
0.0871357115781
-0.0752835443611
-0.00804325316458
0.186507135373
0.14012556643
0.0340019365531
0.143667696236
0.147707861227
0.0368564495653
-0.00521653922291
0.0837542562347
-0.0746857484952
-0.121115883989
-0.300171604276
0.0634454304935
-0.200874480753
0.185608373765
0.0446231904899
0.194056720011
0.119483936497
-0.0300407114584
0.0651737667021
0.131863758611
0.11209516127
0.0227560133895
0.166224275326
-0.391158826401
-0.202377143179
-0.477726722591
0.0804994225888
-0.175387324445
0.105308154313
0.0749063806784
0.107037767991
0.0783334628165
-0.347767979358
-0.116471332164
-0.278849893899
-0.294626378956
0.0646017564721
0.0861086580268
0.0230019328178
0.0779253921267
-0.105536433606
-0.0628919109746
0.0713867930295
-0.00945145618771
-0.104367089766
0.00195466719384
-0.465987862986
0.154463054474
-0.227607595726
0.0656599728139
-0.331310855984
0.117530401814
0.0766530843489
-0.0597515266165
-0.150166678225
-0.0905527271854
-0.0207196860485
-0.0885063602523
-0.451248880916
0.0483969093274
-0.0187199454273
-0.503389042545
0.048790713506
-0.506669063109
0.166435916085
-0.377827407673
0.0624269932732
-0.0158602018525
0.0529877168456
0.137138003718
0.0262151512794
0.140971412623
-0.659738297651
-0.0429775403966
0.0282731989405
-0.243027550897
0.0347769022956
-0.543676592508
0.0731357744996
-0.0680234374565
-0.289040548666
-0.0719369185023
0.0134149938593
0.173650597982
0.0909632154813
0.139854270723
0.00359495091126
-0.0676939156921
0.1169595559
0.159895194543
0.188428780677
0.104886074685
-0.0280287783175
0.0418106104885
0.0452542396128
-0.03194018506
-0.375907784008
-0.133670878415
0.0525797663903
-0.551456171398
0.156599508574
0.0903312839296
-0.0372249103077
-0.0505321006182
-0.231096256275
-0.0309492340122
0.0353660487935
0.0492737818687
0.111112168566
-0.0734550554568
-0.0708311897509
-0.479676400698
-0.242250162663
-0.275657469734
-0.122476653478
-0.0287412843522
0.0261675171527
-0.565756991598
-0.199118052665
-0.181121198806
0.0853957863648
0.0183720244401
-0.239289951534
-0.198785819997
-0.0891781881595
0.142843660218
-0.381299347168
-0.178942484791
-0.57670389232
-0.170794201543
-0.166860713025
0.020892709775
-0.110039199437
0.06762146785
-0.00386203201355
0.0264353407364
-0.197602438045
0.0414782126414
0.117034151321
-0.0820400508901
-0.387963640727
-0.38188601088
-0.569483806383
-0.575203879712
-0.0947188933542
-0.119296867727
-0.0779495087349
-0.670166314732
-0.165724788097
-0.681574565428
-0.17557076598
0.0597096981878
-0.603958925887
-0.237444420783
-0.407912763853
-0.543112378667
-0.363957664871
0.0445386259491
-0.695720170822
-0.0277414464997
-0.470480104595
-0.684369425068
-0.0352543640677
-0.62918246457
-0.45568612472
-0.415873028029
-0.131081123146
-0.653259384044
-0.248296178347
-0.490444948331
-0.0830933668492
0.0292477069954
-0.617345363723
-0.206217560478
-0.275241138953
-0.101266133317
-0.398407321057
-0.44998488707
0.158283606822
-0.00481220803849
-0.19547984908
-0.0394268032951
-0.485498114465
-0.544901330573
-0.205869292358
-0.432273456365
-0.0426687270083
-0.337001258486
0.0172471878951
0.0449431543401
-0.43921249015
-0.23414678921
-0.311366132832
-0.580359610404
-0.363996600403
-0.524733891079
-0.826578942989
-0.0714681853756
-0.186674870363
-0.48358389059
-0.0346812591533
-0.708114344833
-0.105455155617
-0.716611139269
-0.380531888435
-0.642606486949
-0.335722318119
-0.186823772069
-0.179661848058
0.00583939828825
-0.636159522376
-0.633949737446
-0.0387176696329
-0.638638608298
-0.521756712116
-0.567687870754
0.103904174244
-0.387588901034
-0.593596684145
0.0100317831804
-0.363434434546
-0.194693257937
-0.299689238274
-0.905550491411
-0.316453716222
-0.305653304134
-0.0772020029636
-0.521552025246
-0.446737892104
-0.585410201717
-0.733899801316
-0.565300900307
-0.554349560182
| | |-MSE =  0.497601174981
| | |-finished  10  forest. fitness = 0.667734518846
-0.528111047178
-0.471745950896
-0.4173910929
-0.365492316972
-0.316412826087
-0.270422662227
-0.227695205969
-0.18831039514
-0.15226353084
-0.119478012595
-0.08982016511
-0.0631144698823
-0.0391578720436
-0.0177322818074
0.00138517695034
0.0184142658786
0.0335659291774
0.0470384967677
0.0590154409122
0.0696643344599
0.0791366901605
0.0875684124787
0.0950806458582
0.101780855237
0.107764018381
0.11311384581
0.117903971896
0.122199081754
0.126055953786
0.129524408826
0.13264816351
0.135465590423
0.138010390666
0.140312185488
0.142397034813
0.144287890104
0.146004989198
0.147566199921
0.148987318815
0.150282330773
0.151463634547
0.15254223879
0.153527932351
0.154429432449
0.155254513627
0.156010120073
0.156702463542
0.157337108886
0.15791904873
0.158452768861
0.158942305488
0.159391295467
0.159803020453
0.160180445671
0.160526254105
0.160842876647
0.16113251871
0.161397183753
0.161638694147
0.161858709633
0.162058743742
0.162240178387
0.162404276843
0.162552195327
0.162684993327
0.162803642841
0.162909036634
0.16300199564
0.163083275598
0.16315357302
0.163213530544
0.163263741757
0.163304755548
0.163337080023
0.163361186046
0.163377510445
0.163386458902
0.163388408581
0.163383710507
0.163372691724
0.163355657257
0.1633328919
0.163304661837
0.163271216119
0.163232788022
0.163189596268
0.163141846156
0.163089730593
0.163033431026
0.162973118311
0.162908953499
0.16284108856
0.16276966705
0.162694824718
0.162616690066
0.162535384873
0.162451024652
0.162363719116
0.162273572542
0.162180684184
0.162085148581
0.161987055897
0.161886492199
0.161783539732
0.161678277178
0.161570779869
0.161461120011
0.161349366894
0.161235587049
0.161119844439
0.161002200624
0.160882714873
0.160761444342
0.16063844417
0.160513767614
0.160387466155
0.160259589597
0.160130186152
0.159999302557
0.159866984126
0.159733274846
0.159598217435
0.159461853419
0.159324223192
0.159185366077
0.15904532036
0.158904123378
0.158761811535
0.158618420343
0.158473984507
0.158328537907
0.158182113671
0.1580347442
0.157886461204
0.157737295716
0.157587278132
0.157436438238
0.157284805245
0.157132407772
0.156979273923
0.156825431262
0.156670906856
0.156515727294
0.156359918672
0.15620350667
0.156046516496
0.155888972952
0.155730900439
0.155572322936
0.155413264059
0.155253747034
0.155093794739
0.15493342967
0.154772674021
0.154611549603
0.154450077946
0.15428828022
0.154126177313
0.153963789786
0.153801137926
0.153638241712
0.153475120841
0.153311794726
0.153148282532
0.152984603117
0.152820775102
0.152656816848
0.152492746451
0.152328581767
0.152164340401
0.152000039728
0.151835696872
0.151671328727
0.151506951963
0.151342583017
0.151178238111
0.151013933236
0.15084968417
0.150685506491
0.15052141554
0.150357426475
0.15019355423
0.150029813546
0.149866218958
0.149702784813
0.149539525245
0.149376454217
0.149213585483
0.149050932613
0.148888508993
0.14872632783
0.148564402128
0.148402744736
0.148241368316
0.148080285344
0.14791950813
0.147759048808
0.147598919346
0.147439131551
0.147279697027
0.147120627261
0.146961933544
0.14680362702
0.146645718663
0.146488219288
0.146331139571
0.146174490005
0.146018280955
0.145862522617
0.145707225041
0.145552398147
0.145398051673
0.145244195231
0.145090838297
0.144937990179
0.144785660078
0.144633857023
0.144482589924
0.144331867548
0.144181698525
0.144032091363
0.143883054418
0.143734595929
0.143586724
0.143439446618
0.143292771631
0.143146706759
0.143001259621
0.142856437676
0.142712248304
0.14256869873
0.142425796086
0.142283547379
0.142141959481
0.142001039181
0.141860793146
0.141721227913
0.141582349935
0.141444165526
0.141306680937
0.141169902267
0.141033835527
0.140898486635
0.140763861395
0.140629965515
0.1404968046
0.140364384161
0.140232709592
0.140101786226
0.139971619268
0.139842213849
0.139713575006
0.139585707671
0.139458616708
0.13933230686
0.139206782829
0.139082049185
0.138958110431
0.138834971003
0.138712635219
0.138591107343
0.13847039155
0.138350491935
0.13823141251
0.138113157225
0.137995729931
0.137879134413
0.137763374403
0.137648453535
0.137534375373
0.137421143419
0.137308761112
0.137197231804
0.137086558791
0.136976745306
0.136867794501
0.136759709485
0.136652493288
0.136546148889
0.136440679192
0.136336087042
0.136232375247
0.136129546534
0.136027603575
0.135926548987
0.135826385348
0.135727115163
0.135628740882
0.135531264911
0.135434689611
0.135339017276
0.135244250156
0.135150390462
0.135057440346
0.134965401904
0.134874277211
0.134784068281
0.134694777077
0.134606405544
0.134518955538
0.134432428927
0.134346827502
0.134262153029
0.134178407219
0.134095591758
0.134013708288
0.133932758419
0.13385274372
0.133773665728
0.133695525938
0.133618325818
0.133542066796
0.133466750262
0.133392377598
0.13331895012
0.133246469147
0.133174935953
0.133104351769
0.133034717811
0.132966035278
0.132898305322
0.13283152908
0.132765707647
0.132700842119
0.132636933542
0.132573982939
0.132511991338
0.132450959706
0.132390889023
0.132331780212
0.13227363419
0.132216451864
0.13216023411
0.132104981785
0.132050695716
0.131997376731
0.131945025627
0.131893643196
0.13184323019
0.131793787358
0.131745315443
0.131697815154
0.131651287183
0.131605732235
0.131561150963
0.131517544022
0.131474912076
0.131433255732
0.131392575617
0.131352872332
0.131314146477
0.131276398617
0.131239629331
0.13120383917
0.131169028687
0.131135198411
0.131102348876
0.131070480588
0.13103959407
0.131009689801
0.130980768283
0.130952829994
0.130925875401
0.130899904972
0.130874919167
0.13085091843
0.130827903201
0.13080587391
0.130784831001
0.130764774879
0.130745705973
0.130727624674
0.130710531397
0.130694426539
0.130679310492
0.130665183631
0.130652046353
0.130639899021
0.130628742002
0.130618575674
0.130609400384
0.130601216498
0.13059402437
0.130587824336
0.130582616741
0.130578401935
0.130575180235
0.130572951982
0.130571717489
0.130571477096
0.130572231106
0.13057397983
0.130576723589
0.130580462682
0.13058519742
0.130590928082
0.130597654968
0.130605378365
0.13061409857
0.130623815843
0.130634530477
0.130646242738
0.130658952892
0.1306726612
0.130687367925
0.130703073318
0.130719777619
0.130737481092
0.130756183947
0.130775886445
0.130796588789
0.130818291218
0.130840993947
0.130864697173
0.130889401115
0.130915105962
0.130941811899
0.130969519125
0.130998227808
0.131027938121
0.131058650222
0.131090364265
0.131123080399
0.131156798756
0.131191519475
0.131227242675
0.131263968455
0.13130169693
0.131340428174
0.13138016229
0.131420899326
0.131462639357
0.131505382416
0.131549128552
0.131593877777
0.131639630111
0.131686385546
0.131734144063
0.13178290563
0.131832670215
0.131883437744
0.131935208158
0.131987981348
0.13204175721
0.132096535623
0.132152316455
0.132209099527
0.132266884665
0.132325671677
0.132385460345
0.132446250432
0.132508041674
0.132570833788
0.13263462648
0.132699419408
0.132765212245
0.132832004597
0.132899796085
0.132968586267
0.133038374698
0.133109160908
0.133180944391
0.133253724597
0.133327500987
0.133402272956
0.13347803987
0.133554801094
0.133632555926
0.13371130366
0.133791043521
0.133871774729
0.133953496452
0.134036207842
0.134119907978
0.13420459594
0.134290270732
0.134376931339
0.134464576717
0.134553205733
0.134642817261
0.134733410112
0.134824983028
0.13491753475
0.13501106392
0.135105569188
0.135201049099
0.13529750218
0.135394926905
0.135493321678
0.135592684863
0.135693014758
0.135794309624
0.135896567632
0.135999786911
0.136103965543
0.136209101529
0.136315192809
0.136422237263
0.136530232705
0.136639176882
0.136749067468
0.136859902067
0.136971678232
0.1370843934
0.13719804498
0.13731263028
0.137428146532
0.137544590892
0.137661960436
0.137780252161
0.137899462981
0.138019589708
0.138140629098
0.138262577791
0.13838543235
0.138509189245
0.138633844847
0.138759395442
0.138885837201
0.139013166227
0.139141378477
0.139270469853
0.139400436127
0.139531272958
0.139662975914
0.139795540448
0.139928961902
0.140063235494
0.140198356338
0.140334319423
0.140471119619
0.140608751674
0.140747210212
0.140886489727
0.141026584589
0.141167489043
0.141309197172
0.141451702962
0.141595000236
0.141739082686
0.141883943855
0.142029577149
0.142175975823
0.14232313297
0.142471041552
0.142619694369
0.142769084047
0.142919203077
0.143070043775
0.14322159829
0.143373858606
0.143526816527
0.143680463704
0.143834791586
0.143989791479
0.144145454455
0.144301771456
0.144458733193
0.144616330214
0.144774552857
0.144933391265
0.145092835397
0.145252874995
0.145413499579
0.145574698502
0.145736460865
0.145898775568
0.146061631296
0.146225016503
0.146388919417
0.146553328056
0.146718230171
0.146883613296
0.147049464733
0.147215771535
0.147382520481
0.147549698144
0.147717290816
0.147885284518
0.148053665049
0.148222417893
0.148391528307
0.148560981249
0.148730761401
0.148900853163
0.149071240666
0.149241907719
0.149412837869
0.149584014342
0.149755420069
0.149927037665
0.150098849443
0.150270837399
0.150442983195
0.15061526819
0.150787673383
0.150960179469
0.151132766773
0.151305415301
0.151478104694
0.151650814245
0.151823522877
0.15199620917
0.152168851319
0.152341427141
0.152513914086
0.152686289205
0.152858529161
0.153030610242
0.153202508301
0.153374198819
0.153545656823
0.153716856968
0.153887773452
0.154058380058
0.154228650121
0.154398556562
0.154568071816
0.154737167896
0.154905816349
0.155073988243
0.155241654182
0.155408784306
0.155575348244
0.155741315162
0.155906653703
0.156071332018
0.156235317752
0.156398578028
0.156561079443
0.156722788062
0.156883669419
0.157043688497
0.157202809722
0.157360996967
0.157518213544
0.157674422188
0.157829585038
0.157983663666
0.158136619027
0.158288411493
0.158439000812
0.158588346106
0.158736405882
0.158883138008
0.159028499701
0.159172447539
0.159314937436
0.159455924625
0.159595363681
0.159733208482
0.159869412216
0.16000392737
0.160136705713
0.160267698309
0.160396855475
0.160524126801
0.160649461132
0.160772806548
0.160894110374
0.161013319148
0.161130378635
0.161245233804
0.161357828817
0.161468107024
0.161576010957
0.161681482309
0.161784461935
0.161884889834
0.161982705143
0.162077846131
0.162170250175
0.162259853767
0.162346592484
0.162430400998
0.162511213055
0.162588961456
0.16266357806
0.162734993772
0.162803138518
0.162867941255
0.162929329936
0.16298723152
0.163041571949
0.163092276137
0.163139267964
0.163182470256
0.163221804783
0.16325719224
0.163288552235
0.163315803283
0.163338862787
0.163357647032
0.163372071167
0.163382049195
0.163387493963
0.163388317146
0.163384429235
0.163375739528
0.163362156111
0.16334358585
0.163319934377
0.163291106076
0.163257004072
0.163217530213
0.163172585066
0.163122067894
0.163065876649
0.163003907954
0.162936057097
0.162862218009
0.162782283253
0.16269614402
0.162603690097
0.162504809867
0.1623993903
0.162287316918
0.162168473803
0.162042743574
0.161910007373
0.161770144849
0.161623034151
0.161468551919
0.16130657324
0.161136971676
0.160959619223
0.160774386302
0.16058114175
0.1603797528
0.160170085081
0.159952002587
0.15972536766
0.159490041004
0.159245881644
0.158992746932
0.158730492506
0.158458972312
0.158178038567
0.157887541744
0.157587330578
0.157277252028
0.156957151291
0.156626871777
0.156286255065
0.155935140955
0.155573367402
0.15520077053
0.154817184591
0.154422442002
0.154016373285
0.15359880707
0.153169570111
0.152728487228
0.152275381342
0.151810073393
0.151332382447
0.15084212557
0.15033911786
0.149823172478
0.149294100552
0.148751711266
0.148195811761
0.147626207194
0.147042700688
0.146445093354
0.145833184264
0.145206770406
0.144565646791
0.143909606329
0.143238439883
0.142551936216
0.141849882085
0.141132062116
0.140398258857
0.139648252804
0.138881822346
0.138098743765
0.137298791286
0.136481737022
0.13564735101
0.134795401135
0.133925653264
0.133037871156
0.132131816413
0.131207248634
0.130263925312
0.129301601817
0.128320031485
0.127318965608
0.126298153343
0.12525734184
0.124196276224
0.12311469951
0.122012352759
0.12088897499
0.119744303191
0.118578072411
0.117390015668
0.116179864071
0.114947346757
0.113692190932
0.112414121895
0.111112863049
0.109788135959
0.108439660314
0.107067154004
0.105670333061
0.104248911833
0.102802602858
0.101331116955
0.099834163285
0.0983114493491
0.0967626809906
0.0951875625268
0.0935857966162
0.0919570844991
0.0903011259002
0.0886176190658
0.0869062608761
0.0851667468906
0.0833987712813
0.0816020270274
0.0797762058119
0.077920998224
0.0760360936946
0.0741211805874
0.072175946294
0.0702000771675
0.0681932587436
0.0661551757201
0.0640855119315
0.0619839506257
0.0598501742702
0.0576838648806
0.0554847038239
0.0532523722029
0.050986550519
0.0486869191575
0.0463531582353
0.0439849476748
0.0415819673789
0.0391438972649
0.0366704173474
0.0341612078227
0.0316159491035
0.0290343220613
0.026416007963
0.0237606886134
0.0210680463943
0.0183377645212
0.0155695269797
0.0127630187331
0.00991792565579
0.00703393485773
0.00411073462046
0.00114801461615
-0.00185453416106
-0.004897218993
-0.00798034568301
-0.0111042181477
-0.0142691384225
-0.0174754066109
-0.0207233206461
-0.0240131763
-0.02734526694
-0.0307198834727
-0.0341373142909
-0.0375978450232
-0.0411017584769
-0.0446493345844
-0.0482408500767
-0.0518765786325
-0.0555567904787
-0.0592817526154
-0.0630517281975
-0.066866976904
-0.0707277545294
-0.0746343129284
-0.0785868998901
-0.0825857589359
-0.0866311294195
-0.0907232461001
-0.0948623392425
-0.099048634418
-0.103282352379
-0.107563708855
-0.111892914668
-0.11627017521
-0.120695690721
-0.12516965601
-0.12969226025
-0.134263687111
-0.138884114224
-0.143553713484
-0.148272650767
-0.153041085646
-0.157859171711
-0.162727055938
-0.16764487902
-0.172612774996
-0.177630871328
-0.182699288617
-0.187818140599
-0.19298753404
-0.198207568652
-0.203478337087
-0.208799924667
-0.214172409388
-0.219595861743
-0.225070344924
-0.230595914464
-0.236172618255
-0.241800496476
-0.247479581523
-0.253209897948
-0.258991462294
-0.264824283336
-0.270708361625
-0.276643689739
-0.282630252131
-0.288668025083
-0.294756976564
-0.300897066392
-0.307088246211
-0.313330459021
-0.319623639691
-0.325967714716
-0.332362602089
-0.338808211607
-0.345304444308
-0.351851193009
-0.358448342077
-0.365095767309
-0.371793336045
-0.378540907392
-0.385338331658
-0.392185450933
-0.39908209875
-0.406028100212
-0.413023272246
-0.420067422911
-0.42716035236
-0.434301852159
-0.441491705543
-0.448729687565
-0.456015564645
-0.463349095567
-0.470730030301
-0.478158111011
-0.485633071605
-0.493154637897
-0.500722527774
-0.508336450863
-0.515996108949
-0.523701196023
-0.531451397954
-0.53924639291
-0.547085851415
-0.554969436016
-0.562896801714
-0.570867596025
-0.578881458516
-0.58693802163
-0.595036910237
-0.603177741808
-0.611360126353
-0.619583666732
-0.627847958595
-0.636152590433
-0.644497143514
-0.652881192342
-0.661304304053
-0.669766039285
-0.678265951704
-0.686803587937
-0.695378488315
-0.703990186267
-0.712638208655
-0.721322076126
-0.730041302773
-0.738795395932
-0.747583857356
-0.756406182059
-0.765261859219
-0.774150371984
-0.783071197417
-0.792023806858
-0.801007665597
-0.810022233655
-0.819066965049
-0.828141308716
-0.837244707922
-0.846376600492
-0.855536419488
-0.864723592464
-0.873937542288
-0.883177686972
-0.892443439512
-0.90173420857
-0.911049398185
| | |-MSE =  0.503917501266
| | |-finished  11  forest. fitness = 0.664930090353
-0.298273830624
0.109822038579
-0.179312114999
-0.318717329003
-0.385031140713
-0.0890361859457
-0.344837925635
0.0150036984523
-0.413947200523
-0.26935688991
-0.242204820348
-0.157684773944
-0.50896931101
-0.164215422166
-0.193104107643
-0.314655793128
-0.4298702833
-0.155455791475
-0.332761874736
-0.169720981248
-0.223054037782
-0.0928827724856
-0.173006646783
-0.370447149581
-0.43132519404
-0.138095661676
-0.472862975275
-0.0456159660769
-0.278013808323
-0.356575250034
-0.143287720791
-0.250965451181
-0.195074053016
-0.154374756866
-0.428389411016
-0.0116606353119
-0.0354658299591
-0.0211361376893
-0.204305103366
0.0132161385729
-0.338073413444
-0.335060494189
-0.267851984186
0.053078305633
0.0488661545528
0.0705621457263
-0.136017124125
0.233687265296
-0.103661769141
0.0752852058963
0.139782444108
-0.0834315638752
-0.342977751722
0.079294554817
0.0543516492812
0.22865932853
0.0567890438748
-0.0880441559438
0.153662277725
-0.143826046507
-0.235572680645
0.115303589601
-0.255133620875
0.117609318434
0.16078727655
0.119723322143
0.00317237223706
0.136519100994
0.175031448876
0.134303478616
-0.113041728684
0.355146453128
-0.147860596617
-0.125272535579
0.202512916808
0.218431470129
0.164369577901
0.118613381866
0.223013564274
-0.422974652104
0.109905172017
0.0200252834792
0.192574100439
0.17497342112
0.158184278133
0.163838335498
0.19132425153
-0.0364209447783
0.107223394011
-0.293726016875
0.152061856299
0.25051581988
0.120720034367
0.0765138303251
0.263598558447
0.256706994834
0.0366685749382
0.175742780132
0.365500528062
0.258802381201
-0.239539687795
0.196054122144
0.24339536
-0.284720237097
-0.192669035626
0.248359883475
0.110250542463
0.0846116569995
0.285551342642
0.11138708825
0.0359832866678
0.0647526211017
-0.0392001115168
0.233550613871
-0.164856057312
0.223034539232
0.176595221359
0.0668559282131
0.0350931607629
0.00261654683855
0.204932182723
0.105918175811
0.197486717605
0.221929572032
0.216387355825
-0.168776800955
-0.277102699374
-0.0211043077632
0.0149236966355
0.199565961232
0.135815026306
0.152355560185
0.0760888694421
0.199741704155
0.162425803227
0.161791435424
0.0193043897783
0.269345965282
0.135917440342
0.14879084538
0.125743466887
0.242033986399
-0.111240381863
-0.114974432758
0.0643083002873
0.267623553504
0.103081156658
0.0683256107921
-0.0353806896202
0.0999289780853
0.0699246502226
0.0659340226181
0.0392546569355
-0.233443982834
-0.10161141528
-0.0842425460035
0.000746685150535
-0.0437784000027
-0.239979019333
-0.000829360455724
-0.0683675235052
-0.0198833053846
-0.045950155131
-0.0171429111499
-0.126646558242
-0.14204310089
-0.0864163719094
-0.133402947693
-0.0707157703039
-0.0353645418577
-0.0937570417192
-0.25247782138
-0.207725705701
-0.21747937331
-0.209698264454
-0.15136109028
-0.181127866912
-0.234823397167
-0.143896783253
-0.33019068374
-0.203431116759
0.0138147439871
-0.161412765123
-0.36228080883
-0.324908950659
-0.169123643172
-0.217420641705
-0.260723656738
-0.210949167229
-0.326219831148
-0.0910151159725
-0.30625239304
-0.321886741431
-0.354494965757
-0.304145452939
-0.355130201172
-0.406019872805
-0.32087016211
-0.378045442281
-0.043738496355
-0.116642331353
-0.42394309687
-0.308793704245
-0.403796445926
-0.342210935245
-0.393163922607
-0.38799855309
-0.304245764728
-0.297000936353
-0.411399933594
-0.321779312933
-0.380578003361
-0.389168495335
-0.307358255877
-0.27184262743
-0.174731723433
-0.0141163981219
0.0832059678486
0.00832536801231
-0.235252678504
-0.317974864889
-0.246523558409
-0.116495122189
-0.227083726855
-0.32206358248
-0.279116341204
-0.310519402104
-0.361784319307
-0.244354497991
-0.299919846886
-0.14065393997
-0.323300502176
-0.238689394678
-0.379729068684
-0.26528767661
-0.197454635874
-0.264763416698
-0.2582583705
-0.0546291495372
-0.248618793773
-0.30054753198
-0.341970759441
-0.381711969303
-0.299991611007
-0.280201815866
-0.381578539119
-0.296721771908
-0.331154423615
-0.0883550504938
-0.361144256799
-0.324341888055
-0.276802838581
-0.290785964527
-0.348609249531
-0.263103707334
-0.221936810391
-0.416026522085
-0.290203363903
-0.359204512506
-0.393882634724
-0.327496836063
-0.24059922538
-0.309435938702
-0.372100318219
-0.225012287258
-0.34995888156
-0.350624752799
-0.223341213014
-0.259031727578
-0.19812584839
-0.226155562996
-0.199597015039
-0.330164304564
-0.164243900951
-0.296024355123
-0.164363447982
-0.0314834950188
-0.125410677906
-0.167519404259
-0.0403839888758
-0.137736115512
-0.101598836829
-0.122709794618
-0.0907535957317
-0.0827605863953
0.113418133596
-0.194833736835
-0.0708361291566
-0.138842060632
-0.0110045469296
-0.0286395991718
-0.00572568988655
0.0207200289516
0.10099510041
-0.191755985138
0.0507687262668
0.00124007120813
0.0690818973648
0.234642587563
0.0378820480685
0.0503601154677
0.091005014955
0.125876958851
0.0187171283777
-0.0305894836475
0.122052196186
-0.175472744851
0.120794787264
0.503262179218
-0.31446871756
-0.136015962404
0.18045662339
0.0918173224811
-0.154608172057
0.202724737095
0.0956861117269
0.252267797333
0.0290387250561
0.21791140924
0.21215538133
0.375005070971
0.0296285021303
0.164268223886
0.205506645156
0.227413169885
-0.0514378472572
-0.0166440345774
0.151970180251
0.30474380949
0.0638592169597
0.23674798023
-0.0606886842823
0.247719241371
0.281269776392
0.221570553649
0.162899513396
0.222760149377
0.300790418095
0.287485400091
0.153853018793
0.314549947549
0.296940065929
0.252985512729
0.217054332176
-0.0266590250088
0.272060198578
0.303907081037
-0.0308175605501
0.13265552248
0.274033010768
0.21815081786
0.372633132203
0.247909084796
0.281724412877
0.255614250741
0.442021658716
0.200206140876
0.436425469199
0.224313098375
0.157504762836
0.177660429188
0.297275708571
0.289158190933
0.28254732634
0.229386605344
0.121555821177
0.0762051330787
0.250272137071
0.380831033006
-0.0195245169114
0.271233898772
0.236389006491
0.297874420817
0.227145883473
0.450388986116
0.0904001308405
0.0637524789632
0.106731490062
-0.0076876273851
0.151722740213
-0.0313679072471
-0.209215350999
-0.0378069865571
0.113496545907
0.0703073881709
0.100750935544
0.0679718182112
0.0467550255894
0.0530372881027
0.0702641276379
0.0282578343243
0.463632567473
0.00838532469437
0.0396404003203
-0.132267719453
-0.080512151787
0.0101352133622
-0.197631993315
0.00982921100855
-0.0218846341275
-0.156018341947
-0.191843189018
-0.0634534980103
-0.183388844048
-0.0803598221345
-0.135493447069
-0.141277160112
-0.121870932147
-0.162648469917
-0.251144974817
-0.135220768329
-0.14880333613
-0.233907247274
-0.159195645746
-0.235134145632
-0.326597557384
-0.324403108978
-0.285213854163
-0.22987760622
-0.204752972954
-0.190141477788
-0.25735167034
-0.250641276429
-0.303344762562
-0.314770659722
-0.34454047934
-0.236409019764
-0.352151325889
-0.251492011987
-0.192618448799
-0.212691939565
-0.285679605998
-0.388234783014
-0.283989584278
-0.27950300264
-0.237888637493
-0.315540122134
-0.265611739402
-0.314812691261
-0.0695157336958
-0.243631234014
-0.316561556459
-0.300232499342
-0.281438069736
-0.298915545402
-0.307799320781
-0.27102792644
-0.199976945466
-0.252032364085
-0.190978462414
-0.178122101824
-0.157847872159
0.202622139563
-0.0966144050882
-0.012907051743
-0.24172320711
-0.125617754173
-0.0131731878291
0.0451320984725
0.0207657863957
-0.295706455752
-0.0874085626326
0.0803809147719
0.0237145364404
0.15787904758
0.295656114648
-0.122985337715
0.000238984340573
0.213787169197
0.2574721005
0.179726413546
0.272651353028
0.265181697259
0.234145738519
-0.281834265554
0.42343113658
0.330670058721
0.53683593952
0.512473537898
0.60795962173
0.584864324559
0.489898385824
0.329741776888
0.637747358946
0.657868908246
0.579690162388
0.576498000104
0.742937588421
0.761473995503
0.701733666936
0.786212344278
0.88194088401
0.829912954003
0.559407614891
0.903736835585
0.861077547613
0.844763282134
0.99259328227
0.595340831079
0.681062635249
0.957471295109
0.927772773275
0.961907038702
0.699358818605
0.951101913849
0.835703993141
0.863376068945
0.874040507036
0.856267906571
0.716205443119
0.769448431956
0.833860934825
0.745743148259
0.846153244572
0.425200513221
0.5236624928
0.732101126019
0.515782823221
0.813930727448
0.624081382748
0.800099294769
0.587633546285
0.542210153587
0.633770330543
0.500916579463
0.597977153238
0.259932189453
0.453440826957
0.422454737169
0.53323232234
0.288514332809
0.415993335169
0.632023807684
0.113565447759
0.354846043872
0.330342004967
0.234262516734
0.178187422663
-0.202361859241
0.00970166711802
0.0849739029662
0.146613140349
-0.0253775814845
0.108762574181
0.0687131742059
-0.119651304722
-0.0972175642481
-0.140765216755
-0.0858192775028
-0.0393547188996
-0.412001220044
-0.186482396091
-0.0674138728342
0.115421867335
-0.11213696667
-0.239387287334
-0.192504984153
-0.180563413839
-0.247821744276
-0.185390528404
-0.22151978079
-0.220215517065
-0.0734277327414
-0.155828817209
-0.235247947702
-0.270586713174
-0.311405844292
-0.241719866918
-0.277634627771
-0.171279584239
-0.233854605221
-0.217026813251
-0.270942943742
-0.32737526324
-0.22546106379
-0.272754884932
-0.169180964601
-0.200434071901
-0.168982331706
-0.180239492849
-0.300491439513
-0.122342495617
-0.167802287686
-0.0858012346822
-0.302994508855
-0.0578306984975
0.159460352271
-0.0538486325013
-0.0144016774221
-0.0456097910929
-0.357560242694
-0.0200832734807
0.109975333433
-0.103376557473
-0.186667628796
-0.069482330682
-0.333472919154
0.144253293278
0.058934572396
-0.0826103477819
-0.196307967151
0.135954873805
0.0416846085658
0.171771691131
0.268470876795
0.226690263275
-0.0456327180024
0.225941125348
0.129990413206
0.122589155588
-0.0010844837308
0.22491675348
-0.0678872934902
0.304146255553
0.335838760413
-0.0186983055586
0.26166556419
0.0981697102293
0.288684082886
0.501852776254
0.214523827676
0.396569508409
0.321814927718
0.319831458751
0.453392034294
0.189205927267
0.134979836865
0.463563618828
0.362672206848
0.251651915926
0.395127199254
0.143438699351
0.32992728797
0.230691445276
0.161345684211
0.465307419627
0.236425288548
0.286156664483
0.445568223827
0.232832503439
0.522107483639
0.398705469997
0.58206465067
0.449109039143
0.296955934537
0.215423728991
0.31666849117
0.526067555975
0.474262384114
0.0810613763991
0.386527324831
0.271801497369
-0.090751351699
0.264822938604
0.428987624737
0.375109485953
-0.0345612262599
0.457925578071
0.288789982413
0.218512628219
0.325158354364
0.168982450283
0.354376799469
0.428442952867
-0.0585700438141
0.225111910033
-0.053985642304
-0.00297252687115
0.478134374226
0.200673331558
0.331855174661
0.371098486937
0.247617171858
0.0539038681696
-0.052635910276
0.269346975803
0.309791583169
0.173465338902
0.313082382382
0.182921674961
0.230575029805
-0.551827262499
-0.0492834266749
0.0445817489044
0.132877834305
0.109682622135
0.182875957235
0.0776227357116
0.0698369355151
0.0019639082275
-0.0986620529877
0.0104100154629
-0.14340887298
0.0261261413608
-0.0273478833178
0.0351821237207
-0.00215344656704
-0.0275184228804
-0.285334366831
-0.133720143071
-0.122469001201
-0.126288038862
-0.0913737288739
-0.206707748785
-0.194794848716
-0.12475506368
-0.355949023776
-0.376756023244
-0.279723950647
-0.191039232666
-0.177267614242
-0.23027601459
-0.151456008155
-0.33843492708
-0.418768454058
-0.0963411937728
-0.263549947131
-0.069738184324
-0.302403327622
-0.242695505974
-0.125482522343
-0.116356759932
-0.0661263692685
-0.0130384050585
-0.0342576500474
0.0187719049639
-0.013125827952
-0.207270738718
-0.195970336004
-0.107765857182
-0.0554304259438
0.00286465215307
0.213558063104
-0.374421105837
-0.0239569938291
-0.242344534312
0.326432918012
0.279428519567
0.458198672771
0.257704626372
0.265345301449
0.477358483491
-0.317830731541
0.528328318865
0.653094869075
-0.360676162685
0.662375537318
0.74950482805
0.74164764391
0.731884345079
0.608051706463
0.489839164634
0.330227742993
0.357368038993
0.877178561321
0.930100157332
1.12610207205
0.923894926607
0.0432390117978
0.816895227176
0.955771436729
0.825188643368
1.13444212257
0.908198771008
1.00862803589
1.11932309602
0.962503889853
1.0820842552
0.262545563226
0.861907544795
0.240624085903
0.602679152287
0.804752892204
0.675140703426
0.615103777977
0.914964856698
0.831725033469
0.837948230362
0.729856029999
0.263845218677
-0.422394966035
0.644978359138
0.226418930896
0.590057920744
-0.0751276857833
0.192610510863
-0.0874096064353
0.298580193443
-0.160261918645
0.293812014152
0.276989633582
-0.231979529651
0.11475947552
0.0736191578108
-0.579132195899
-0.198636720162
-0.536449034169
-0.200190734842
-0.302535798726
-0.146911358578
0.0210371118697
-0.104575325367
-0.151322253574
-0.144995681191
-0.371683527373
-0.130538625646
-0.439609692935
-0.224556942174
-0.0436976508572
-0.103247733059
0.0218008594013
-0.19827068453
-0.227138010394
-0.194575784184
-0.0253327325987
0.174041766115
0.211383844082
0.281701486884
0.0455546389596
0.143436482136
-0.244307406217
0.470673633446
0.606123291705
0.555216579747
0.26706632008
0.292151954672
0.52338669933
0.300620542825
0.280642032827
0.84125513033
0.275502535916
0.49050281405
0.401195560222
0.218866579371
0.508743129307
0.773937927462
0.83991032958
0.74633565634
0.907777336089
0.966212913274
1.09553324585
1.08454185415
1.04052920468
0.402298985245
1.00622180494
0.432895100245
0.729871183295
1.04884653471
0.417460041859
0.230723789105
0.501260838951
0.855300661086
1.04908814154
1.05101928664
0.888663642325
0.536264088023
0.136468465394
0.708320031037
0.548486909366
-0.227806156643
0.495754518133
0.598659362232
0.072313013408
0.310705534075
-0.285161472739
0.213719655783
0.234024262026
0.253135731727
-0.0914285497937
0.255341735037
-0.410200363623
0.298363524236
-0.559742281785
0.304946528135
-0.313186445992
-0.234803651519
-0.442236448898
-0.156093114733
-0.085905831667
-0.435819309112
-0.325478440773
0.0469976928211
-0.297556571396
-0.270571663776
-0.0997273241902
-0.124553702342
-0.168784668843
-0.198136488903
-0.441264972656
-0.353118261027
-0.268161802806
-0.00722940857198
-0.224961106027
-0.205162426812
-0.467354291634
-0.189959712689
-0.311149372329
-0.288117210755
-0.208645967338
-0.331465162487
-0.104602291962
0.0530378623985
0.0967527863196
-0.0900519974954
-0.087371594382
-0.34110943844
-0.0528424983303
-0.734630743412
-0.0257736907283
-0.048506967547
-0.431798895915
0.157554826861
0.140463422696
0.184554074262
-0.455041732171
0.45174117043
0.569612662948
0.512063647955
-0.202245743738
0.00400954119316
-0.319174677423
0.473818286215
0.133621742616
0.305273979978
0.374979766696
0.320331273699
0.217281069642
0.116129191455
0.164056020108
0.251565550816
0.474224621215
-0.300749887322
0.256734436884
-0.261984747828
-0.00011799546882
0.185288760455
0.183667490244
-0.612264692148
-0.383068278353
0.360662659568
0.466638644754
0.222409943416
0.143170575545
0.207807334328
-0.185526222292
-0.292685909892
0.408876064107
-0.254021904396
0.193022372842
0.346651964553
-0.0347930592342
0.234663060056
-0.452438506103
0.328635004955
0.0925575433847
0.494828054064
0.501333904235
0.0821904171084
0.542211013233
-0.509365306155
-0.294025474225
-0.115360740545
0.343262457477
0.260150413585
-0.350289480525
0.160404942789
0.513346076498
0.333900604737
0.316074762148
-0.485261898895
-0.518885017217
-0.130606382237
-0.686869934869
-0.00542813191844
-0.0944232336717
-0.0587634471459
-0.0121793996585
-0.124667625393
0.100730215937
-0.303173691867
-0.455858620243
-0.323918302187
-0.0818698860631
-0.271054753271
-0.0239716169876
0.117452665376
-0.231378084557
-0.232579729762
-0.133064216563
-0.264045481748
-0.26822811173
-0.678956539351
-0.756323658378
-0.609660408199
-0.137031955053
-0.398470940984
-0.167617481605
-0.595234522967
-0.161569533836
-0.400642125304
| | |-MSE =  0.367157852009
| | |-finished  12  forest. fitness = 0.731444433085
-0.382562818818
-0.0756096885761
-0.18513174124
-0.244093113088
-0.346954729572
-0.297080093996
-0.20952177965
-0.254188985488
-0.256192751288
-0.372204263009
-0.278091352669
-0.187205347528
-0.182919335448
-0.218906614175
-0.133266633176
-0.28977508572
-0.273754303479
-0.400785628691
-0.407816706457
-0.296050098322
-0.134650679665
-0.147547180844
-0.405734709572
-0.314771302448
-0.31012102731
-0.324953829885
-0.199828682561
-0.352090511496
-0.335004830673
-0.283226579351
-0.164153265229
-0.117887884959
-0.0665669440701
0.167024842623
0.283421376598
0.143984991214
0.119757947054
-0.10541194115
-0.0488412875633
-0.188224650564
-0.220413086334
-0.0675524300867
-0.264356313199
-0.18390984829
-0.0349383036719
0.0953868248124
-0.033360637622
0.0681042600588
-0.0182123041976
0.0746879666547
0.099114832772
0.233081534199
-0.0144152627252
-0.120865403403
0.255120094823
0.225303551465
0.111664612148
0.047279181572
-0.0577647894273
-0.0811308628728
0.0226843439711
-0.145936668436
-0.172237497093
-0.133911095306
-0.0473443853903
0.0817461569416
-0.0644241315507
-0.139458834316
-0.194967082829
-0.0804915788766
0.00569560759409
-0.0115894208751
0.0645623116124
0.133417762075
0.15291918585
0.308395802528
-0.0897915473219
0.208326568354
0.00701978723186
0.0170834771088
0.115418696404
-0.05046329367
-0.156624844901
0.00771708391632
0.0116663919218
-0.0822109920507
-0.14510396932
0.0185138388897
-0.156112083948
0.129841108327
0.0592823510196
0.193785142877
0.00655510763815
-0.0213572004862
0.0778301184043
0.103311411126
-0.136183975345
-0.133433105059
0.0758002082778
0.114129511046
0.003103135373
-0.157984263302
0.0651896772103
0.107017215751
-0.144608621712
-0.113927986404
-0.159426516171
0.032760101216
0.025240704223
0.0630502551159
0.184469808143
0.153158719658
0.189104389127
0.112903205066
0.121647031496
0.00841990092037
-0.0808751391699
-0.123557767796
-0.0884470654185
-0.117298685237
-0.0330022616063
-0.183394588013
0.116327501148
-0.0210199815721
0.109425825551
0.0379597326725
0.0303248674952
0.117910187577
0.1304142572
-0.00356811240594
0.127330897797
0.0607838070608
0.121292952399
0.0336408687772
-0.054717541785
-0.00491781763495
-0.173474901847
-0.0960875031789
-0.170155215028
-0.0982678070187
0.0377481861333
0.0311070314111
0.0600439772276
-0.0286531522929
-0.0530269481129
-0.269964948139
-0.182266986969
-0.0841825202938
-0.130613852775
-0.255917157901
-0.161902384875
-0.191405115512
-0.0570382885527
0.152506488002
0.0627477328241
0.165855626322
0.0165607818753
0.102230582966
-0.174577020852
-0.259118310789
0.0413253964457
-0.0327940954746
0.0106284556173
0.11594621721
-0.204896326644
0.0676679566892
0.205125967959
0.144506091971
0.0466049273638
-0.223605223567
-0.211820625302
-0.197202412278
-0.274729936515
-0.406396774871
-0.386564787277
-0.158678976389
-0.175611998902
-0.239228545687
-0.149681339132
-0.161721758799
-0.165236240161
-0.20212697532
-0.214706656676
-0.079489154664
0.0235813887883
-0.0476966348576
-0.0983923078257
-0.266508949121
-0.371869011911
-0.290436303646
-0.348931704625
-0.327946268194
-0.418343480194
-0.375842871226
-0.393431666171
-0.414870070171
-0.3106119773
-0.288327719892
-0.319736595794
-0.301357549358
-0.360383679248
-0.300001459782
-0.293560514312
-0.226148217253
-0.378200351186
-0.369927625441
-0.347874241024
-0.104962739028
-0.0692562450393
0.0506405858669
-0.22553397235
0.112441222803
-0.243116311751
-0.209340624513
-0.28913176781
-0.0359553558218
-0.0180847497965
-0.215009532484
-0.371619415585
-0.317017741306
-0.204628356803
-0.255711850302
-0.365927884399
-0.233895281028
-0.240034270516
-0.270351815017
-0.239654864537
-0.228540266009
-0.336067843276
-0.39781894633
-0.268409847413
-0.343098519413
-0.361917062783
-0.137511150598
-0.328125623281
-0.126293945991
-0.0247838723706
-0.22765972044
-0.316166702898
-0.0361739026303
0.0339708324133
-0.243758096797
0.0107865946578
-0.342265389818
-0.305816507012
-0.250390041909
-0.278541756111
-0.305767705415
-0.397402832816
-0.415026415403
-0.361763010703
-0.414287731323
-0.340452771407
-0.32683694139
-0.302665308497
-0.243210808632
-0.219570316382
-0.28672474621
-0.126532881871
-0.00267110129474
-0.294978170828
-0.109702900105
-0.151513304508
-0.0873983187018
-0.0422665260632
-0.180991615423
-0.228457032083
-0.107858202734
-0.348166661675
-0.337061829902
-0.347514787142
-0.216799018892
-0.245198539087
-0.38107302709
-0.265575498038
-0.0748640464028
-0.111236077626
-0.250236357747
-0.088158736624
-0.10133879009
-0.195902431896
-0.111187555064
0.0220322752199
-0.1438023645
-0.152135127713
0.0928579309781
-0.141920613283
-0.225454989407
0.0271027925544
0.0709875799453
-0.157272485411
-0.0798970292508
-0.106163333544
-0.140248655808
-0.0352641410298
-0.154555247328
-0.0718744756414
0.0282206107629
-0.154497109364
-0.125771000574
-0.147046453888
-0.164212776884
0.190493956026
-0.0741150486414
0.262513894603
0.358821509528
0.491273998775
0.212591943507
0.217630748547
0.018024609885
-0.00829634445848
0.124712085128
0.180846866477
-0.0169797086985
-0.0776618778356
-0.00844914481222
0.108008994347
-0.00994968708689
0.0433717740143
0.0974875543351
0.377112364348
0.284544355476
0.0756627512516
0.248025496594
0.143818511013
0.404192602365
0.255719678589
0.0215224351
0.135340567228
0.0941466086792
0.0670077333713
0.0720181511194
0.0565961778746
0.13288487322
-0.0360425702111
0.038611234903
0.0921413024698
0.0450440428715
0.0431988054426
0.00193672452391
0.00376428324676
0.107147716726
-0.00772009140241
0.0197768594066
-0.102956336929
-0.0200109021068
-0.0106313040187
-0.224945612412
-0.25349188754
-0.0925842108157
-0.0262096611619
0.145760531276
0.0053596569981
0.108388387474
0.205476562558
0.24158225661
0.0753952408159
0.232611258511
0.0911055606288
-0.134114627549
-0.00429006915741
-0.0497774399804
0.0476866502034
0.0388905696348
-0.0968140945171
0.0400732140978
0.144599363248
0.0326713998501
0.143811461344
0.352983349894
0.397315806167
0.334059109073
0.338945745872
0.430280390139
-0.0326639056919
-0.0681848375509
-0.221949300663
0.174618198568
-0.00366786744047
-0.0616435410424
-0.12258876655
-0.0151191422095
0.180281719776
0.346592677888
0.223862816947
0.190424807819
0.132574751366
0.362794797373
0.29070783545
0.00365029137976
0.0821240598002
-0.00540103038658
-0.145847949192
-0.333493012357
-0.00745739708817
-0.00621035765544
0.0137269029954
0.179488533365
0.202618178815
0.150786779153
0.277368098024
0.224098066336
-0.183534903356
-0.123739249254
0.12486617438
-0.0495792746271
-0.0934232723851
-0.120422850026
-0.0474488758646
-0.0743499542525
-0.0624811652991
-0.364782228203
-0.350980609077
-0.380576507709
-0.153405884926
-0.332264133307
-0.199897433382
-0.346431093226
-0.189648341081
-0.343820030075
-0.326880481062
-0.190088899228
-0.138046313193
-0.198399632527
-0.182948583507
-0.0971657500659
-0.146186257841
-0.126930503853
-0.361629478476
-0.224290634733
-0.190331696966
-0.337137577066
-0.40276841969
-0.303767737937
-0.337003367064
-0.346348002657
-0.413721662442
-0.334292074631
-0.359751214123
-0.330668395943
-0.324347164921
-0.376035765695
-0.333411672342
-0.327259169547
-0.337099717823
-0.414699354139
-0.291068932753
-0.273755329083
-0.0652349867857
-0.364382731511
-0.305986468111
-0.0628194102703
0.101879121461
-0.101423301736
-0.101218004634
-0.273920596323
0.0283498143941
0.0440924545932
0.0189333276569
-0.00352414985895
-0.0650451446266
-0.112338261926
-0.00805365599122
0.093827456221
-0.063466489473
0.0836406152593
-0.12784706211
-1.89162342124e-05
0.100598055651
-0.0167902585335
0.249095476614
0.422741956896
0.333387488179
0.399552637619
0.40433237709
0.428858671142
0.456719196491
0.461346319853
0.362804814972
0.460289269037
0.288533993967
0.373865791108
0.513877826969
0.304579705921
0.458226938167
0.382102510782
0.271882617802
0.454956191974
0.514208434772
0.519669921384
0.551709701016
0.651066558012
0.757505093668
0.852085489308
0.60333173397
1.10591377137
1.00424098534
0.668787893385
1.04340158854
0.703566095254
0.71392614519
0.531290501405
0.697971793697
0.807388466069
0.5996251957
0.636277698472
0.854088603184
0.999781901653
0.586970435695
0.804933071943
0.742964721982
0.655215185271
0.487351791596
0.484818821542
0.410112775138
0.309049592794
0.436234232429
0.411542538686
0.404311769562
0.575639214068
0.358529134434
0.6032667344
0.433718123321
0.44356456874
0.356953237331
0.486498790105
0.238591911916
0.373275041363
0.493151811201
0.521749540802
0.355727493523
0.239461963508
0.359006151754
0.0324680013944
0.191152345102
0.165846338945
-0.0841588109131
0.0432060856035
-0.123630987039
-0.0601861088097
0.0611521558556
-0.148819205365
-0.140270790694
-0.201411509991
-0.111387413956
-0.12493304669
-0.0683321018746
-0.215232767992
-0.219374387723
-0.28120138539
-0.0974774048162
-0.304981936972
-0.265621752954
-0.224936134145
-0.127950586673
-0.149119934275
-0.129035286286
-0.283447945203
-0.368412154192
-0.276008098316
-0.418538281063
-0.222393773022
-0.416460398673
-0.316721349752
-0.250545434988
-0.322595120293
-0.288777687171
-0.235935334379
-0.167012806536
-0.297745405924
-0.342482002852
-0.279675689779
-0.367407063592
-0.235338639691
-0.37715418298
-0.263403481146
-0.137297654179
0.0984106324436
0.255072271357
-0.000163443743137
-0.00284610931645
-0.214602471411
0.0591483461758
-0.203023201791
-0.107333922693
-0.232666007521
-0.192604354944
-0.113031242381
0.0404497818387
-0.0927085341531
-0.143157127811
-0.205751356219
-0.0893768808252
-0.117860029519
-0.336077770823
-0.219710448238
-0.114843521717
-0.180204624034
-0.0855249675764
-0.28431839034
-0.146706068125
-0.034053112857
-0.0678433010932
0.0269536682964
0.0812204487322
0.117271242939
0.198415415943
0.00695624473941
0.0473994453454
0.124311698597
0.141619191874
0.134458399375
0.203983885601
0.276921387632
0.224310907742
0.156462796125
0.307592218047
0.23902610499
0.140859504932
0.0381998181929
-0.0116469463974
0.122915285551
0.162833298626
-0.0665713611994
0.0244886381274
0.0345040815697
0.150721034141
0.288907421832
0.276423158014
0.270284765027
0.284603561949
0.41737841747
0.189918019062
0.348556065348
0.243416930899
0.244960869954
0.286747690476
0.198499052848
0.132656384138
0.411212947785
0.273261276695
0.181979488423
0.11461143491
0.320693485874
0.379757699521
0.157856813438
0.342513257893
0.47706781251
0.170799016022
0.633810451296
0.355942738559
0.259371216505
0.538719297872
0.499545753382
0.301137493255
0.249428138024
0.303231513694
0.205449938467
0.168651753178
0.254542147912
0.148194911164
0.227035230024
0.105390490028
0.0895169717642
0.0686550585811
0.103285855585
-0.0754919884192
0.0637724270381
-0.0118034801579
0.143885659831
0.094361530465
0.276757299914
0.421515979026
0.25020994063
0.261685458374
0.377102443752
0.628197485049
0.752210982303
0.306993082841
0.147842525963
0.690250045638
0.471851556738
0.423080426649
0.415075696528
0.141732075262
0.068579204574
-0.253787122765
0.0998316297787
0.0254422441124
-0.109408032852
-0.199258611041
-0.189253975338
-0.107291619845
-0.226475907497
0.0330926815464
0.126645393747
0.105517614441
0.0947381136306
-0.150513999115
0.0450279594333
-0.0136424949102
0.0855110009983
-0.276056088364
-0.0436469786737
0.100515305159
-0.0860130416032
-0.122949292118
-0.230564399019
-0.0819517211912
-0.205696403129
-0.130417624939
-0.237806226909
-0.33670344423
-0.274012279649
-0.183719614157
-0.363512733336
-0.0973203851867
-0.155287878713
-0.210291314888
0.0577452582913
0.0825869889372
0.042312526027
0.212096281315
0.0719971350866
0.0689639122601
0.246946300364
0.0448366568772
-0.0544801802463
0.0105597784509
0.129295027592
-0.00742346161139
-0.153807555349
-0.0329365066266
-0.0589119582446
0.0190197211901
-0.0648992792679
-0.138873586177
-0.0773431808651
-0.0586401679305
0.00456377830503
0.118064620544
0.20062584442
0.273504119932
0.266416099531
0.348956484328
0.526849151653
0.550545812527
0.661017487391
0.612967101545
0.487161990846
0.775415975305
0.722554631614
0.704653239159
0.968038357409
0.846916102793
0.953117129696
1.05194282283
1.06086308492
0.861140341489
1.21178911417
1.06052191079
0.818773423298
0.642641616913
0.932972365444
0.4225792419
0.858006431753
0.834883032821
0.879652536816
0.816200436286
0.930808895096
0.933383274658
1.11161702005
0.909070082347
0.529953106454
0.869856806929
0.742400071518
0.812412312408
0.869234692487
0.625769832342
0.700963582866
0.610363792904
0.467142619479
0.336318408294
0.0522660963174
0.251733831191
0.403820187032
0.0956590557975
0.111448842482
0.085340852359
0.199597181707
-0.0374308549991
-0.108039338243
-0.0420489848565
-0.136480652182
-0.107120612369
-0.0258031620106
-0.100996563931
-0.195869872447
-0.0841771965779
-0.213904344811
-0.134912727264
-0.0388683740671
-0.0887231214327
-0.204239974999
-0.230439434623
-0.0801845598563
-0.156632749466
0.0524371386467
-0.142828937366
0.295660389771
0.316928740468
0.256913229741
0.33939446854
0.0263876826458
-0.0602207271867
-0.0302940938691
-0.194840477178
0.0104189681947
-0.119456415632
0.189078182664
0.358086118498
0.267419019143
0.405108506602
0.227830854812
0.377551075144
0.714470415968
0.510912652519
0.472942788041
0.913862091153
0.717386664712
0.723907779758
0.757832554221
0.842185042129
0.892742005091
0.813493736645
0.882511112753
0.995814131551
0.802931368279
0.909666225326
0.624394904793
0.949364537204
0.978893981539
0.804414749016
0.998560592801
0.758082830932
0.795946824386
0.873610642631
1.03629028356
1.05269455926
1.10624236358
0.989565758368
0.956518185086
0.654907398768
0.936170444764
0.577607943149
0.441595896937
0.28726587265
0.286464850145
0.274396540513
0.216512507048
0.250524005549
0.221132730496
0.0800311864894
0.225767171926
0.188631834895
0.0405115543115
0.0391773181461
0.213167860789
0.234414531307
0.259496961634
-0.0509303316555
0.120403905737
0.0751098760974
0.161316646678
0.0732673247129
-0.0766002202937
-0.152404741287
-0.351587768732
-0.256537542065
-0.296345815042
-0.320336869479
-0.300337101653
-0.177042536586
-0.248463143351
-0.245173158619
-0.0533296571449
-0.327971764867
0.0878017563986
-0.028504452562
0.185058720048
0.0550660589212
0.171002175728
0.129142665456
-0.0404108554108
0.062236257632
0.0363930360796
-0.256075076978
-0.119941886558
-0.371909714982
-0.0304032672012
-0.106687455446
-0.127299820416
-0.215754335398
0.0322195800933
-0.0126881627777
0.0431459175795
-0.0822541025919
-0.203045472728
-0.130037735724
0.0769343199326
0.191420579767
0.161327093317
0.155917409672
0.332830887181
0.335706701323
0.170919885713
0.17055005744
0.200511385198
0.0701048433655
0.0158118240118
0.17535481045
0.144241626744
0.0592730906685
0.111457138873
0.111631673319
0.129935427331
0.259133790179
0.167482562757
0.364485745654
0.343754636023
0.388146249826
0.52189186023
0.605331023631
0.469602664057
0.425042488494
0.306570993001
0.360997359132
0.408536406105
0.354589556285
0.210101700323
0.34801813818
0.260533276281
0.411811364167
0.323834525696
0.135538861279
0.351053819981
0.336470670645
0.134762473826
0.260753968542
0.11562158394
0.22560625159
-0.00111895170029
0.220943319324
0.28371766598
0.316818171194
0.508283248151
0.579715334598
0.546778570494
0.341644062982
0.582210953977
0.50123945119
0.360282927232
0.193050569262
0.210446231523
0.350506621923
0.256990388025
0.28607259294
0.108722111868
0.231517800259
0.289531353932
0.431396975164
0.131767937386
0.413167695154
0.262511441672
0.270760289063
0.178176854282
0.0540215922211
-0.0481473740696
-0.119517656844
0.0120204900644
0.229343974099
0.0895363805399
0.0624821986408
-0.0247949773307
0.00515562864933
0.171115624762
0.112074596721
-0.0234287010615
0.0668283832056
0.208953183422
0.272423856761
0.0190831098718
0.000783475355654
0.305290795833
0.0905770293532
0.156424879631
-0.210787628535
-0.177651564521
-0.172929744128
-0.305785125475
| | |-MSE =  0.405308399968
| | |-finished  13  forest. fitness = 0.711587577519
0.251550109251
0.312004335363
0.329417198279
0.347291707886
0.246663227147
0.259464689259
0.368646753738
0.240235446602
0.265204392921
0.218967974381
0.274096875004
0.267318088374
0.492770080492
0.540919826985
0.307982579164
0.22607285997
0.57631865295
0.244789044575
0.226266010783
0.230641535633
0.299534593415
0.362146163891
0.502879216936
0.403765557811
0.209878675539
0.281554027036
0.260667393994
0.407035124684
0.576905389915
0.258773104909
0.185812626033
0.437461104
0.507085629462
0.532514430871
0.444518200656
0.429106581846
0.228738080732
0.177419557444
0.345238001868
0.189341558261
0.215215804556
0.207591856269
0.455051400149
0.230992405328
0.772463864143
0.691120407254
0.391328807463
0.364142980171
0.376861080729
0.208631772174
0.184886710182
0.459327628938
0.321752715652
0.192584769875
0.127366121059
0.382160472821
0.198907629336
0.192419962795
0.248624506054
0.00302017048061
0.207927180009
0.169560324157
0.229571215468
0.630493308137
0.439391410238
0.15243673318
0.157166318702
0.199723325455
0.185134595501
0.163456797003
0.223715194888
0.490118425576
0.653164798785
0.66544260588
0.423456010508
0.207749583842
0.504097687157
0.41027190094
0.535427019523
0.597536613855
0.313194460887
0.0399866378683
0.173842653963
0.555559145981
0.562990630291
0.102273144238
0.281472766741
0.889472509091
0.396823710054
0.591641378259
0.394821204715
0.393654794112
0.775765912923
0.846105229983
0.162874221673
0.256771228264
0.504399689018
0.616514323444
0.516966779401
0.612044817824
0.561748932024
0.23447587408
0.515263769321
0.482841811075
0.466239995701
0.31315719983
0.428853440769
0.149304159852
0.190042848677
0.596563001703
0.148430735168
0.289357565052
0.254368106457
0.64216582595
0.298613346366
0.37027661121
0.444177342368
0.225553192259
0.255529322243
0.298783350585
0.366499813709
0.196634179752
0.476979291525
0.321403075795
0.199302771423
0.12202446161
0.65133524888
0.428177977106
0.176261548395
0.410757098791
0.585963588819
0.473219078102
0.198493202742
0.138314429776
0.0680609065515
0.290830977924
0.0421805254696
0.36413328686
0.387259949549
0.105113583677
0.151733296111
0.221991331797
0.188740859524
0.162782176108
0.18477628074
0.155335565797
0.536357854304
0.0334949251458
0.161935547572
0.443547254015
0.44238542912
0.584932387293
0.441148574288
0.449443015195
0.215095752163
0.277477788319
0.0695187941337
0.167804841464
0.080962590723
0.177162999214
-0.0578887423109
0.160590160328
0.0637485002024
0.104717973956
0.236121289835
0.714277814218
0.164451025384
0.157359538342
0.278948361768
0.330083406245
0.265940870567
0.302306958561
0.301071978721
0.336276663007
0.355731065012
-0.00521405466223
0.138384006278
0.109544870196
0.253797279259
-0.0171160833801
0.24577130802
0.17800064766
0.107806588086
0.153648236502
0.051192647945
0.44698452045
0.112285856186
0.589861052054
0.421502899127
0.279647092294
0.385891353825
0.273468337259
0.278276310416
0.42718459795
0.197316818781
0.529893630175
0.205697521031
0.0203966003208
0.219151785845
0.268817248597
0.0631630252153
0.256129475046
0.106393125231
-0.112166683331
0.125911925393
0.0758474808799
0.224233468855
0.0936474114518
0.0524881363062
-0.0865622869825
0.263197905723
0.155787843839
0.341329207248
0.384262678631
0.365174678512
0.202178449608
0.20525311632
0.247953382441
0.0743640857922
0.181837224451
0.23066500132
0.0784048622453
0.0409502075274
0.111282772704
0.0575485171697
0.503992675994
0.476935959322
0.142653205374
0.321937954566
0.266294511504
0.245125530796
0.189307538121
0.420533000424
0.0603405307751
0.0742174021195
0.0161030478787
0.163671820176
0.215329209844
0.193904938766
0.0838805818925
0.075625867671
0.0660605565919
0.111510110354
0.171324234406
0.134276272226
0.20917420805
0.119353764745
0.145984729319
0.0655893835556
0.113485734117
0.133508055749
-0.0397683417426
-0.00552112431788
0.153755318591
0.208615328257
0.123643105195
0.093090352172
0.178699473096
0.153612479841
-0.0522084535572
0.0631579495936
0.0528167484849
-0.0443260944653
0.261139507823
-0.0632792390536
0.307402784324
0.330105700559
0.200153246183
0.391526138082
0.17806956698
0.0679013612271
-0.0515402577991
0.146026691592
0.118394815667
0.00964227785676
0.0660660345773
0.143488776297
0.652106137463
0.0758194374947
0.22533684067
0.292081030761
0.142216399733
0.291619261085
0.309277307925
0.0954787243015
0.0889413080672
0.303695967581
0.112116681789
0.267052084239
0.103159872924
0.14840283484
0.0427392917675
0.155980608031
0.187944193989
-0.0218860747097
0.135108774076
0.26946153889
0.320222159026
-0.0257138886
0.125124363039
0.23464151711
0.0974353795743
0.0933965694447
0.206977827872
-0.128922367079
-0.207613315926
0.148935674572
-0.0997552246252
0.14138881003
0.222848877053
-0.111340033668
0.0246391316788
0.162701302488
0.144598901277
0.111414287635
0.15168719587
-0.0763763952121
0.218531996413
0.214378719629
-0.073207447743
0.0834890417105
0.0756621307729
0.166020260255
0.253075441057
0.243552024011
0.0250177015959
0.053048519353
0.0335580069997
0.105875282631
0.038606253866
0.308723682206
0.15801703895
0.327259770398
-0.04472287113
0.178510711047
0.199954681272
0.185212761718
-0.0186956480533
0.107161339468
0.0763904751337
0.204791316936
0.111649540495
0.135166787583
0.119644163207
0.107971046097
0.124562901467
-0.113145396193
0.166224568441
0.0801107677508
0.178997963185
0.0632557270373
0.11163041871
-0.20248872081
-0.142274716203
0.00955273748666
0.1148965575
-0.0130831675128
0.0772451608404
0.219461246337
-0.0873844223462
-0.156760997082
0.0957688441151
-0.0363581100334
0.106019427183
0.157608053552
0.152208274269
0.519181551188
0.287775363762
-0.106106038519
0.253763432157
0.0430656186783
-0.020876134733
-0.0550864937645
-0.0247799139263
0.178010543264
0.179389810007
-0.156389868176
-0.0951924395446
0.0046018267748
0.0671089154292
0.112733408852
-0.113699708123
0.121580283321
0.100982695918
0.0739909340362
0.0226407787445
0.0482686298821
-0.0845292539382
0.234311556732
0.245747204499
0.217294125719
-0.00855797772039
0.202019784262
0.25099548667
0.240248961547
0.21971696374
0.264886926866
0.0927459003648
0.289667049734
0.102942454563
-0.0835364224673
0.194833892806
0.0144091583502
0.309861591875
0.18407789236
0.189400713058
0.345418331588
-0.0211519925651
0.106112408566
-0.0831855600244
0.0591913372343
0.13208523532
0.169583765729
0.0625501392294
-0.0014125745039
0.138664379383
0.0133208701759
0.230194973757
0.0239142547025
0.19367533656
-0.0411759592014
0.173042747841
-0.0528075694155
0.0500136987923
-0.0800285693602
-0.0402012806949
-0.175654353819
0.187127121759
0.169837315723
0.0749140042232
0.109695324365
0.224143245841
0.272251734748
0.198545284844
0.304341436415
0.0244090928864
0.232168479708
0.0676452904881
0.00848782310973
0.185709770917
-0.0448622532573
0.0908718020594
0.0153226981398
0.179720124716
-0.0314131076771
0.00262752599787
0.135354460664
0.19229270109
-0.0545284299316
0.210170408697
0.0487933781071
-0.140190258623
0.171322507093
0.086137716179
0.0146607441829
0.018642299596
0.184598748919
0.0702844577812
0.0381474522063
0.0852535112424
0.0655780510192
0.068590483409
0.0933456625553
-0.155573229488
-0.231162268573
-0.0674495131628
0.0173405397458
-0.0689496912839
0.0703788839271
-0.300683406232
-0.0776388860438
0.197039041489
0.110070462459
0.145405689337
-0.142696562924
-0.255860881123
0.0433100795307
-0.186650484718
-0.0785032778616
0.140452819397
-0.0857023647761
-0.0272175251635
0.0603516263817
-0.0130429947491
0.0995999055181
0.119944817007
0.0925673775604
0.0621779320569
0.214156711141
-0.0612205081209
-0.0395735089258
-0.0624643097088
-0.296141131836
0.00856473762626
-0.175877482859
0.0987189071107
-0.0153784555089
0.116174705246
0.0466199506383
0.249008015777
0.316975310746
0.128278322532
0.192123786801
0.0871921900326
0.141635165334
0.0184964320551
0.298731097999
0.187632246809
0.0118450053469
0.0290268336166
0.189226304575
0.090765467841
-0.0298500633937
-0.12055245695
0.106626865031
0.114669204632
-0.130465351148
-0.191073210005
0.0623817979984
0.0704702895132
-0.0894809230146
0.168133968562
0.171247523756
0.261487802508
0.0645665178782
0.238114572014
0.163547113308
0.0532819703761
0.103782011932
0.0365256675546
-0.09473598616
0.26651365689
-0.0910168699939
-0.26286811317
0.105968575385
-0.0675752893094
-0.11863464711
-0.1307101408
0.0939778789959
0.0214499552909
0.030185004086
-0.0413639828326
0.00111288004818
-0.152449595836
0.0695280233342
-0.387346302152
0.0260124216811
0.0274412608685
0.147014427173
-0.302986857949
-0.216096572063
-0.18414656198
0.181495570056
-0.000960782492666
0.127590633448
-0.199912543221
-0.219135863581
0.0269828585583
0.149872979706
-0.444519848294
0.00289758547132
-0.0742930202097
0.018484461243
-0.194003603453
0.0422664377154
0.053664586615
-0.1102358871
0.113162024297
0.040293411026
0.0743535040529
-0.0930551052952
0.151314862488
-0.349811431718
0.0842500536406
-0.0567662814093
-0.103581283917
-0.294032213076
0.0717883757713
-0.0221331703094
-0.233714715779
-0.198895037113
-0.0922470071662
-0.0776804604756
-0.0397074870012
0.125223630732
0.117542147123
0.13465640505
-0.0482087838627
-0.108952563694
-0.286593264284
-0.0369652320442
-0.104492831897
-0.108883644866
-0.205890533395
0.0591514221902
0.0424157612227
-0.160699128185
0.0760563966359
-0.207727644411
0.0230618449707
0.0192739258616
0.124757621884
0.0755054102702
-0.302438697705
0.0489658358771
-0.0233695611799
-0.395740086357
-0.135617077991
-0.234068966117
-0.00953686503897
0.0810611183472
-0.344862192978
0.0842904461547
-0.315347394437
0.0906791310006
-0.195162690112
-0.0804897076959
-0.095797121519
-0.214348584951
0.00884357106074
-0.138814584973
-0.220979770776
-0.0837474407207
-0.24952770164
-0.131335032254
0.0261256152022
0.0702222828766
-0.364614710351
-0.0443687530575
-0.194848992184
-0.146168305982
-0.0440090403408
-0.300664493384
-0.232850804258
-0.0769223487946
-0.160283644288
-0.0897449484793
-0.166021656696
-0.305046131031
-0.330578419114
-0.349291043294
-0.219579916425
0.0627189112092
-0.0985606221071
-0.252990282194
-0.209674548883
-0.43605628513
-0.0584066952787
-0.36108010859
-0.252592687876
-0.297356882985
0.0742258108073
-0.0152895976272
0.114689806397
-0.319924928524
-0.167060000763
0.0796624324368
-0.018942373913
-0.0157192865553
0.0332526285701
0.0553893323154
-0.265704055866
0.0517403379026
-0.0384255795444
-0.187288571107
-0.248888498041
0.0708192091288
-0.182471619507
0.0681810175921
0.0178029242876
0.0735904675483
-0.0833870029014
-0.403358833768
-0.183055526212
0.149814167014
-0.243839267127
0.00351673129086
-0.0600658940068
0.0780138824674
0.102235162755
0.0969650786582
-0.0525359297896
0.121728365911
0.103385654941
0.0660950215898
0.0810862896623
0.0672895095875
0.0791858635926
-0.0174560618781
-0.232679729162
-0.0638425526967
0.142593662595
0.200869705927
0.127871113102
0.0247417421784
0.0870887454157
-0.191424685481
0.12226044203
-0.0362689624317
-0.125779458284
-0.201112670234
-0.0663493091423
-0.044894266844
-0.470129892399
-0.136913974753
-0.30123330398
-0.01438386102
-0.409688597442
-0.205694109287
-0.318207965402
-0.00722633709045
-0.108100216015
-0.100853841048
-0.408191182398
-0.0950994999586
0.0680846218605
-0.145473175657
0.122212406528
-0.299495800041
-0.432382348448
-0.132953522469
-0.469412023482
-0.0287645240104
0.054796742461
-0.204866639571
-0.121235999914
-0.079531537233
-0.164954649759
-0.0223758621591
0.110103230016
0.0161202881433
-0.0547482158063
-0.285525121648
-0.0290718873336
-0.172337359708
-0.0662611159647
-0.235877625728
-0.0826808893552
-0.23734803234
0.128439127308
0.0582550874593
-0.246442116693
-0.0329679946786
-0.336664687671
0.164954825988
-0.33575360035
0.0164592058511
-0.0120933238048
0.0297489473734
0.161711604252
0.0240884521599
-0.0645860802008
0.0255822880556
-0.195524009495
-0.202002491693
0.0995298399567
-0.0265586817822
-0.181227062082
0.15402738353
-0.068305788631
-0.13541537228
-0.139004881464
-0.1072856517
0.0698861143858
-0.0160017049498
-0.0277368574259
-0.189391681172
-0.199135789453
-0.0442525496328
-0.273803206488
-0.239830124573
0.0729024182812
0.126094156977
-0.158692404991
0.0149001222956
0.102078896468
-0.2525737956
0.108411071798
0.0812864437139
-0.0284238230329
-0.209098915619
-0.060776917706
0.075441510758
-0.245703543064
0.0824113495684
0.0733082377293
0.0248983095482
-0.0524027494741
-0.225105845401
0.0102311811177
-0.184986323619
-0.479526805288
0.0620740148345
-0.0369131808578
0.0128388741853
-0.176399789025
0.0535302134672
-0.0858080763848
-0.295867518688
-0.0168273717814
-0.266581664174
-0.116496717353
-0.205152777412
-0.374573762586
-0.321894562216
-0.17558969375
-0.382959348996
-0.435790076051
-0.109445865
0.0971377783618
0.0998860196764
0.0489303403184
0.000991885451841
0.0966127145802
-0.0865903814049
-0.313243182946
-0.134649150512
0.00997581911943
-0.129027792645
-0.0407286496297
-0.258041346816
-0.551613629169
-0.393173839682
-0.201974415787
0.0678285341755
-0.30624524522
-0.371753226055
-0.153531834682
-0.0958684790712
0.0928775302818
-0.422563228607
0.0753362650832
-0.110055629114
-0.306428225277
-0.0668804015636
-0.1886033964
0.118729523158
0.0847458525061
-0.317004827515
-0.226029661538
0.0360148336301
-0.049216320336
-0.242861171523
-0.15120922246
0.0621849460385
0.0191773239011
0.152782271582
-0.281400404569
-0.290828514303
0.00767113177351
-0.00738463214569
0.110381442519
-0.274889717784
-0.285440476229
0.110328361311
-0.338357419261
-0.28157541823
0.00699918008808
0.0153793623836
-0.128565262894
-0.181756238571
-0.177681757506
-0.0820471199202
0.0108311552669
-0.402426121104
-0.136709881096
-0.210481473599
-0.473777398316
-0.249044995268
-0.15764292212
-0.186592413156
-0.140166716095
-0.117262442432
-0.410142558657
-0.295904815042
-0.51414856729
-0.173685762302
-0.344114057753
-0.187046716858
-0.497051326411
-0.22055178407
-0.406479049842
-0.0287889411981
-0.0617834089031
-0.394098713586
-0.112005711982
-0.0889857837642
-0.166828170825
-0.380118202698
0.0166546246123
-0.265750429368
-0.247392418387
-0.195869503671
-0.567453247306
-0.341970189896
-0.55760862348
-0.522831481643
-0.197694228085
-0.350362222389
-0.398420811593
-0.066895485435
-0.304906543231
-0.110558677856
-0.120759591398
-0.239168878136
-0.122857248443
-0.508976137663
-0.471637556348
-0.148710976375
-0.300315867979
-0.407694449455
-0.504595828055
-0.281528635879
-0.0825623449317
-0.122006443184
-0.0553897485328
-0.571424470278
-0.336806094476
-0.369794809307
-0.600945930246
-0.263480826657
-0.383427178669
-0.4584794506
-0.0433987406758
-0.278878169675
-0.237638436457
-0.486006267804
-0.461626674904
-0.582754005384
-0.321316456151
-0.22565464451
-0.509513660332
-0.30376019894
-0.568665706454
-0.401461108446
-0.511484160223
-0.176886229896
-0.395282454819
-0.375642588268
-0.209720525119
-0.262463339687
-0.183435378403
-0.392918283954
-0.396885021681
-0.550497247987
-0.394303846264
-0.654140022538
-0.10829858167
-0.0441072310039
-0.0735762350784
-0.459422808941
-0.269270245191
-0.30397471556
-0.475188509778
-0.493797699512
-0.497366092638
0.019721703075
-0.141737265079
-0.281375041601
-0.0730339290288
-0.371167689
-0.294631617455
-0.596033554421
-0.253319171651
-0.282330208371
-0.413428482837
-0.375165399887
-0.18139181865
0.0122913118718
-0.107840458109
-0.107634397335
-0.293255938684
-0.261533292908
-0.282741928632
-0.256546566919
-0.201986020464
-0.293555936536
-0.641317976258
-0.371081176588
-0.606445253514
-0.479963295367
-0.446342832081
-0.177225953442
-0.355862440816
-0.33459897442
-0.104430427189
-0.193744785125
-0.297480430849
0.0893661008806
-0.0337358963394
-0.0584804564478
-0.276990455692
-0.354928122088
-0.232585477988
0.0373386126936
-0.391165106196
-0.164748052139
-0.366706065511
-0.0537525263386
-0.204097104534
| | |-MSE =  0.488717552867
| | |-finished  14  forest. fitness = 0.671719090081
-0.019093920211
0.232304029887
-0.0210528710953
-0.0341296213459
0.0139784482637
-0.0232053576752
-0.0217422433776
-0.195306101789
-0.0333926958009
-0.0330355082312
0.000860497480307
-0.022126131411
-0.0480010816274
-0.0155300735124
0.147295419015
0.0411798897849
0.0276974934734
-0.0301277935924
-0.0147838082872
0.0836209291833
0.025807121259
-0.0082388183038
0.0214183642396
0.0778521864528
-0.0254970099135
0.232985608728
0.0289284134197
0.362767109436
0.0409900319443
0.194251436817
0.161546754702
-0.00272169202801
-0.00269482770893
0.0327686317104
-0.0321853804129
0.0293926923537
-0.0324064785269
0.00915655727887
0.0151240474622
-0.219823366701
-0.019657666454
-0.0257049455435
0.0130167605277
-0.0201125391259
0.0283239166456
0.112055143769
0.122942299376
0.346066136441
-0.0112998097677
-0.0237257625243
0.0237379650594
0.0137249627364
-0.0627814868997
0.0196941949532
-0.055392850878
-0.0331745298987
0.132837632457
-0.0317576696101
-0.0245748001595
0.014514789025
0.351538290813
0.0151430295932
-0.0344143450304
0.26016004725
-0.0266688217558
0.149665869136
-0.0314351183068
0.0137370371017
0.0611843264749
-0.0344137402855
0.0264175821911
-0.0298701658739
0.0236702825662
0.0718512538012
0.0451075045712
0.0411405479594
0.0311219011001
0.0496966827253
-0.018061048432
-0.0306785375898
-0.00559751647858
-0.0281774290396
0.00348121792918
0.159547432605
0.0964452975245
0.0590597677913
0.0196629392959
0.0213965240398
-0.0261813684153
0.0679164891393
0.0603684505976
-0.0169721173563
0.122796961902
0.274718901747
0.220157643479
-0.0502079204515
-0.0170165509528
-0.0238953675628
0.0175713988532
0.463733130819
-0.00444595919559
0.0198798994113
0.0766323591546
-0.0212021866455
0.22435153709
-0.0250001943087
-0.0217486271375
0.0945408051383
-0.0290225407693
0.0864892399567
-0.0337599128744
-0.0337172284315
0.0103095709482
-0.00338529764728
0.445390253706
0.0235763890408
-0.0343737939192
0.102777717497
-0.0165708468079
-0.0251801906053
0.027492660561
0.0272533409983
-0.0147570734536
-0.0118850850494
0.027819051288
-0.0154558707106
0.0207322257507
0.0289400124804
-0.0230713511261
-0.0261054926531
-0.0211953990572
0.0124837707367
0.0110164950625
-0.0305102156634
0.168161961776
-0.0261008881435
-0.00388254460058
0.00908270096377
0.0794306691766
0.0220902891246
-0.0196052644402
-0.0207055868349
-0.00435121991287
0.00134798985244
-0.0038647698644
-0.00284173186033
-7.93237886335e-05
0.0360514744926
0.0511469136721
0.029219978014
-0.0770917117135
-0.0343970183327
0.238891205014
0.00364519600445
0.0241467883172
-0.0176842666293
0.0181244260607
-0.288751991538
0.469771855716
-0.0886247992223
0.132505128898
0.0133305350248
-0.0175728213262
-0.0244309385768
-0.0173938196989
0.0105625569831
0.454050624275
-0.0169692380753
0.0234558164391
0.0749774055874
-0.0173925288875
-0.210585313804
-0.0342512357356
-0.00148459931687
-0.0223607423409
-0.0339088367462
0.0138408121129
-0.0174805304844
0.0287621452564
-0.00524474186942
0.0537447946828
0.0876169632312
-0.0320557486881
0.00155683775904
-0.019174649136
-0.0221196855004
-0.0318181637144
-0.0191115705936
-0.0237235885106
-0.0143927572363
0.00485021020458
0.00178211729043
0.583053134226
-0.019927072784
0.123504636915
0.0353886250208
-0.0145127333806
-0.0338758056419
-0.00903880348603
-0.00489685464066
0.0262468977999
0.0864216584961
0.0180033445946
0.0265292936607
-0.136044847689
-0.0248058135759
0.000918883108125
-0.0302986334389
-0.031611237178
-0.00010804206294
-0.0163904937287
-0.0170601397936
-0.0327315615155
-0.0320066722886
-0.0128924353883
-0.0254553239282
0.0055599750837
0.0290785220588
0.0135151348424
-0.00631914004875
0.0129567562792
-0.0113503053823
-0.0253843904598
-0.170158525442
0.024103713475
-0.0315607976718
0.0818292378539
-0.146346768441
0.00402858552979
0.0120700714857
-0.000224899879187
-0.124374269311
-0.0779870813813
0.125985293663
-0.0199465175
-0.000523647880074
-0.0311456807335
0.0181284349149
-0.00958013558607
-0.0163411968078
0.0768548355718
0.0347685806601
-0.0431087300589
-0.0405682007344
-0.0234313677746
0.129542120243
-0.0266476275901
-0.0195153013533
-0.0201419169942
-0.0149522072835
-0.0245486928404
-0.00629215351323
-0.0322158771509
-0.0344136335543
-0.0304437036924
0.018446917185
-0.0322356393141
0.177220792886
-0.00235458607091
-0.0124705505342
0.0266376670282
0.0220014048301
-0.0326579476837
0.0248966082355
-0.34936723575
0.011551116692
0.00558651473167
-0.015085717181
0.0472005265882
0.0225374457802
-0.0113785136588
-0.00766689131779
-0.000448760698677
0.00763614335368
0.0204517384176
-0.00708730150129
-0.034407732679
-0.0298812946349
0.0555377510856
0.00746242248572
-0.019797747058
-0.0229677408256
0.0106461354263
-0.015608274096
-0.0293812354769
0.266775857236
-0.020088549888
0.0526869708265
0.00138653367394
0.212924802499
-0.0324858155556
0.00696530657821
-0.0205819356307
0.0486795985705
0.156646775805
0.107053409918
-0.0326066567956
0.0291380214351
0.0665165802692
-0.015177978231
-0.369045438243
0.361136376288
-0.032783554135
0.369177058788
-0.00222147886111
-0.211049020942
0.077173925479
0.177218268984
0.211780185774
0.0289052257446
-0.0343995922819
-0.0158627122323
-0.0300499187955
-0.0338355182952
0.0538807771044
0.00785564337383
0.0118898959322
-0.0335885084382
-0.0336714253837
0.0194476815945
-0.0141877043247
0.0225368683552
-0.107521696446
-0.166923933509
-0.0341259531863
0.189869811652
0.179690175336
-0.0120162313718
0.119488351857
0.0200118998578
0.00868016032285
-0.0225900838479
-0.0249879626947
0.172697630561
0.376899062943
0.0315182561124
-0.00204184390167
-0.0289161789167
-0.00254668605631
0.202555004552
-0.0337023456198
0.303105740414
-0.00333668883137
0.0478344335922
0.0288581640004
0.368424819082
0.168859155346
0.138608610232
-0.00304146933629
0.313639001692
0.39670239499
-0.00176445625875
-0.0285067818105
-0.00751391719327
-0.00140171477411
-0.022160621252
-0.0148443967185
-0.00999421780505
-0.0250048687475
0.0996012453604
0.135358351668
0.144725863452
0.0279348226283
0.0228486745542
0.0154333943007
-0.0239902481969
-0.0323685889973
-0.0211237995795
-0.0274137379229
0.147950431596
-0.0275491554596
0.0550740270137
-0.0160182151281
0.192765464804
0.0422270325649
-0.0259930860411
-0.02007872159
-0.0325907563101
-0.0223051130768
0.0630313991833
0.136732434595
0.379433795667
-0.0151020875411
0.0281599424281
-0.023071812442
0.105732922236
0.0137272139264
0.0106577867412
-0.0249091876848
0.257939323899
-0.0130693347227
-0.0205530495557
-0.0195975032695
0.0254886476236
0.0736416040186
-0.163010187015
0.0480316861826
-0.0244684542053
0.226321299159
0.0647348801538
-0.0264066513604
0.380577334029
0.0239978867775
-0.0199224760581
0.00247829056798
-0.0216767133462
-0.186791387956
-0.0148604020284
-0.0685160818849
-0.00112937083714
0.0287505802115
0.0725278822575
-0.00116859354943
0.0289979507649
-0.0241728252488
-0.0187351292914
-0.0274535873145
-0.0179293886605
-0.0339056251069
0.00067261179614
-0.241700706184
0.206448588675
-0.0186863393746
-0.0334503377673
-0.0165536084376
-0.0217951343692
-0.0212367525246
-0.032239178578
-0.0259551367823
0.00150642655144
-0.308702267905
0.0283392729271
0.0213596300721
-0.0331366081897
0.00448152659545
0.0256913266699
-0.0231558939527
0.0285192838529
0.0062399850365
-0.0240121758759
-0.00980040149679
-0.0171375919191
-0.0308850469098
0.0261697894565
-0.0341362681828
-0.013488396047
-0.015964438779
-0.117745718925
-0.0665867071684
-0.024571778363
0.115963462863
-0.0253213394593
-0.0216099410515
0.142415801734
0.0232347093102
-0.00895431317832
0.0259732695434
-0.186977315364
0.0649957474826
-0.0325987499425
0.0195475635032
-0.115999896927
-0.0216958253944
0.0198837538594
0.0410910406125
-0.00613073786942
0.0239407791651
0.00137729120038
-0.0121836067139
0.028198204216
-0.0322461203273
-0.248601911838
0.0390330111318
0.0144373014122
-0.0202006407007
-0.00295997905132
0.106025651388
0.132739430939
0.02344160724
-0.0192522988386
0.481931061742
0.533515559457
0.181465181236
0.06520315128
0.454794301636
0.0223297690797
0.409832774338
-0.00799565419625
-0.0185689895649
0.0256048345998
-0.0182573638298
-0.0335144077399
0.0110379685149
0.00380987438746
0.0433658447887
-0.00857304150524
-0.0299328285085
0.091026655445
0.116621590185
-0.0175516589293
0.0839746186665
0.183295199181
0.0131242013432
-0.0174223359023
0.0120649437366
-0.032711435428
0.111823372447
-0.0331844048515
0.229004990315
-0.0191622752173
0.610390191206
0.359649163976
0.121907031665
-0.0167627561715
0.54344365314
-0.0176650555528
0.208134042387
-0.0190243103697
-0.228283387178
-0.0136851534909
0.169904758267
0.410160264826
-0.0134815299865
0.322510964313
-0.0332219549038
0.0290330518193
-0.0190047765366
-0.0303580392218
0.0783738836601
0.577746337198
-0.000345271664387
0.070701511998
0.0511682675992
-0.0554231915521
-0.0223658936907
0.0739939987861
0.0358895861937
0.016748385791
0.0246267727125
0.19881402689
0.291046517115
0.424231819782
0.487079452709
-0.0930002749717
-0.00847454934965
-0.0149825827013
-0.0230447399985
-0.212272503722
-0.0203317977492
0.0246650358722
-0.00490655519807
-0.0326282140434
0.0260775646089
-0.0102716432019
0.0126195699522
-0.0238086133462
-0.0206339745343
0.0262116826261
0.0272537176895
-0.00947246978019
-0.0257014050872
0.0541741569032
-0.0139642922935
0.0166499804011
-0.0324147100341
-0.00508051873981
0.0417461728143
-0.02668570478
0.0983567043551
-0.0114055804702
0.0166580829434
-0.00842623637487
-0.0233059877685
0.0291727096113
-0.0186380310316
0.117138086381
0.12335448616
0.0291296863348
-0.0939563442473
-0.0194547428047
-0.0343873416789
-0.022288603579
-0.00456795611591
0.0285794498306
0.07689578764
0.0207961266312
-0.0202673797559
0.0221167517496
-0.00991580548574
0.0260623270303
-0.0219849877415
0.269896879965
-0.0314572181007
0.0773763053526
-0.0341468767996
-0.0299885142923
-0.0286995780631
0.0671831615147
-0.0215792850532
-0.0187234329232
0.309869629831
-0.0338195390184
0.0147394251212
-0.0319465393386
0.0415133006133
-0.00593808320001
0.0247268074523
0.141390254295
0.282999898375
-0.029005584057
-0.0343984619153
-0.0232970274982
-0.00410359270019
-0.0289692273308
0.0229236719898
-0.018765652396
-0.0268732270231
0.504973400571
-0.018417497969
-0.0257276629549
0.0325584408005
0.357975881377
-0.0110773772904
-0.0208538950304
-0.0337599717277
-0.00302779414366
-0.010157193277
0.35123557938
-0.0103751188087
-0.000230431969763
-0.0133065535298
-0.0287256752391
0.00467235148832
0.0435280378366
0.00781313993246
0.0219197710598
0.143629748522
0.0164985951896
0.0138141637562
0.397192599598
0.239023169653
-0.0262128040999
-0.0139831580932
0.0137536251422
-0.0225791726993
-0.00964291741463
-0.0111994312236
-0.0146244407588
-0.0317290276324
0.0228434125763
-0.022928271796
0.299631521545
-0.0282347246958
0.346764500266
-0.0242877787628
0.0386159985241
0.0288255126522
-0.00254152062252
-0.00545705625655
0.0163232515702
-0.0339245888986
0.160794885051
0.0106327920163
0.0232466240835
0.0114776812566
0.0261456912205
-0.0063820824361
-0.0105445709158
-0.0268657661029
0.00194444495127
0.523789749633
0.0232885663726
0.178957791406
-0.0343842414386
-0.0292943674988
0.21533855609
0.0124599018823
-0.0339477291331
0.375722173196
0.0409183404792
0.24703931488
-0.00459825663464
0.0263818493153
-0.0343113821532
0.197252671319
-0.0126229738479
-0.0327621969112
-0.0161707954379
0.124498631393
-0.0108280364471
-0.0183527617509
-0.0328829972263
-0.0183478976178
0.0201266944911
0.000489401095225
0.180717999847
0.14722441564
0.0254262717733
-0.0146381608616
-0.0276278917402
-0.0282046752431
0.180875465115
-0.0236919890557
0.0190285152832
-0.0183731634256
0.0552737847778
0.0256804023382
-0.0237181836843
-0.00706083561165
-0.0343393689103
0.0216218257741
0.018861266825
0.0829482760075
-0.0162857556341
0.0260955028292
-0.0200856061129
-0.0310475994292
-0.0296741033251
0.0638178294089
-0.0682385368382
-0.0173872749691
-0.0282956941138
0.139457774939
-0.0335438750734
-0.013398158478
-0.363856956256
0.0273693851593
0.00584134371117
0.093720688021
-0.0343435205814
0.091311750572
-0.0338484502605
-0.0268550897371
0.0261547492076
-0.0122880619909
0.00433682107922
0.0151227446648
0.144335375762
-0.0225864303578
-0.0295405053912
0.0459285966224
-0.0167811374797
-0.0183924693398
-0.0335112934582
0.145218935085
0.0595869218145
-0.0344156020771
-0.0310109297164
-0.00621191547481
0.013449713877
0.485821748693
0.0247658911016
0.00770597866749
-0.0343758814901
0.376949245539
-0.00812635796949
0.303464489319
-0.0271329292419
0.0108421418956
0.0688709351066
0.447226677546
0.142736283965
-0.0170850443989
0.0636230351897
-0.0182712637539
0.957854226138
0.0292029203076
1.02790486754
0.144633719586
0.0485565168201
0.0394971847106
0.736377515711
0.0204040792661
0.233080894339
-0.0342942441005
0.155068266292
0.0114772872524
-0.0195743920485
0.0964642754789
0.218152324537
0.725871007568
0.204156322571
-0.0107868560303
-0.0161970907016
-0.000605538747241
0.729410380246
0.0330911335009
0.247934924223
-0.0303365502743
0.0190720202815
-0.0140972283177
0.0508510706078
-0.0183987839815
0.022309108711
0.0150672718446
0.185350201552
0.111871846901
0.0040571114291
-0.00311528025316
0.028400272812
0.262231295081
-0.0231047158921
-0.065307747174
-0.0240557660829
-0.00885738832455
-0.0314698130551
0.0258376355955
-0.0320529424569
0.25213037204
-0.012280064688
-0.00781190658375
-0.00922565178408
0.123513861637
-0.0139278101515
-0.032697017924
0.429843781658
-0.0176270544838
-0.0295958428133
-0.0339495426648
-0.0217097137849
-0.0305865069894
-0.0164891880062
0.0136609636651
-0.0167566773492
0.0172124181243
-0.0198329571783
0.00333821140583
-0.0041984572626
0.835019820039
-0.0281594039039
0.185183639538
0.750620240815
-0.00177658476194
0.531595087666
0.194001892064
-0.0011439861603
-0.0217251948012
0.159481703333
0.0777421549534
0.335954971817
0.194119349399
0.746744271857
-0.0334364721202
0.732968491497
-0.034351238191
0.490507508513
0.373758196331
-0.0115991941695
0.132184570633
0.00427987265497
0.414579817362
0.185357476672
-0.0138976173078
-0.0159821503839
0.422790965171
-0.0215686024289
0.216423983567
0.00506002059999
0.00976356677809
0.525974147283
-0.0246914597359
0.0262298129414
0.326117759594
-0.0325344168654
-0.0240773675601
-0.0326257110727
0.0834648100201
-0.0187533947934
0.0816128916001
-0.0173408517101
0.0454569622979
0.102210504011
-0.0806343446462
0.00393929179832
0.236464866294
-0.0213348499837
0.285412581736
-0.00623951748698
0.0286041414065
0.0892274886148
-0.0340992400915
-0.034091156369
0.0830888134856
-0.0272987771397
-0.147171976258
0.0165253030035
0.115993948642
-0.0143749537677
-0.0135184831121
0.0678348497631
-0.0337673582114
0.200242892332
0.0367332591758
-0.0264700197107
-0.0326142111638
-0.116396429087
0.0499897693715
-0.0301622237606
-0.0229972355932
0.00452257288853
-0.0233687752288
0.00645917467449
-0.0336676027972
-0.0342102389239
-0.00335690446402
0.0519907885695
-0.0138837295396
0.00559638246273
-0.0171902212056
0.140545395149
0.0882284635277
0.0320196882175
0.0275321284739
-0.0338829429094
0.0468715527261
-0.0324572804151
0.0876276080519
-0.0257632373602
0.100323193087
-0.0210607587632
-0.0308918453025
-0.0343222443837
0.269598833563
0.0292210860761
-0.0325551087238
-0.017852822368
0.0553233889146
0.0154634382962
0.555623076374
-0.0214321452283
-0.0229668876895
0.516917250533
-0.0268227295861
0.00905210957492
-0.00256795547874
-0.0344117639507
0.411920533952
-0.00416023774444
0.132254077788
0.377255058337
-0.00202735302111
0.00824346854102
-0.0203370580276
0.109409544455
0.298798043753
0.52488698015
-0.0167221767494
0.780273418314
-0.0186969209868
-0.0208341588521
0.0104039801419
0.0710295945022
0.0503876592189
-0.0341747515818
0.0877528187329
-0.0232154056583
0.127090702832
0.0221771773879
-0.00215525362694
0.0919976291042
0.0900745174537
-0.0163410957225
-0.0216602189274
-0.0254984525023
-0.0157169460075
-0.00581987454977
-0.0169105495325
-0.00334430286087
0.0926317541247
0.0141207769695
0.0661776710155
0.0740490945629
0.0221512422095
-0.00206984704652
0.322263912604
0.0852017383743
0.559611215795
0.018415340337
0.00174530123074
0.300145241872
0.0265010495577
0.212417159342
-0.0318878007348
0.0374631695338
0.0372388922971
0.0177129630541
0.0022462158145
0.308017618199
-0.0339312004737
-0.0262080476972
-0.0231205099814
0.0230066851986
0.148284099431
-0.0343801824878
0.148515491762
0.0431011131518
0.0214985018467
0.0313679355663
-0.0296342756697
-0.019017904083
| | |-MSE =  0.51317991168
| | |-finished  15  forest. fitness = 0.660859949489
avg =  0.67935185235 max =  0.731444433085
|-spawn
selected for crossover -> 0.659517504986 0.652688171174
>sampler distinct selecting 2 from 4 = [2, 1]
selected for crossover -> 0.711587577519 0.679781958225
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.653113514309 0.660859949489
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.711587577519 0.731444433085
>sampler distinct selecting 2 from 5 = [0, 2]
selected for crossover -> 0.711587577519 0.706398802297
>sampler distinct selecting 3 from 5 = [3, 1, 1]
selected for crossover -> 0.706398802297 0.671719090081
>sampler distinct selecting 3 from 5 = [0, 2, 0]
selected for crossover -> 0.650729363072 0.679781958225
>sampler distinct selecting 3 from 4 = [3, 1, 0]
selected for crossover -> 0.664930090353 0.720017797134
>sampler distinct selecting 1 from 2 = [1]
selected for crossover -> 0.667734518846 0.650729363072
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.711587577519 0.706398802297
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.652551103214 0.711587577519
>sampler distinct selecting 2 from 3 = [1, 0]
selected for crossover -> 0.660859949489 0.667734518846
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.653113514309 0.720017797134
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.707203911473 0.660859949489
>sampler distinct selecting 4 from 4 = [3, 1, 1, 0]
selected for crossover -> 0.679781958225 0.711587577519
>sampler distinct selecting 4 from 5 = [1, 3, 0, 1]
|- mutate
generation =  1
|-act
| |-starting evaluation, training and validation
Process Process-29:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
Process Process-30:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 215, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 215, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
0.0760997048832
-0.506286541057
-0.292962745786
-0.130152848991
-0.0379338761665
0.136015174508
0.153219907094
0.303771789543
-0.101063597355
-0.0796819062981
-0.382452028123
0.0623704639034
-0.484560001094
0.350821534876
0.175750553933
-0.0111326002515
0.396007576469
0.210644797951
0.146470147691
0.0626137182117
-0.21039043484
-0.0490396623976
0.0138196313679
0.182293354435
0.259104736633
-0.176415243628
-0.360406940622
-0.280656087641
-0.0543755471793
0.106434382477
-0.00121603575281
0.215703498752
0.0380772530316
-0.153935742743
0.176699774612
0.27930792076
0.0816766889293
-0.226330203566
0.222249257431
0.0587982101523
-0.563746972649
0.237389811495
-0.0911911274872
0.405697011945
0.109690864864
0.306226745694
0.0984676600956
0.561179785423
-0.108628346913
-0.0894059054085
0.115344342353
0.212902137637
0.0071311303642
0.0404465357031
0.127937575823
0.380819410092
-0.0558549262525
0.547306473765
0.145612386969
0.164798555136
0.0419459037929
0.308611519919
-0.338047392811
0.071828715999
-0.122200305305
0.268616166591
-0.18218212646
0.0708804571135
0.149497649164
-0.577291645124
-0.0365636829505
0.291785864952
0.0529352552422
-0.125884523864
0.228326224572
-0.0553967670427
0.374737959506
0.267881028594
-0.113057903544
0.108792191031
0.00138009945317
0.0299141658312
-0.0319260660319
-0.0151616720535
-0.203371914309
0.283746822066
-0.00616952769029
0.341641430421
0.123059383291
-0.276285153498
0.247938361119
0.173817343615
0.0485829494572
0.310376401617
0.0695864388539
0.129411765625
-0.0406433320347
0.330498624564
0.132340585123
0.063670671604
0.00975803436326
0.167050976612
-0.0709855785255
0.306581887964
0.349313185548
0.447999481288
0.163366753255
0.125373116762
0.351646200144
-0.22292283475
0.237819048994
-0.0892222164135
0.0525916875405
0.211875041729
-0.281296801911
0.0496806226415
0.181076782951
0.0707546085639
0.021381508182
0.280532922467
0.114667670562
0.119430588135
0.411730912527
-0.0767311848339
0.594516268601
0.233309443093
0.0770319203526
0.448868490852
0.186923765547
0.00143975064676
0.222656638795
-0.0292871953427
0.113502693493
0.102365958663
0.175067407558
0.24663448133
0.0382211184982
0.0129948183066
-0.201381411239
0.0255669868924
0.193975189169
0.171753810692
0.268186653569
0.0305763206544
0.410576310428
-0.400531659141
0.131492753326
0.1618900873
-0.0114009571548
0.358242181598
0.0948380245971
0.0533661888654
-0.277091552717
0.397016078542
-0.0202154106163
0.0410160532661
0.260014548966
0.0931081714083
-0.074453963114
0.149189591171
0.246173365267
0.00626465363549
0.126161089674
0.101134649645
-0.0626880920454
0.407782697464
0.179599028969
0.371842250381
0.058391718049
-0.14330869638
-0.0358565185291
0.136901762462
0.05234953964
0.140970644516
-0.0947123871869
0.0557812055752
0.0108733171281
0.0435094279527
-0.134336639101
0.18003136401
0.141440767729
-0.11341044929
0.154998078819
0.171986796699
0.175553544586
0.263838278772
0.225295197604
-0.232309735263
0.196202876275
0.153591520502
0.124736752098
0.255410852022
0.836364925162
0.133816315907
-0.576878332082
0.110282286677
-0.23190457529
0.231825781121
-0.0664368125875
0.36994494563
0.379081462866
0.0243812514721
0.13210361202
0.178225480024
-0.0298508128922
0.0521016392327
0.146906209401
-0.28417873518
0.176514834696
-0.00183904081932
-0.339503408158
0.0817782100404
-0.00780174164223
0.113845847726
-0.0537823092764
0.171383916009
0.232999240793
-0.23836016684
0.477506800451
0.315497586198
0.228059635021
0.277838090503
-0.883570274919
-0.0499438968645
-0.0307709233406
-0.104453951357
-0.125328017948
0.0135741083262
0.320571255155
-0.0410836317851
0.382183805126
0.182810242716
0.166991115253
0.089595457148
-0.3375930249
0.0123934634487
-0.0939439629853
-0.254928853074
-0.219468720709
0.21653116437
-0.054782379398
0.0399173645322
0.331866341246
-0.838490917987
0.132993917101
-0.167398608321
0.409406136869
0.367414330044
0.26994675353
0.405745349431
0.0540980812441
-0.0376237120783
0.380671211302
0.0712490750615
-0.3332033676
0.256588079881
0.188409152614
0.339048398112
0.062580711602
0.0922745688866
0.0949325252312
0.301359020208
0.0746580576513
-0.279299640096
0.0669683453015
-0.0336406459531
0.220473916369
0.156491823364
0.116260591839
-0.0908146574735
0.27669418795
-0.320846344118
0.058365426805
0.127442750901
-0.338261673334
0.232579662189
-0.11279970776
0.11473805012
0.312812922261
-0.0756702851394
-0.155463328709
-0.0924181281902
-0.168720095873
0.419566520084
0.0183650265098
-0.143915433716
0.249751530732
-0.0349677515454
0.522027854251
0.100603073165
-0.190196122204
0.467069050812
0.332350538169
-0.266458374728
0.0811959565697
-0.0132844167014
-0.0135401827252
-0.520467908934
0.0906794898133
0.314658545956
-0.250222124414
0.279873522071
0.00646490056315
0.145080490126
-0.0440423894842
0.190892621798
0.445753852913
0.0344920390541
-0.0308950160735
0.141823410791
-0.147612512162
0.179773873952
0.121852547274
0.0960671987729
0.0529148330297
0.118035530548
-0.415815259637
-0.0634094353951
0.161800030783
-0.204428303255
-0.262281500193
0.270067212554
0.0233437152883
-0.0333079865565
0.433437675398
0.437068404235
0.336781755256
0.102323405147
0.0819799550806
0.217498519947
0.110012072984
0.17600740583
0.340827082222
0.163007059583
-0.0600606547149
0.00783598080474
-0.0104661591465
0.336278985756
-0.0931823641686
0.539023870414
0.147406385894
-0.243260501071
-0.307461662444
-0.00721939830004
0.152696273173
0.147445961777
0.151461915179
0.28962547996
0.307884279459
-0.218490565109
-0.0604129150158
0.175009654143
-0.130444290506
0.0474168857244
0.17121564605
0.0635117261782
0.352752170637
-0.00192639938885
-0.194728103315
-0.0173264014761
-0.227470044968
0.230170856785
0.0186041684704
0.10141513546
0.0352430631779
-0.0937132025301
0.282023055137
-0.102981314664
0.416746680039
-0.135922568256
0.525714925888
0.0704318472263
0.161217041355
0.367871552874
0.0615094900844
0.154361231791
0.628396804017
0.0684535911262
0.190043692567
0.0115968704184
0.207817214276
0.4108938393
-0.300618191937
0.142524447006
0.345498117657
0.160469810145
0.313007176979
0.203424555854
-0.0217272926774
-0.0407235061988
0.0841334740735
0.119970673007
-0.0656998037612
-0.0136258421098
-0.100753607179
0.541229943384
-0.21104319088
0.368457609972
0.242905994129
0.0805792475587
0.11438423679
-0.254908377697
0.365607492201
0.208509408578
0.271810754622
0.0755127006002
0.443369724452
0.326521481391
0.0700699694247
0.196660679563
0.100063506383
-0.125918000009
-0.252162303365
0.139180830872
0.356234707518
0.337955564389
0.0753412604472
0.042625879966
0.207447653084
0.0764718137989
-0.178563280411
0.172812364272
0.272591917583
-0.280583238954
0.103671399282
0.359282079561
0.260734217027
0.308727457325
-0.308739810449
0.176297645418
-0.106805284488
0.0408984694927
0.0289298258384
-0.0571817865767
0.23047126442
-0.0367526999781
-0.103423655131
0.174346408133
0.0122939778793
0.105260087503
-0.00398446056376
0.0125844522138
-0.00220086529838
0.149320346206
0.147530074279
-0.0441714009293
0.27473880798
0.0523874728173
0.159011213104
-0.0676099585176
-0.440376037511
-0.256713103959
0.574961473116
-0.0397905794406
-0.0725259120744
0.0915796431144
0.0416672026691
0.0182795945061
-0.062203130956
0.0327299775808
0.00959034067781
0.164680051313
0.425153864392
0.38848072566
0.0928214546076
0.35787027558
0.150351708502
0.143809054121
0.302920161606
0.0724059124072
-0.2093471416
0.257019687441
0.450070764384
0.0486855407719
0.118547668065
0.128996612946
0.747013446626
-0.310497712963
0.463311050544
0.116924700516
0.23052855129
0.148377118791
0.24404370148
0.413757097093
0.194630615817
-0.360551844955
0.413158806631
0.290316429835
0.24536084681
0.102254493948
0.172570787898
0.198486518224
0.542483393916
0.269126017613
0.00791331811515
0.476459452627
0.389552054799
0.179444054317
0.182835345807
-0.300216227036
0.193067991633
0.220530797813
-0.0579248248947
0.269350928119
0.394054744292
0.146380569456
0.0389829216703
0.112994895
-0.00944596384061
0.192858568792
-0.208267558541
0.430046718734
0.0187138114597
-0.095607739283
0.53070520383
0.171984518668
0.387721131782
0.162274763866
-0.0195726139886
0.167607739094
0.0997918581921
0.273666657887
0.131288364039
0.340507760909
0.270493862396
-0.28282721498
0.248377768508
0.242826455577
-0.150859228566
0.283471033397
0.227177578501
0.336963056499
-0.0834189333878
0.252036164557
-0.0322924864761
0.351011255964
0.175333077935
0.108834030158
0.445297821045
-0.185674429164
0.625461604901
0.146206274327
0.560489194812
0.127751146348
0.322415736805
-0.0657017776518
-0.192207157912
-0.00352055172527
0.0138391480256
0.141148623834
0.107054119717
0.0904519800259
0.568768800044
0.378730391555
0.370252601825
-0.079858838862
-0.172041244009
0.213941966752
0.044930495045
-0.118935973802
0.0693652243761
-0.0399597240994
0.241703632288
-0.137836668911
0.0506815156005
-0.253363483089
0.183469285394
-0.486371430721
-0.012246554078
-0.269877351349
-0.0837956850404
0.00244318897904
-0.105297032069
0.0543760454103
-0.0139432911474
0.133060070111
0.283566598518
-0.51854929803
0.272017219666
-0.292785231844
-0.0190219657347
0.0214882633117
0.0492657393309
-0.118216925749
-0.334839473913
0.112274046434
0.0978125349715
0.0807691078951
0.228417620951
-0.0836157470956
0.156896250952
0.0520267663088
-0.553045009434
0.0878578952774
0.284324315556
0.0458736726938
0.0827877366891
0.454242147157
-0.176900678292
0.000628789881499
0.400450835417
0.0441183895033
0.261716525732
-0.172872120373
-0.0524373536708
0.0535227815941
0.192129392953
0.248262309112
0.15537402645
0.248153661049
0.0265674282033
0.181660814494
0.131872700589
-0.125017648658
0.340313563415
-0.120048883953
0.0273937160531
0.286196958107
0.207049067048
0.153066562066
0.0553484465989
0.220931780718
0.229095669848
0.0963167864616
-0.109774638671
-0.0408528181854
0.119404717581
0.246516263393
0.233295375331
0.27375619481
0.157648090128
0.114468815384
0.108761060064
-0.0202729932036
0.0187291332655
0.185717781826
0.0771493802241
0.164141386328
0.113309628426
0.225184920325
0.220888299292
0.0292957328429
0.163130527801
-0.0289100661172
0.123226254916
0.173769912377
0.115224888351
0.247833419447
0.312515634134
0.177753071982
0.128750047801
-0.0352539428394
-0.225505505699
0.168435241368
-0.0299485086561
-0.196739714796
-0.0541532481169
0.116747064548
0.595218204145
0.130431432869
-0.180420863883
0.157789165718
0.167019946082
0.24874898092
0.143296606586
-0.0475668709065
-0.035980103877
0.0865823740252
0.0150695974367
0.0418162872978
0.303558896474
0.0948962322723
0.400144086248
0.284285959706
-0.0425029174943
0.00418783798363
0.199998087642
-0.149069416633
0.0837566124408
0.24641406756
0.125406373998
0.182802728499
0.134783478155
0.181777611026
0.162848323707
-0.0189764607114
0.35800907339
0.0544474154877
0.108804947078
0.167560496728
-0.0651619312331
0.150015000368
-0.441607169966
-0.0290628340655
-0.11337602264
0.011370102933
-0.0563727949637
-0.241196638926
-0.211075581679
0.10278628354
0.117645198392
0.394704054609
-0.120366559938
0.184245185633
0.0417107272306
-0.312177176541
-0.0324825041272
0.0739603794866
0.0347306189523
0.251542546711
-0.00986749905035
-0.142268802304
-0.064647914136
0.182939866616
0.257925952397
-0.00851525059528
0.496508984805
0.262988668841
-0.193286176718
0.0961125072858
-0.0118352486835
0.0570369144084
-0.0463036525101
0.427345154537
-0.323883559117
0.0762163349877
-0.0594020367561
-0.066783649591
-0.0169138881446
-0.125102498218
0.250165061159
0.161198029055
0.0935109478891
0.0249171544482
-0.180464016505
0.153359850157
0.399683692918
0.105248541808
0.0464858915451
-0.300961997001
0.181247106442
0.129259892733
0.0392128378978
-0.041936445942
0.0853819026777
0.619987808854
0.249704395032
-0.0451098311544
0.128779919798
-0.0309366765476
0.332256425081
0.139148024058
0.5695813218
0.0105970266767
0.419542768947
0.28441005697
0.149277340581
0.279768506269
0.256810144574
0.563974097305
0.186271982398
0.249148985939
0.112403852712
0.312323649373
0.105272613194
0.275333815784
0.336802089372
0.24801050176
0.239307229627
-0.0439993686521
-0.00830813277357
0.472305896047
0.0533499630672
0.798631622587
0.207017513356
0.271966652318
0.0912787179349
-0.017957903347
0.0201731072172
0.244345620217
0.52087877866
-0.0830999093928
-0.215282957568
-0.334895591694
-0.00423784538719
0.224211119183
-0.0501711412369
0.00476680605151
0.194526902097
0.0796006290722
0.360837474903
0.251946565454
-0.143957970033
0.0953293440189
-0.296085624009
-0.171637573033
0.107511903856
0.0826815577419
0.208864160207
0.21499850315
-0.471306694371
0.31159873498
-0.266104467361
-0.0763805477958
0.379537712056
0.10189571083
-0.19722354898
-0.0280700552382
0.28231393407
-0.110295131215
-0.00102626590833
0.242692944879
-0.106995110458
-0.0322250691536
0.291097627305
0.320714834257
0.121169397188
0.0694733797991
0.238800126428
-0.290445343358
0.236192854963
0.266256812285
0.0440372508644
0.110722842966
0.108537771764
-0.226375249287
0.528937658156
0.000636015210795
0.109077280273
0.0331601051871
0.335629184278
-0.347173854656
-0.242395994084
0.119435204357
0.211943252516
0.368974122322
0.308956485535
0.339367594889
0.369143469961
-0.00889150978502
-0.156187217769
0.0174115462439
-0.240230194098
0.0247157503663
0.571035624003
0.125014652524
0.361344054728
0.375818634321
0.0967408541047
0.29218945445
-0.0563244901415
0.120560765407
-0.483272999655
0.233589878316
0.296944239364
0.286092966699
-0.212361887385
0.170309425572
0.258411294469
0.0785599468854
0.43973052984
0.0831530609525
0.0287890137017
0.393922533371
0.12092113486
0.0366703195716
0.406496149958
-0.498021545982
0.183045214511
0.0143970305602
-0.275938535765
0.321833160429
-0.257629309471
0.255221201376
0.225646897733
0.0294675775571
-0.52680641938
-0.0184886088338
0.188230803596
0.12287733432
-0.404826979316
-0.420866499195
-0.291141234566
-0.296284548381
0.0884452028457
-0.0639620068408
-0.102857664642
-0.192467380631
0.153132019291
0.0873364050521
-0.122761720096
-0.576918331678
-0.442084776086
-0.111674831349
-0.28702359601
0.368144781108
0.246021242785
-0.500542548217
-0.354795964222
0.0943566973302
-0.0736052135368
0.10772579542
0.0701501486694
0.0136920129592
-0.20364543365
0.308282954887
-0.134834802413
0.15595932546
-0.38779453374
0.0342637119665
0.187980191475
-1.15932404831
-0.543061489542
-0.435483863057
0.153655265013
0.0541463029423
-0.572291965212
0.0515576705582
0.309556215342
-0.65050730822
-0.139603007436
0.0973629368319
-0.0142540593433
0.0137706174147
-0.230952511883
-0.426249787092
-0.0311665731107
0.12516258421
-0.451377331658
-0.420876775563
-0.198942592883
0.188195891309
-0.0135465587643
-0.773549277015
-0.704728493878
-0.147799674153
-0.0833622752188
-0.584474773996
0.170783097619
-0.190230644715
0.470019598424
-0.022234558457
-0.00653692943523
-0.927025642444
0.236911835481
0.257795302899
-0.0229962075461
-0.644292553067
-0.319449354991
0.231525290483
-0.266235352964
-0.414438553484
-0.281017313371
-0.115425153861
-0.448051005424
-0.184676928326
-0.0561015250291
-0.297734370883
-0.0521047397156
0.161464379171
-0.500402943698
0.828714948655
-0.0411294577938
-0.240910862526
-0.0439234935676
-0.210769165732
-0.132908080915
-0.466481741454
0.339546223691
0.0356801730995
0.0105297621746
-0.111460179397
-0.730988024195
-0.725881701366
-0.416990252928
-0.496499898035
-1.0868127572
-0.020161036772
-0.602904031757
-0.266081188108
-1.20321651204
-0.541995208734
-0.127196207147
0.163294401681
0.0613172987919
-0.450573565192
-0.446258384189
-0.0680066847648
0.372999930117
-0.55549412504
-1.61014891594
-0.517688242617
-1.13815387639
-0.624060251622
-0.288596721509
-0.0817424651034
-0.413135495269
-0.572727046321
-0.173752033147
-0.265187227166
| | |-MSE =  0.506170153609
| | |-finished  1  forest. fitness = 0.663935610199
0.140824651293
0.560094736541
0.641575901444
0.537602223455
0.513329342869
0.5021948231
0.270997707449
0.651831046545
0.513296092684
0.447560473066
0.567176672733
0.424372523185
0.372553146014
0.452526094978
0.516405729288
0.363572145883
0.339724018181
0.358976236039
0.397232084728
0.41810903136
0.316760417058
0.443762637987
0.353870434387
0.446883814291
0.226988690072
0.287526040094
0.0926412235747
0.358355394444
0.198900747959
0.38454564376
0.238588823552
0.336250254769
0.309250004478
0.194502126693
0.212194827298
0.286922702799
0.181891596844
0.291297205723
0.31882381535
0.288419225943
0.271539796031
0.327704107605
0.318286702005
0.363157668083
0.0121416610651
0.0199740695715
0.126126207246
0.123416393778
0.285614013286
0.103837176393
0.162625301084
0.239516467464
0.224562796274
0.20896839021
0.232374546286
0.0835935917123
0.247572671693
0.147264097009
0.160895130057
0.130838125725
0.177872057415
0.0743695721278
0.204160547058
0.274070958134
0.0978355814441
0.173533960319
0.136277697143
0.186246552489
0.272971985284
0.29941891357
0.14853015461
0.307552105713
0.251824389169
0.0937960781849
0.0885337249338
0.154744330745
0.140796696363
0.106801943405
0.0725020346326
0.0948909190842
0.1565000076
0.273016218681
0.195459956262
0.242770734424
0.0659362076738
0.0967470746199
0.2262941097
0.242861036452
0.11433080937
0.0869878813416
0.257345244485
0.257811548569
0.0562837166171
0.0932298361948
0.187909550394
0.152291202524
0.115604141736
0.0944717761578
0.052004625925
0.136234110195
0.300620077387
0.2714802998
0.253535827039
0.0832321705743
0.0581256593352
0.188791343064
0.280841928181
0.176557965441
0.1894146461
0.0830558427441
0.177067287292
0.202348631904
0.0964128094477
0.227795862066
0.256695749554
0.130768378544
0.037566121597
0.180967082504
0.0669303829749
0.0492804948255
0.1347454989
0.305810140488
0.16570852363
0.167297945349
0.132214002487
0.17065481697
0.181743410207
0.0665071590141
0.238801564928
0.0920309861908
0.224650122821
0.0153879648389
0.15641493194
0.0596314455691
0.268766917334
0.262989423764
0.278351102692
0.182646728138
0.161998185195
0.166009408815
0.109556137715
0.143355686337
0.0897667944886
0.0884422520374
0.0972492883781
0.242854967959
0.223982248465
0.0148357229099
0.0997740076868
0.247490702998
0.189588106658
0.245020097824
0.0530444229316
0.0824328075233
0.145951070826
0.0263048681969
0.0688253904332
0.245708384256
0.173294303676
0.158320325304
0.204436661724
0.0752343977922
0.0581985778777
0.0772347600794
0.242140532943
0.240077316713
0.0564455551109
0.137396839014
0.156625123812
0.164204054617
-0.176725746041
0.0897616498395
0.166895460633
0.211605206639
0.145853035058
0.27000544405
0.193766022451
0.294370924878
0.108946419288
0.251498989766
-0.0834663342773
0.128327291379
0.0720893785261
0.0765675323927
0.0757970406035
0.0704081764777
0.182258924316
0.0764123672142
0.217243636089
0.145956391367
0.19957269191
0.104470298657
0.11306638819
0.0963291851249
0.195331083778
0.271106926978
0.208947059153
0.0295962732064
0.123561008749
0.168022655125
0.194637070847
0.147256090012
0.157512243556
0.158388349211
0.259319640676
0.191225236783
0.166592893288
0.0816406922395
0.106000226697
0.0473165780719
0.0724597027004
0.0774522124717
0.189833677183
0.111333716303
-0.184485666597
0.228086113294
0.143935171379
0.169603106773
0.0550631748566
0.0834812155063
0.230202031651
0.134670968137
0.1389186559
0.227811730988
0.0515505498369
0.0809850177325
0.27130063751
0.150000009021
0.152865726931
0.0720416114187
0.17402235969
0.0575689373597
0.133127079242
0.0607081794091
0.0919291690369
0.190878900525
0.149187690451
0.0782352492692
-0.0291747746394
0.211034565429
0.256719318259
0.18129542668
0.217275028513
0.0675279334058
0.169434699601
0.226218766065
0.0459933923279
0.20399633621
0.171831576193
0.159366670145
0.00480987260391
0.13379431362
0.0519157778749
0.278556707556
0.0122809109399
0.0889591260329
0.0464573695998
0.281121715198
0.129046412615
0.189822628045
0.0205194266412
0.2366888784
0.181242166931
0.0726267572706
0.125308808065
0.098653205345
0.297943244696
0.272533926413
0.277938108318
0.152439967258
0.22197758459
0.0865915726113
0.010534301643
0.293616333136
0.149111749457
0.0760192981313
0.170575658856
0.113809220582
0.233630385481
-0.00036563283368
0.127130875889
0.261606989756
0.216963827726
0.155759201436
-0.044585986071
0.175577723047
0.136537747093
0.0957827492248
0.264736542894
0.170026725467
0.275592538677
0.147417662953
0.143269945722
0.25090337481
0.182810086151
0.215329273575
0.0736250997042
0.138850168628
0.0728478293826
0.22652584663
0.0161731489017
0.263936601444
0.0653485430437
0.0425852559352
0.0206590884867
0.0238383986416
-0.100418176554
0.135388473323
0.166027738319
0.0508879127507
0.0666948951532
0.269903220517
0.0974946458578
0.151445346887
0.239411806409
0.239402654836
0.0762203593309
0.183201490762
0.18818037234
0.0336969215193
-0.0117541691281
0.227645494023
0.0424693999476
0.142162447346
0.201393833346
0.136984032183
-0.122383837553
0.207239359376
0.169934237904
0.0846784679938
0.0825467668113
0.193083645186
0.262071272264
0.144855987967
0.19559482404
0.0336507300504
0.086437388943
0.260630187145
0.0780258945421
0.0980818167972
0.106080523027
0.0980304040492
0.0766127758766
0.117682892149
0.206997375281
0.260671348493
0.125822758643
0.217133412737
-0.01405466846
0.167529297394
0.0698502409508
0.142968981912
0.186138580925
0.0771603836907
0.106281082747
0.13377105108
0.0941242255085
0.0261017850034
0.0603393389559
0.114588233257
0.182656547527
0.200419612906
-0.0338906679646
0.0654573993901
0.0924701844915
0.174562051586
0.0787602290336
0.170960720616
0.27476555217
0.219968065644
-0.00895749215796
0.143814554419
0.0539660371222
0.106074716616
0.0919266509535
0.131673305627
0.158658696202
0.104167307075
0.0494559902633
0.21284007904
0.0491511007829
0.260283453201
0.18638829038
0.279434730206
0.00696252204344
0.272361947633
0.0594034248506
0.161776841747
0.15125755703
0.0606402689507
0.238909403298
0.261345947083
0.213250938137
0.248231234577
0.139163433642
0.0538556218785
0.0678271331709
0.134393798641
0.0955924338613
0.0157710258341
0.0675618264762
0.0351010914342
0.223610969629
0.0463315712407
0.235940778402
0.226986239793
0.218169515236
0.154627202903
0.180065088276
0.245415238694
0.146241230626
0.202996620198
0.254256260498
0.204133475053
0.223677789178
0.200723157809
0.124236388603
0.235180325253
0.120754675912
0.17562289432
0.156765082995
0.234252603187
0.258210124708
0.169525335098
0.00787855372402
0.14268614819
0.15862412074
0.0208537492176
0.174445657425
0.0947827805955
0.272864222996
0.113765116817
0.160225490687
0.0723933503624
0.224829110083
-0.0503797186096
0.0178632319035
0.0931054900877
0.171750499919
0.242740587421
0.0159240781759
0.0322704679047
0.176260879413
0.071643067289
0.12586679378
0.0945275800706
0.0958295142171
0.113234378121
0.191041957046
0.0437288854356
0.24861681254
0.238049107091
0.0903598992738
0.212326386056
0.137276954566
0.138020689739
0.118262672112
0.21328419286
0.0803348983808
0.0899377689278
0.255025978103
0.151464252623
0.230235049867
0.0517068155486
0.0986674846174
0.168475002239
0.105716852387
0.022355151282
0.0388146926046
0.251198498982
0.066195713519
0.145098741918
0.201041694271
0.190028612052
0.0191689450599
0.0879790036494
0.100612015388
0.109818207253
0.16900205035
0.204692959565
0.184612750796
0.152884310222
0.184454306998
0.257309884922
0.10141526925
0.169874588333
0.0740979531157
0.142028580875
0.127208515454
0.169232736364
0.240474690215
0.011888745103
0.217895119287
0.179349022823
0.0108478190347
0.161781562008
0.10357238507
0.21911530485
0.0914349551844
0.154776001763
0.172111324524
0.0671037989548
0.0843897905981
0.231835669155
0.205982266832
0.172103756261
0.195154771593
0.188719615187
0.081749260027
0.161147118951
0.192976333152
0.0789828623482
0.206111299478
0.221301608822
0.174647971987
0.0570248476717
0.0936548584549
0.187552940717
-0.000792684306959
0.190937688896
0.0605195756957
0.165620706121
0.0394438478269
0.19934901265
-0.0164677414816
0.0425995659436
0.174509336125
0.0376121621411
0.149765827203
0.062564871063
0.154329246622
0.142041873612
-0.0166473363873
0.0105647413699
0.210853658367
0.22212739717
0.187299442206
0.194851188823
0.225584632094
0.137909653315
0.0883361662107
0.200133467564
0.254576491157
0.0644044112641
0.217896289286
0.182587601478
0.20902448051
0.260267218589
0.241961419824
0.163596262288
0.0661083398289
0.0455088285062
0.140549929233
0.0185751858744
-0.0139084172455
0.232973595499
0.0374396224758
0.0588600288062
0.144691852186
0.0398819833324
0.138300366485
0.228412161379
0.195736280968
0.0924635434447
0.100867797968
0.00249581356242
0.0926270546829
0.229870966325
0.0930199902152
0.0502026914311
0.0412388792752
0.00678809505021
0.0164900313189
0.108726771545
0.198458058765
0.102335481942
0.147978797142
0.197372434735
0.0127223044578
-0.000751597913433
0.180472059349
0.200543791334
0.111277795426
0.185044761417
0.205662474444
0.00671713154871
-0.0302802397608
0.143464480406
0.0151047535765
0.0128856057982
0.029279026244
0.161383997198
-0.00163930933272
0.0777780356463
-0.00213853829358
0.231614732047
0.115839982672
0.0221409887008
0.00361959776662
0.116585158502
0.0286862342644
-0.0647045060354
0.16905255904
0.0782929286566
0.0058112665554
0.199580200537
0.0340020511279
0.0939711805817
0.231710618004
0.136333799054
0.120935933479
0.228377134428
0.107815353361
-0.0883512663206
0.0282266361986
-0.0155606037939
0.238217039239
0.172501392442
0.00340695952799
0.104197311247
0.124828701936
0.211341036785
0.102628273084
0.0373951750889
0.154769901691
0.196121157869
0.135702980168
-0.0151307675083
-0.00671855914723
0.222756029853
0.192758433733
0.0142490627022
0.031902835421
0.0805316935645
-0.00362612469866
0.107165094605
0.0404410899032
0.0367034134837
0.143506472407
0.00444843470501
0.0398184422375
0.197281977929
0.218381763914
0.0208361683354
0.175911553129
0.0971497107935
0.0791608587809
0.21777712617
0.149565114598
0.0513627582995
-0.0100127549995
0.0462328269059
0.140561020393
0.0725201662733
0.0375237057104
0.100372332999
0.179029434024
0.00308193330483
0.0619059521805
0.232006497298
0.1842610748
0.0258741569069
0.221835114954
0.0291285958064
0.195840232319
0.152862870002
0.16607268604
0.166798247557
0.0385664807109
0.184065256416
0.0667055007378
0.191666865523
0.0847259494254
-0.0358586954115
0.00292162257179
0.0661934789568
0.175417666809
0.153171942688
0.0202575558929
0.0499737442231
0.0153870280833
0.211557002686
0.0134912227703
-0.00857310285633
0.0718822464135
0.209187424478
0.0869414173734
0.136345344709
0.0675816496469
-0.0162555539497
0.125770231447
-0.0145660000164
0.188512164712
0.0620013583349
0.0981344685843
0.131080318212
0.202896028796
0.0101541648252
0.0736961199751
0.154899757655
0.12489049375
0.209155139697
0.0154016766446
0.17810280376
0.124961270083
0.0874592561497
-0.00885855979058
-0.0143546335179
-0.00351451673896
0.0134661165932
0.0764410757969
0.0761084646164
0.0545475792012
0.00184585760127
0.185481135243
0.104927872121
0.0892818265263
0.118669848211
0.131765842599
0.0968830237399
0.0732457888321
-0.00580081787167
0.0516770771181
0.0356970560577
0.105242380832
-0.0455270108948
0.159213174039
0.0186673170081
0.0381427506341
0.0603450001909
0.22824065948
0.107220093206
0.145139890578
0.170552780729
0.0848213805959
0.0687576958175
0.0279405108147
0.189982937852
0.171550381754
0.0960056379419
0.091144923256
-0.0283374910766
0.128837799467
0.180255636112
0.0667254843724
0.127975566591
0.162657165559
0.105606151891
-0.0277842911854
0.0368796853654
-0.00494297127515
-0.0305228694608
0.118923966975
0.22100960276
0.178200484278
0.154636199514
0.122730382995
0.209463995984
0.0161063517684
0.112879087828
-0.0369003640982
0.12895282179
0.0292905188657
0.0931871363337
0.0727241368459
0.0200658534402
0.184536061383
0.174426920613
0.166299100389
0.0465489650841
0.0201540442489
0.0731315000982
0.0472492318537
0.18761988434
0.201774602678
0.107175860394
0.00385693332118
-0.015846106828
0.131051485384
-0.0199543748283
0.158230628687
0.170714760134
0.0717447880449
-0.00238029067855
0.00648952214351
-0.00330427087733
0.00374854009256
-0.0892382430026
0.0466432613994
0.102736654127
0.205457708403
0.163640693784
0.0316146162748
0.173991925878
0.110099428575
0.0132898944739
0.146954908271
0.151153537931
0.148174412422
0.187985224124
0.198183212874
0.0893618940121
-0.00543197012051
-0.0157208681069
0.110920978044
0.0290288912055
0.174575885215
0.0919043557784
-0.00311289727585
-0.00191135786586
0.13043717976
0.210130122729
0.0539153507604
0.0108744091617
0.204797102815
0.0258075386926
0.106557657125
0.0972993682752
0.0676714967187
-0.031334566431
-0.0223111973191
0.0877318260166
0.0609637513187
0.126689546023
0.130723547859
-0.013913296472
0.0343024810047
0.215207777897
0.0719062523454
0.0556034654861
0.201177516733
-0.00579919224505
0.186765244745
0.00685414996458
0.0923195477403
0.201708931233
-0.00625906925404
0.163944315608
-0.0191353995018
-0.0839135007957
0.163807720006
0.00363089800438
0.0262660119904
0.0744900742042
-0.00611355075072
0.112617440161
-0.0466073807599
0.0323914047002
0.191319664429
0.034685331067
0.054164480543
-0.0526173054159
0.171127618616
0.0219585672592
-0.0113038444686
0.101555741444
0.0162989207159
0.0476659945123
-0.040528448486
0.174200006714
0.0395407308449
0.053689171056
0.00552647271494
0.110196203281
0.204839576388
0.0536372463216
0.0890564834856
0.0557603978745
0.136832862248
0.135516367862
0.0914405700017
0.170009383974
0.0366013683425
0.0586649784304
-0.0144370627881
0.149045056336
0.100170218554
0.0972513177167
0.197846042509
0.0213607091553
0.0549654760766
0.183787530058
-0.0108832556545
-0.000269086691843
0.0265518976211
0.0570416091655
0.0809930805766
0.0801801533511
-0.0526955703168
-0.28596467535
0.2047975119
0.114637191587
0.021498485198
0.00352224428577
0.0235654622687
0.00557303693221
0.136238247922
0.0905174811513
0.175371574079
-0.0438426503478
0.033716102349
0.218317133462
0.157375664954
0.167515760213
0.0639336062711
0.150102066394
0.136888377236
-0.028592386371
-0.0157056343514
0.0138068761271
0.10602720419
-0.0107889036526
-0.0224058384126
-0.0881284080273
0.136830304075
0.0252273833598
0.107322305793
-0.108153553557
-0.0222192765614
0.0218594340848
0.110119978506
0.0486948851839
0.11049630941
-0.04065120027
0.0442853842088
0.0869889827543
0.00218354730801
0.0778728355027
0.022094797846
0.161985314953
-0.0262558954135
0.0191593817762
0.000749356529617
0.00174956466432
0.198786702681
0.128044349402
-0.198935339287
0.0708168406094
0.0426751176823
0.13171179162
0.131728497502
0.0241245812515
0.0574162447843
0.159004400174
0.0482431947915
0.219047906507
0.0561902465122
0.0624162144735
0.032861632788
0.0191829216766
-0.0188411438849
0.210791512028
0.147801311893
-0.0319101397283
0.0210905461862
0.0576948758514
0.102332653967
0.071946580202
0.115309149338
0.133157007281
0.184420956352
0.011697828215
0.101703117812
0.129394068475
0.0786371805854
0.124517709571
0.173670440859
-0.0600222831602
0.0454752973959
-0.0419840044003
0.00156465541347
-0.0100469989644
0.0232098691716
0.0336659614006
0.113457438403
0.0503044366674
0.180611377515
-0.0475517271536
0.115646787291
0.0605103760864
0.0658903712542
0.097682602844
0.137176531467
0.188065366138
0.192261443096
0.0536536364437
-0.0390936124331
0.0409281262107
0.0911787021378
0.0729654166256
0.19363722495
0.131270939581
0.130629924347
0.173099119561
0.0587044262201
0.200864472389
0.0739270096861
0.10209483197
-0.0230235047014
0.0857196498277
| | |-MSE =  0.549288255086
| | |-finished  2  forest. fitness = 0.645457678206
0.564188505979
0.531505076535
0.53195683801
0.399921124088
0.325188329828
0.440076213104
0.292780216217
0.314070178894
0.365185327064
0.427468686756
0.507972952548
0.538227921853
0.515396983596
0.175771827182
0.474604529943
0.764702263432
0.31826826619
0.337751540975
0.423923252899
0.376505417837
0.411053185444
0.389480141409
0.260757710159
0.447408860443
0.303729469107
0.486838745389
0.575948339059
0.367996645764
0.562359861904
0.48984077275
0.545360155269
0.381907675209
0.505145376371
0.249205746763
0.253951174842
0.370989500288
0.312641116038
0.44952996798
0.428045088238
0.50186063655
0.395687737967
0.381493125054
0.423350236025
0.329016236825
0.166284682021
0.459134604782
0.497725965607
0.341458228451
0.549832630273
0.337997016731
0.27752747515
0.43365921771
0.336846835678
0.38234626814
0.236080644723
0.278616784442
0.478341436209
0.468826953713
0.410146623624
0.439830261313
0.389823218272
0.251536112332
0.498097262713
0.449577316107
0.277352276011
0.647801820727
0.493543853373
0.461606131842
0.655653699102
0.203443791172
0.48621025214
0.455999259617
0.417584895552
0.439362378635
0.445883135348
0.207728834611
0.556239147048
0.605829650491
0.347236838503
0.461693623026
0.384906784842
0.29068010103
0.24766060459
0.361850421547
0.505347384471
0.435478655868
0.411741282258
0.671263788223
0.430060775553
0.541459120128
0.425064592048
0.534121338784
0.619980938015
0.393429426927
0.498166069931
0.41061604405
0.472173731243
0.416440781191
0.482458502541
0.436753206985
0.702236591884
0.497772942384
0.312618945582
0.320770941441
0.295432405705
0.406860302647
0.269839946444
0.443750880634
0.426061381032
0.44003625938
0.341236852239
0.453329611339
0.225827779718
0.330202589168
0.39694272188
0.590917427779
0.568259157676
0.296128352968
0.350696113811
0.542364450885
0.634010349823
0.50838781727
0.530063944193
0.589828293945
0.272141487039
0.522863766974
0.596202824472
0.442754028959
0.182648529773
0.360563890582
0.427961240383
0.188696407089
0.349724453262
0.363029494099
0.242785273617
0.627921231607
0.494908319902
0.444218603983
0.49259421203
0.453862378848
0.229384877198
0.360746110394
0.207783321449
0.470498074501
0.251132051498
0.334580215797
0.304969312241
0.380748253438
0.529015318367
0.454375257628
0.1613202903
0.165010685174
0.364340646003
0.458284465403
0.516450488092
0.465786730203
0.1130533484
0.481060501995
0.372250121652
0.184572593714
0.475181522102
0.320690080425
0.486915883895
0.304920998147
0.171823402878
0.366628569758
0.451470476946
0.456821215841
0.242642736853
0.327159712056
0.442111482767
0.235385616151
0.405072815709
0.456579901742
0.196688825509
0.201023892654
0.254821792076
0.141031039426
0.418847717755
0.515040825095
0.516806906222
0.223600136711
0.301702973521
0.409755301576
0.540784782836
0.365397673811
0.52096894273
0.271542901197
0.196097768266
0.427095317941
0.509910892795
0.142435390577
0.5132531629
0.534476540758
0.452524789118
0.461000890913
0.454102350531
0.0948186924026
0.137537106245
0.453290443084
0.560106771741
0.104868366129
0.346995349204
0.51797127963
0.275320405232
0.488737006105
0.390206986863
0.620587885161
0.418113729029
0.193495611401
0.213776628733
0.441825192425
0.0485227627626
0.17813065361
0.240500655693
0.549221043595
0.196122138859
0.198043195055
0.463667264514
0.464666449156
0.200479335201
0.476676428346
0.463730521548
0.0732957320695
0.510192267761
0.342505547139
0.228426363043
0.153031911145
0.343661506118
0.380893912941
0.320441339393
0.177732494257
0.147722884503
0.235319303813
0.430813743689
0.424346818449
0.16000052001
0.301745319987
0.255777079413
0.29991754937
0.422042628241
0.187377877876
0.317944150652
0.391964354829
0.137128153839
0.479248900794
0.159622091247
0.437451614407
0.0727810191502
0.0439185594054
0.49830331393
0.198869170796
0.249131966721
0.434854386899
0.388957617073
0.493192247564
0.322322636177
0.388109861626
0.0770229642885
0.297435104916
0.462949372026
0.00298357403875
0.213704479405
0.0194604882647
0.251426486064
0.0441354459086
0.127310357422
0.108281767656
0.0880817581271
0.184554110757
0.444393278006
0.394144554423
0.275538517494
0.16473217009
0.446268529895
0.227151963216
0.258304633804
0.49849614211
0.310397805235
0.118431310676
0.166170754166
0.0777732481321
0.299756886362
0.213875311619
0.320278866977
0.232265316
0.00696812888618
0.170617009437
0.445449557414
0.0916137240384
0.39770683649
0.184152773427
0.0374516533078
0.0838552575973
0.200208988084
0.0127535527384
0.0539129252661
0.269805537326
0.448270060317
-0.0123745357055
0.134583294251
0.462002261037
0.0111299421296
0.318258059262
0.419378523939
0.362068014196
0.294492483638
0.332401731232
0.0639998497676
0.35366989969
0.246274290621
0.419401387437
0.3237195134
0.0312552871381
0.0916844225124
-0.0345791478883
0.262808641143
0.397037290961
0.251684515354
0.265646753752
0.418050140787
0.0944956883738
0.0413485973903
0.351687753041
0.380996794354
0.12482902824
0.101694393671
0.00235233879168
0.144387455416
0.373678351179
0.158042111157
0.363190259336
0.342186593305
0.133560022843
-0.0560625537684
0.0842137508258
-0.0310681029467
0.138476276731
0.283500361081
0.128181639929
0.136721178465
-0.0753484218977
-0.0109812248241
0.108651326328
-0.0970287127086
-0.0589655146045
0.190629943679
0.0188623186407
0.366994996291
-0.0727492674692
0.14214247541
0.271085833907
-0.0697792705475
-0.067475333606
0.35605086918
0.116762447504
-0.0186244106892
0.283714896259
-0.0503355288907
0.408124107237
0.0400152433077
0.134862510427
-0.0724522195627
-0.0586563349084
-0.090226849593
0.214833519394
-0.037237907984
-0.0341814532601
0.070330659078
0.0856283611792
0.413206822025
-0.082063977945
0.452670823729
0.0898567846021
-0.103292090868
0.326272622623
0.318076774823
-0.0384618108965
-0.0392673748853
0.052112231901
0.0812908430714
-0.0187499026474
0.342508857169
0.239382113618
-0.0987880082723
0.0414774043685
0.23942394917
0.443773225212
0.118414260019
0.0255162334772
0.334226277361
0.01739141886
0.386164945955
0.135603238248
0.335258392282
0.238440585185
0.17379125582
0.294977395272
-0.0520386426901
0.105150219587
0.258144904214
0.305258327031
0.162684188012
0.0525734412679
0.247132511663
-0.082501549583
-0.0964617204882
0.213402614477
0.345018161622
-0.0217017435564
-0.0478591363436
0.286474745208
0.0598868014615
0.421177238227
0.115463941859
0.472900359925
0.285545978261
0.0243597520959
-0.0321436975261
-0.0393732008595
0.224087051753
0.27587007736
-0.0959697910277
0.207829169173
-0.0936748715436
0.117588110865
0.0438348862657
0.233716959179
0.0338276224932
0.114020941345
-0.0267502827101
0.249518072475
0.0767693381979
0.357091868288
0.286034851239
0.0460804896101
0.283978989571
0.304653915761
-0.00659299706216
0.220503765404
0.300420095717
0.337164336981
0.331753863607
0.0457900061723
-0.12575004693
0.21849329418
0.316773067468
-0.0275331069833
0.0223888350165
0.0034536639167
0.133823140666
0.0248325211116
0.132614727367
0.303086476775
0.0964959671091
0.0582746316815
-0.0380465621357
0.290336389506
0.268546560826
0.0335784821641
0.220769465134
0.0339778611699
-0.119588971924
0.196110133955
0.158995065131
0.29075822162
0.0314258250324
-0.00930736405152
0.332389297146
0.000915546833523
-0.0476969500116
0.271859850785
0.221039207787
0.129727230617
0.194458788402
0.291518649593
0.174947563072
0.166767245303
0.290748184278
-0.125638145895
0.488355998006
0.15313001254
0.132392952569
-0.13522758141
0.310896425499
-0.0615978508434
-0.137371246156
0.278983822771
0.249512425832
0.074614897636
-0.123177049845
0.00768083810689
-0.101071264893
0.195559431081
0.454998985663
-0.165240459406
-0.153554238836
-0.0640159782059
0.21747870729
0.297485044887
0.156753244697
0.137910964177
-0.0157108370624
-0.102339693832
0.237705517566
0.0789896986883
-0.0175837966167
0.479443646794
0.0849745860498
0.125242081668
0.293864616551
0.214567025429
0.218601761284
-0.170430821806
0.275019119337
0.153465071825
0.139894240109
-0.0789938391151
0.206012210518
0.137726025665
-0.167113595836
-0.0120946187883
0.2004467655
-0.152991823378
-0.211471143834
0.0286422326174
0.189850914732
0.200956581724
-0.158220303419
-0.0534659320814
-0.0947631366508
-0.179696725074
0.0945454347799
-0.119208789675
-0.152971587458
0.24683799463
-0.0397713342319
0.065242069381
0.168217849521
0.0501439555238
-0.050671437607
-0.158552855767
-0.128701223096
-0.150948857617
-0.0420273618059
-0.25118829648
0.0377004043463
0.183987181388
-0.196907330822
-0.0161512785567
0.0131877155011
-0.000657121222332
-0.0990078076685
0.175200910335
-0.187395746938
0.126021192339
0.00549227807396
0.0702242602919
0.00397366162858
0.0908351970227
-0.0490447614942
-0.0707729107623
-0.201363001413
0.309337909678
-0.2887187937
-0.203576380956
-0.0369162676982
-0.0714150076787
-0.0955253369175
0.0989045702203
-0.0298617122266
0.334096858615
-0.00211883235683
-0.000480157801317
0.00907572276081
0.120251389579
0.162368253751
-0.244049639698
-0.0507633893206
-0.209093237391
-0.170111040232
-0.202397666894
-0.182321636366
0.492438009881
-0.160971923393
0.0397397694311
0.0210049162837
-0.107231241278
-0.0256097507517
-0.214963684672
-0.284523249288
-0.0143980200283
0.0249052664063
-0.184705477908
-0.281570484258
-0.211631095604
-0.0556230823536
-0.0729095512257
-0.203731148642
0.134380056364
-0.127272027312
-0.188414130949
-0.158719703384
0.0366701131371
-0.217897877937
-0.150945665528
-0.173098668608
-0.158673111849
-0.200254096649
-0.329075330817
-0.331157048045
-0.230800342329
-0.171877077228
-0.28199507576
0.227709065958
-0.29117384004
-0.113343575867
0.365457507611
-0.0838325002202
-0.321605482861
-0.172704749149
-0.0585885408161
-0.11540354352
-0.0102338588191
-0.0954727620688
-0.153605567105
-0.114800940496
0.096570294763
-0.0624792420207
-0.125901528161
0.115633285791
-0.22988757157
-0.219167536217
-0.0176725528578
0.0982517985271
-0.0293534375218
-0.289818590995
0.190999693385
-0.204088524117
-0.195896197647
-0.200357542049
-0.321007902285
-0.00296902072561
-0.107749766583
-0.336392795075
-0.23391200171
-0.0248219088794
-0.0888099850468
0.428467605929
0.0331998059659
0.00507083015078
-0.106361287018
-0.113903131421
-0.314338142214
-0.117925595819
-0.347992355728
-0.225648092888
-0.343417335635
-0.266457308231
-0.146357753077
-0.315584891249
-0.20985040049
-0.0810375316455
-0.285173590845
-0.148153963808
-0.0980890917451
-0.277933231059
-0.0698103008013
-0.32875573684
-0.240815624313
-0.268393282261
-0.191581350537
-0.133876180759
-0.296741562545
-0.266214298991
-0.210503961391
-0.0186827846733
-0.220120912843
-0.0454467906646
-0.155243687565
-0.41125714039
-0.166660641018
-0.102979612929
-0.143277963651
-0.219838732721
-0.144378262212
-0.396911733648
-0.33716207801
-0.249093196072
-0.387615063364
-0.213750082526
-0.0612602237028
-0.0400316643984
-0.0732713558463
0.0660156490975
-0.289258501756
0.11170448567
-0.051163021451
-0.00301740719444
-0.0215119971423
-0.0217094826525
-0.00534273496499
-0.07465910748
-0.195844098542
-0.258245052269
-0.040525440064
0.048164780723
-0.284641979519
-0.16520481832
-0.0102886696346
-0.0654754923385
-0.221408494368
0.00469246877991
-0.18868009041
-0.315791369613
-0.290635621252
0.0456716349418
0.0392413387989
-0.24760130573
-0.248735214155
0.140637126969
0.00359225116564
0.0804338999834
-0.180518501978
-0.192472196352
-0.286417658108
-0.303214639351
-0.179334994736
0.333566520277
-0.277374860402
-0.104046790657
-0.115256982245
-0.317358097239
0.136304182157
-0.0233323362574
-0.121227706273
-0.213478991179
0.0140118478066
0.102413090043
-0.321694000296
-0.052180168204
-0.314376247375
-0.0645668308126
-0.179093366782
-0.0811377799271
-0.269489554394
-0.256427342533
0.122294255738
-0.108882368155
-0.0559769401422
-0.286813351808
-0.272135296838
-0.097312173209
0.112815962703
-0.136656732148
-0.147311025477
-0.247802130177
-0.170871197385
-0.260053966575
0.331636173501
-0.152538264009
-0.0342085355296
0.0538514464068
0.0170765998552
-0.216436608927
-0.164219146901
0.0294590842506
-0.220719321144
0.0471644135473
-0.272464072557
-0.101200196797
0.0428470905717
-0.0932015103938
-0.0397834028984
-0.347797344814
-0.154423497228
-0.283540536519
-0.169700726767
0.0217900342092
0.111587989105
0.105213551595
-0.206799535939
-0.253426766408
-0.184403243904
-0.171799087917
0.0472624305459
-0.201096975097
0.0306140924359
-0.100962369936
0.020608907562
-0.191050140919
0.101134269347
-0.32038162788
-0.258483315696
-0.26056586156
0.0535328053775
0.156108890541
0.0221576310459
-0.189803215751
0.082607869949
0.0175132571259
-0.297382621791
0.0534452933214
0.119111306826
0.0646619714917
-0.214595481344
-0.0903206794921
-0.164752142311
-0.151340665388
-0.269672658232
-0.227501191843
-0.222746942304
0.0838796937257
-0.206403190105
-0.140427681037
-0.197974425011
-0.00725842196437
0.0383141521987
-0.0714079743006
-0.338226581835
-0.167577841785
0.0507707953381
0.0606555178659
-0.0459797927698
-0.356834974437
-0.0750359625158
-0.29957805897
-0.168805378213
-0.169774264644
-0.165088900034
-0.0445193454924
0.108483087004
-0.234610263432
-0.245378598389
-0.275610862443
-0.0197512432231
-0.210391497512
-0.0375425231558
-0.253483507025
-0.231484840829
-0.139785428531
-0.19500669927
0.0185837443439
-0.133176204295
-0.177616972194
-0.317129737167
0.125172877103
-0.278938798186
-0.0501404128772
-0.221209708969
-0.0809958981918
-0.0872860466279
-0.214706731674
-0.287476304509
-0.193003931369
-0.150850382068
-0.295450483499
-0.211679673739
-0.035033163415
-0.222709880101
-0.128892077129
-0.169687522287
-0.261151850144
-0.271940398906
-0.348818300398
-0.233210595554
-0.353773636208
-0.218359711099
-0.157800551932
-0.318566961961
-0.284074910397
-0.108786686451
-0.0777501758552
-0.363048347811
-0.192946790591
-0.129064821409
-0.311319076459
-0.242817855254
-0.201636316875
-0.258002174114
-0.289191701928
-0.422436607397
-0.27413514446
-0.325154241571
-0.353667370664
-0.26721572035
-0.32004311159
-0.144651544099
-0.191486673248
-0.232588222432
-0.100395581483
-0.25745618104
-0.302965174377
-0.135810032117
-0.145331868806
-0.320304105628
-0.15507538254
-0.251104177077
-0.286672530381
-0.386342512325
-0.296816538899
-0.217074853991
-0.277396319687
-0.378666796721
-0.236109149911
-0.250683409307
-0.267579252288
-0.480738579538
-0.338951136872
-0.42036954137
-0.3982924755
-0.458347160085
-0.238771151539
-0.246771641555
-0.289760602718
-0.526921217736
-0.220560386099
-0.300355540127
-0.414532550054
-0.382659365786
-0.186329101705
-0.262771550872
-0.280043165887
-0.435230568924
-0.488244831095
-0.354128465949
-0.178590882733
-0.292400028195
-0.127504902952
-0.290111489916
-0.248736067788
-0.169089994922
-0.202893702447
-0.226309748383
-0.203492037953
-0.520895377157
-0.32305292451
-0.521218437344
-0.396352817364
-0.391555599453
-0.327905886161
-0.335580327094
-0.600212769374
-0.316224318924
-0.418222862788
-0.311839535276
-0.515453936628
-0.346569310024
-0.344899520038
-0.27902186635
-0.205726732636
-0.260059244988
-0.250743280425
-0.555706399416
-0.339250953999
-0.267708922882
-0.30880031626
-0.329696048514
-0.255406813067
-0.328787350771
-0.320247100902
-0.344346095621
-0.294721063965
-0.509751516907
-0.300418918948
-0.343518619742
-0.280497648404
-0.265023082546
-0.293928604561
-0.247867798904
-0.327654838664
-0.447732573707
-0.267645976134
-0.316741349956
-0.28792760089
-0.343220750891
-0.419106616705
-0.291939672108
-0.2671837077
-0.349954604043
-0.315663812381
-0.506380030033
-0.164486896084
-0.271687947275
-0.190259387434
-0.349989715767
-0.386207261799
-0.313452403844
-0.276725995875
-0.171897674197
-0.370403444035
-0.36157561431
-0.360868595578
-0.324482759218
-0.261098016053
-0.298829202684
-0.250495749209
-0.362239980238
-0.444648245416
-0.264732592987
| | |-MSE =  0.485783250692
| | |-finished  3  forest. fitness = 0.673045681148
-+=> 0 <=+-
>sampler selecting 1 from 3 = [2]
>sampler selecting 1 from 5 = [2]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 4 from 5 = [1, 0, 2, 0]
>sampler selecting 4 from 5 = [0, 1, 3, 4]
>sampler selecting 2 from 3 = [1, 1]
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 4 from 5 = [3, 0, 3, 4]
>sampler selecting 1 from 3 = [0]
>sampler selecting 4 from 5 = [3, 1, 2, 3]
>sampler selecting 2 from 3 = [1, 0]
>sampler selecting 2 from 5 = [3, 2]
>sampler selecting 4 from 5 = [1, 0, 4, 4]
>sampler selecting 3 from 3 = [1, 2, 2]
>sampler selecting 2 from 5 = [3, 2]
>sampler selecting 4 from 5 = [2, 1, 3, 3]
>sampler selecting 2 from 5 = [1, 1]
>sampler selecting 1 from 3 = [2]
>sampler selecting 3 from 5 = [1, 0, 1]
>sampler selecting 3 from 3 = [0, 0, 0]
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 4 from 5 = [4, 2, 3, 1]
>sampler selecting 4 from 5 = [2, 1, 3, 3]
>sampler selecting 2 from 3 = [2, 1]
>sampler selecting 4 from 5 = [2, 0, 1, 4]
>sampler selecting 1 from 5 = [2]
>sampler selecting 3 from 3 = [2, 0, 1]
>sampler selecting 5 from 5 = [2, 3, 1, 1, 3]
>sampler selecting 5 from 5 = [2, 2, 2, 2, 1]
>sampler selecting 2 from 5 = [3, 2]
>sampler selecting 3 from 3 = [1, 0, 1]
>sampler selecting 5 from 5 = [0, 3, 3, 2, 3]
>sampler selecting 1 from 5 = [1]
>sampler selecting 3 from 5 = [0, 4, 0]
>sampler selecting 2 from 3 = [0, 2]
>sampler selecting 5 from 5 = [3, 3, 1, 3, 2]
>sampler selecting 4 from 5 = [3, 0, 1, 4]
>sampler selecting 2 from 3 = [0, 1]
>sampler selecting 4 from 5 = [3, 1, 2, 1]
>sampler selecting 1 from 5 = [3]
>sampler selecting 3 from 3 = [1, 1, 2]
>sampler selecting 2 from 5 = [4, 1]
>sampler selecting 2 from 5 = [3, 3]
>sampler selecting 3 from 5 = [2, 1, 1]
>sampler selecting 3 from 3 = [2, 0, 1]
>sampler selecting 1 from 5 = [0]
>sampler selecting 4 from 5 = [3, 3, 2, 1]
>sampler selecting 3 from 5 = [0, 2, 2]
generation =  0
|-act
| |-starting evaluation, training and validation
| | |-MSE =  0.526513861562
| | |-finished  1  forest. fitness = 0.655087402205
| | |-MSE =  0.502029254323
| | |-finished  2  forest. fitness = 0.665765994319
| | |-MSE =  0.536680718554
| | |-finished  3  forest. fitness = 0.650753268344
| | |-MSE =  0.475350327954
| | |-finished  4  forest. fitness = 0.677805115878
| | |-MSE =  0.417374325126
| | |-finished  5  forest. fitness = 0.705529924081
| | |-MSE =  0.441265835478
| | |-finished  6  forest. fitness = 0.693834527527
| | |-MSE =  0.542276707049
| | |-finished  7  forest. fitness = 0.648392078691
| | |-MSE =  0.304902626569
| | |-finished  8  forest. fitness = 0.766340705918
| | |-MSE =  0.381657873394
| | |-finished  9  forest. fitness = 0.723768176809
| | |-MSE =  0.495707960022
| | |-finished  10  forest. fitness = 0.668579713907
| | |-MSE =  0.418292009246
| | |-finished  11  forest. fitness = 0.70507342175
| | |-MSE =  0.11479851865
| | |-finished  12  forest. fitness = 0.897023079302
| | |-MSE =  0.497630321566
| | |-finished  13  forest. fitness = 0.66772152353
| | |-MSE =  0.363324112388
| | |-finished  14  forest. fitness = 0.733501293576
| | |-MSE =  0.518602811011
| | |-finished  15  forest. fitness = 0.658500032233
avg =  0.701178417205 max =  0.897023079302
|-spawn
selected for crossover -> 0.658500032233 0.705529924081
>sampler distinct selecting 3 from 5 = [0, 3, 1]
selected for crossover -> 0.655087402205 0.705529924081
>sampler distinct selecting 4 from 4 = [2, 1, 0, 0]
selected for crossover -> 0.658500032233 0.723768176809
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.66772152353 0.665765994319
>sampler distinct selecting 2 from 4 = [1, 0]
selected for crossover -> 0.693834527527 0.648392078691
>sampler distinct selecting 3 from 4 = [1, 1, 1]
selected for crossover -> 0.665765994319 0.668579713907
>sampler distinct selecting 2 from 6 = [1, 0]
selected for crossover -> 0.693834527527 0.70507342175
>sampler distinct selecting 3 from 5 = [3, 2, 2]
selected for crossover -> 0.723768176809 0.693834527527
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.693834527527 0.70507342175
>sampler distinct selecting 4 from 5 = [1, 1, 2, 1]
selected for crossover -> 0.66772152353 0.648392078691
>sampler distinct selecting 3 from 3 = [0, 0, 0]
selected for crossover -> 0.66772152353 0.655087402205
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.658500032233 0.766340705918
>sampler distinct selecting 3 from 5 = [3, 0, 2]
selected for crossover -> 0.658500032233 0.705529924081
>sampler distinct selecting 3 from 5 = [1, 1, 2]
selected for crossover -> 0.665765994319 0.668579713907
>sampler distinct selecting 3 from 6 = [2, 0, 1]
selected for crossover -> 0.723768176809 0.650753268344
>sampler distinct selecting 3 from 3 = [2, 1, 0]
|- mutate
>sampler selecting 1 from 3 = [1]
>sampler selecting 4 from 5 = [2, 3, 1, 2]
>sampler selecting 1 from 5 = [4]
generation =  1
|-act
| |-starting evaluation, training and validation
Process Process-24:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
| | |-MSE =  0.443101867656
| | |-finished  1  forest. fitness = 0.692951774516
| | |-MSE =  0.441692298384
| | |-finished  2  forest. fitness = 0.693629286305
| | |-MSE =  0.429903988204
| | |-finished  3  forest. fitness = 0.699347654283
| | |-MSE =  0.443457390316
| | |-finished  4  forest. fitness = 0.692781100924
| | |-MSE =  0.487539493551
| | |-finished  5  forest. fitness = 0.672251059105
| | |-MSE =  0.488690706917
| | |-finished  6  forest. fitness = 0.671731203368
| | |-MSE =  0.462010926802
| | |-finished  7  forest. fitness = 0.683989415994
| | |-MSE =  0.455632259041
| | |-finished  8  forest. fitness = 0.68698669859
| | |-MSE =  0.384479744284
| | |-finished  9  forest. fitness = 0.72229297982
| | |-MSE =  0.436655372703
| | |-finished  10  forest. fitness = 0.69606115635
| | |-MSE =  0.505988999891
| | |-finished  11  forest. fitness = 0.664015474265
| | |-MSE =  0.384092138888
| | |-finished  12  forest. fitness = 0.722495252956
| | |-MSE =  0.395548458149
| | |-finished  13  forest. fitness = 0.7165641538
| | |-MSE =  0.478553627539
| | |-finished  14  forest. fitness = 0.676336645066
avg =  0.646095590356 max =  0.722495252956
|-spawn
selected for crossover -> 0.671731203368 0.664015474265
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.692951774516 0.676336645066
>sampler distinct selecting 4 from 5 = [0, 0, 2, 0]
selected for crossover -> 0.692781100924 0.683989415994
>sampler distinct selecting 2 from 6 = [1, 1]
selected for crossover -> 0.68698669859 0.72229297982
>sampler distinct selecting 3 from 6 = [5, 4, 0]
selected for crossover -> 0.699347654283 0.69606115635
>sampler distinct selecting 3 from 5 = [0, 1, 0]
selected for crossover -> 0.722495252956 0.68698669859
>sampler distinct selecting 1 from 6 = [0]
selected for crossover -> 0.676336645066 0.693629286305
>sampler distinct selecting 3 from 7 = [4, 0, 0]
selected for crossover -> 0.664015474265 0.7165641538
>sampler distinct selecting 3 from 3 = [2, 1, 0]
selected for crossover -> 0.722495252956 0.692781100924
>sampler distinct selecting 3 from 6 = [4, 1, 0]
selected for crossover -> 0.664015474265 0.692951774516
>sampler distinct selecting 3 from 4 = [3, 1, 0]
selected for crossover -> 0.671731203368 0.664015474265
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.692781100924 0.692951774516
>sampler distinct selecting 2 from 6 = [2, 3]
selected for crossover -> 0.72229297982 0.68698669859
>sampler distinct selecting 3 from 6 = [3, 1, 0]
selected for crossover -> 0.72229297982 0.693629286305
>sampler distinct selecting 1 from 8 = [2]
selected for crossover -> 0.676336645066 0.671731203368
>sampler distinct selecting 1 from 3 = [0]
|- mutate
>sampler selecting 2 from 5 = [1, 2]
generation =  2
|-act
| |-starting evaluation, training and validation
Process Process-32:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
| | |-MSE =  0.508452246584
| | |-finished  1  forest. fitness = 0.662931161569
| | |-MSE =  0.529058384855
| | |-finished  2  forest. fitness = 0.653997263875
| | |-MSE =  0.527038119462
| | |-finished  3  forest. fitness = 0.654862499669
| | |-MSE =  0.503032446789
| | |-finished  4  forest. fitness = 0.665321631703
| | |-MSE =  0.479013633283
| | |-finished  5  forest. fitness = 0.676126289506
| | |-MSE =  0.387476725676
| | |-finished  6  forest. fitness = 0.7207328105
| | |-MSE =  0.419803425009
| | |-finished  7  forest. fitness = 0.704322853703
| | |-MSE =  0.346327407105
| | |-finished  8  forest. fitness = 0.742761377896
| | |-MSE =  0.318394485613
| | |-finished  9  forest. fitness = 0.758498318153
| | |-MSE =  0.467019637533
| | |-finished  10  forest. fitness = 0.681654133602
| | |-MSE =  0.394033569848
| | |-finished  11  forest. fitness = 0.717342839964
| | |-MSE =  0.378596490709
| | |-finished  12  forest. fitness = 0.725375413864
| | |-MSE =  0.407325240569
| | |-finished  13  forest. fitness = 0.710567799946
| | |-MSE =  0.47112864358
| | |-finished  14  forest. fitness = 0.679750207002
avg =  0.650282973397 max =  0.758498318153
|-spawn
selected for crossover -> 0.758498318153 0.665321631703
>sampler distinct selecting 2 from 4 = [1, 1]
selected for crossover -> 0.758498318153 0.742761377896
>sampler distinct selecting 4 from 5 = [1, 0, 0, 0]
selected for crossover -> 0.654862499669 0.742761377896
>sampler distinct selecting 1 from 5 = [4]
selected for crossover -> 0.704322853703 0.717342839964
>sampler distinct selecting 1 from 5 = [1]
selected for crossover -> 0.681654133602 0.676126289506
>sampler distinct selecting 3 from 4 = [1, 0, 0]
selected for crossover -> 0.717342839964 0.742761377896
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.676126289506 0.654862499669
>sampler distinct selecting 1 from 6 = [2]
selected for crossover -> 0.681654133602 0.662931161569
>sampler distinct selecting 2 from 2 = [1, 0]
selected for crossover -> 0.679750207002 0.653997263875
>sampler distinct selecting 3 from 4 = [2, 0, 0]
selected for crossover -> 0.717342839964 0.665321631703
>sampler distinct selecting 3 from 4 = [3, 0, 0]
selected for crossover -> 0.654862499669 0.725375413864
>sampler distinct selecting 4 from 4 = [3, 0, 1, 0]
selected for crossover -> 0.742761377896 0.679750207002
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.758498318153 0.653997263875
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.676126289506 0.758498318153
>sampler distinct selecting 2 from 6 = [4, 2]
selected for crossover -> 0.665321631703 0.717342839964
>sampler distinct selecting 4 from 4 = [2, 1, 1, 0]
|- mutate
generation =  3
|-act
| |-starting evaluation, training and validation
Process Process-56:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
Process Process-47:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
Process Process-60:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
| | |-MSE =  0.538000996652
| | |-finished  1  forest. fitness = 0.65019463718
| | |-MSE =  0.53641505439
| | |-finished  2  forest. fitness = 0.650865791208
| | |-MSE =  0.388821810903
| | |-finished  3  forest. fitness = 0.720034774907
| | |-MSE =  0.556256075014
| | |-finished  4  forest. fitness = 0.642567772782
| | |-MSE =  0.377791663265
| | |-finished  5  forest. fitness = 0.725799136881
| | |-MSE =  0.40953720908
| | |-finished  6  forest. fitness = 0.709452715088
| | |-MSE =  0.529534672736
| | |-finished  7  forest. fitness = 0.653793613068
| | |-MSE =  0.327770563399
| | |-finished  8  forest. fitness = 0.753142167454
| | |-MSE =  0.498649052089
| | |-finished  9  forest. fitness = 0.667267629207
| | |-MSE =  0.308465132857
| | |-finished  10  forest. fitness = 0.764254220375
| | |-MSE =  0.470050504059
| | |-finished  11  forest. fitness = 0.680248737876
| | |-MSE =  0.538819108366
| | |-finished  12  forest. fitness = 0.64984896182
avg =  0.55116467719 max =  0.764254220375
|-spawn
selected for crossover -> 0.642567772782 0.653793613068
>sampler distinct selecting 2 from 2 = [0, 0]
selected for crossover -> 0.680248737876 0.650865791208
>sampler distinct selecting 3 from 5 = [2, 2, 0]
selected for crossover -> 0.680248737876 0.720034774907
>sampler distinct selecting 4 from 4 = [0, 0, 0, 0]
selected for crossover -> 0.65019463718 0.680248737876
>sampler distinct selecting 3 from 4 = [0, 0, 0]
selected for crossover -> 0.64984896182 0.753142167454
>sampler distinct selecting 2 from 3 = [0, 0]
selected for crossover -> 0.764254220375 0.720034774907
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.720034774907 0.725799136881
>sampler distinct selecting 3 from 3 = [0, 1, 0]
selected for crossover -> 0.680248737876 0.764254220375
>sampler distinct selecting 4 from 6 = [0, 1, 0, 1]
selected for crossover -> 0.653793613068 0.642567772782
>sampler distinct selecting 1 from 2 = [0]
selected for crossover -> 0.667267629207 0.64984896182
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.720034774907 0.667267629207
>sampler distinct selecting 2 from 3 = [1, 1]
selected for crossover -> 0.650865791208 0.764254220375
>sampler distinct selecting 3 from 5 = [0, 0, 0]
selected for crossover -> 0.642567772782 0.680248737876
>sampler distinct selecting 2 from 4 = [0, 1]
selected for crossover -> 0.753142167454 0.725799136881
>sampler distinct selecting 1 from 4 = [1]
selected for crossover -> 0.764254220375 0.64984896182
>sampler distinct selecting 4 from 4 = [2, 1, 0, 0]
|- mutate
>sampler selecting 3 from 5 = [1, 2, 3]
>sampler selecting 1 from 3 = [1]
>sampler selecting 1 from 5 = [1]
generation =  4
|-act
| |-starting evaluation, training and validation
Process Process-68:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
Process Process-72:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
Process Process-63:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
Process Process-75:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
| | |-MSE =  0.535948693223
| | |-finished  1  forest. fitness = 0.65106341404
| | |-MSE =  0.533030792873
| | |-finished  2  forest. fitness = 0.652302618218
| | |-MSE =  0.527723159707
| | |-finished  3  forest. fitness = 0.654568855389
| | |-MSE =  0.405144446595
| | |-finished  4  forest. fitness = 0.711670606124
| | |-MSE =  0.437828494018
| | |-finished  5  forest. fitness = 0.695493241482
| | |-MSE =  0.485040455735
| | |-finished  6  forest. fitness = 0.673382328501
| | |-MSE =  0.408018921506
| | |-finished  7  forest. fitness = 0.710217728417
| | |-MSE =  0.463545695685
| | |-finished  8  forest. fitness = 0.683272140356
| | |-MSE =  0.505152289641
| | |-finished  9  forest. fitness = 0.664384598743
| | |-MSE =  0.524616375102
| | |-finished  10  forest. fitness = 0.655902702038
| | |-MSE =  0.488327700786
| | |-finished  11  forest. fitness = 0.671895039965
avg =  0.494943551551 max =  0.711670606124
|-spawn
selected for crossover -> 0.655902702038 0.671895039965
>sampler distinct selecting 4 from 4 = [2, 2, 1, 0]
selected for crossover -> 0.683272140356 0.710217728417
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.65106341404 0.673382328501
>sampler distinct selecting 4 from 5 = [3, 3, 1, 0]
selected for crossover -> 0.673382328501 0.654568855389
>sampler distinct selecting 4 from 4 = [1, 0, 0, 0]
selected for crossover -> 0.652302618218 0.683272140356
>sampler distinct selecting 3 from 4 = [0, 2, 0]
selected for crossover -> 0.655902702038 0.664384598743
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.711670606124 0.683272140356
>sampler distinct selecting 1 from 5 = [0]
selected for crossover -> 0.671895039965 0.695493241482
>sampler distinct selecting 2 from 4 = [2, 1]
selected for crossover -> 0.673382328501 0.654568855389
>sampler distinct selecting 4 from 4 = [2, 0, 1, 0]
selected for crossover -> 0.683272140356 0.652302618218
>sampler distinct selecting 1 from 4 = [2]
selected for crossover -> 0.710217728417 0.711670606124
>sampler distinct selecting 1 from 5 = [3]
selected for crossover -> 0.671895039965 0.654568855389
>sampler distinct selecting 1 from 4 = [0]
selected for crossover -> 0.655902702038 0.683272140356
>sampler distinct selecting 1 from 3 = [0]
selected for crossover -> 0.671895039965 0.655902702038
>sampler distinct selecting 2 from 4 = [2, 0]
selected for crossover -> 0.655902702038 0.683272140356
>sampler distinct selecting 2 from 3 = [1, 0]
|- mutate
>sampler selecting 3 from 5 = [1, 3, 2]
generation =  5
|-act
| |-starting evaluation, training and validation
Process Process-79:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
Process Process-78:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
Process Process-76:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
Process Process-84:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 15, in main_async_method
    forest.act_neuro()
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 213, in act_neuro
    self._neuro.train(self.result_row, self.full_output)
  File "/home/martolod/Documents/Learn/UIR/UIR/module.py", line 67, in train
    continueEpochs=OUTCASTING_EPOCHS)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 214, in trainUntilConvergence
    bestverr = self.testOnData(validationData)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/supervised/trainers/backprop.py", line 148, in testOnData
    e, i = dataset._evaluateSequence(self.module.activate, seq, verbose)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/datasets/supervised.py", line 83, in _evaluateSequence
    res = f(input)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 20, in activate
    return super(FeedForwardNetworkComponent, self).activate(inpt)
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 106, in activate
    self.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/modules/module.py", line 73, in forward
    self.outputbuffer[self.offset])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/networks/feedforward.py", line 33, in _forwardImplementation
    c.forward()
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/connection.py", line 77, in forward
    self.outmod.inputbuffer[outmodOffset, self.outSliceFrom:self.outSliceTo])
  File "/usr/local/lib/python2.7/dist-packages/pybrain/structure/connections/full.py", line 19, in _forwardImplementation
    outbuf += dot(reshape(self.params, (self.outdim, self.indim)), inbuf)
  File "/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py", line 172, in reshape
    return reshape(newshape, order=order)
ValueError: total size of new array must be unchanged
